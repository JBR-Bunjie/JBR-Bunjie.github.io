{"title":"利用递归、无循环地打印数组","uid":"7dbcf1e35df66bdccacdaed2ecd943d3","slug":"Algorithm/ReverseOutputWithoutCycle","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:30:50.000Z","comments":true,"path":"api/articles/Algorithm/ReverseOutputWithoutCycle.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"Reverse-Output-Without-Cycle\"><a href=\"#Reverse-Output-Without-Cycle\" class=\"headerlink\" title=\"Reverse Output Without Cycle\"></a>Reverse Output Without Cycle</h1><p>描述：不用循环，不逐一赋值地把一个数组逆序输出</p>\n<p>循环 -&gt; 递归；即用递归去承担原本循环的工作</p>\n<p>即：</p>\n<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\">void Print(int[] arr, int len) &#123;\n    if (len &gt; 0) &#123;\n        Console.printline(arr[len-1] + &quot;\\n&quot;);\n        Print(arr, len - 1);\n    &#125;\n&#125;</code></pre>\n\n\n\n","text":"Reverse Output Without Cycle描述：不用循环，不逐一赋值地把一个数组逆序输出 循环 -&gt; 递归；即用递归去承担原本循环的工作 即： void Print(int[] arr, int len) &#123; if (len &gt; 0) &#12...","link":"","photos":[],"count_time":{"symbolsCount":253,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Reverse-Output-Without-Cycle\"><span class=\"toc-text\">Reverse Output Without Cycle</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"全排列","uid":"4bbde60d3dafb255adad1c9293392efa","slug":"Algorithm/Permutations","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:30:18.000Z","comments":true,"path":"api/articles/Algorithm/Permutations.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Permutations - 全排列顾名思义，就是找出当前元素所有可行的序列 一个朴素的思想是递归，这种方式简单但并不高效快捷 以两个示例来进行算法说明： Example1: 实验五 数据输出 实验准备理解数据输入、输出的技巧。 实验目的理解算法设计的数学基本思想，理解算法程序化...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Hash Function","uid":"991c84bc86acdc32c9243fba302e2655","slug":"Algorithm/Serialization、Persistence and Marshalling","date":"2022-12-23T04:23:23.000Z","updated":"2023-11-01T04:24:43.340Z","comments":true,"path":"api/articles/Algorithm/Serialization、Persistence and Marshalling.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":" 序列化及其逆过程要解决的核心问题是 实现相同的数据在不同格式间的转化； 持久化要解决的则是内存中数据结构到硬盘上数据的转化 ，比如比特流或者xml格式的文件；分布式系统数据层都需要做持久化的工作，要么存到数据库中、要么直接以文件形式保存到硬盘上； marshalling要解决的...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Serialization","slug":"Serialization","count":1,"path":"api/tags/Serialization.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}