{"title":"Merge Sort - 归并排序","uid":"f8c8a85b34fcac6d0fefec2d2d2d9cd5","slug":"Algorithm/SORT/MergeSort/Merge Sort","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:08:56.000Z","comments":true,"path":"api/articles/Algorithm/SORT/MergeSort/Merge Sort.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h2 id=\"Merge-Sort-归并排序\"><a href=\"#Merge-Sort-归并排序\" class=\"headerlink\" title=\"Merge Sort 归并排序\"></a>Merge Sort 归并排序</h2><h3 id=\"Reference：\"><a href=\"#Reference：\" class=\"headerlink\" title=\"Reference：\"></a>Reference：</h3><p><a href=\"https://www.runoob.com/w3cnote/merge-sort.html\">1.5 归并排序 | 菜鸟教程 (runoob.com)</a></p>\n<h3 id=\"算法步骤：\"><a href=\"#算法步骤：\" class=\"headerlink\" title=\"算法步骤：\"></a>算法步骤：</h3><ul>\n<li>概述：</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列；</li>\n<li>设定两个指针，最初位置分别为两个已经排序序列的起始位置；</li>\n<li>比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置；</li>\n<li>重复步骤 3 直到某一指针达到序列尾；</li>\n<li>将另一序列剩下的所有元素直接复制到合并序列尾。</li>\n</ol></blockquote>\n<ul>\n<li><p>图示：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1:</p>\n<p><img src=\"mergeSort.gif\" alt=\"img\"></p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>2:</p>\n<p><img src=\"1024555-20161218163120151-452283750.png\" alt=\"img\"></p></blockquote>\n</li>\n</ul>\n<h3 id=\"实现-迭代法：\"><a href=\"#实现-迭代法：\" class=\"headerlink\" title=\"实现-迭代法：\"></a>实现-迭代法：</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">function mergeSort(arr) &#123;  &#x2F;&#x2F; 采用自上而下的递归方法\n    var len &#x3D; arr.length;\n    if(len &lt; 2) &#123;\n        return arr;\n    &#125;\n    var middle &#x3D; Math.floor(len &#x2F; 2),\n        left &#x3D; arr.slice(0, middle),\n        right &#x3D; arr.slice(middle);\n    return merge(mergeSort(left), mergeSort(right));\n&#125;\n\nfunction merge(left, right)\n&#123;\n    var result &#x3D; [];\n\n    while (left.length &amp;&amp; right.length) &#123;\n        if (left[0] &lt;&#x3D; right[0]) &#123;\n            result.push(left.shift());\n        &#125; else &#123;\n            result.push(right.shift());\n        &#125;\n    &#125;\n\n    while (left.length)\n        result.push(left.shift());\n\n    while (right.length)\n        result.push(right.shift());\n\n    return result;\n&#125;</code></pre>\n\n<h3 id=\"实现-递归法：\"><a href=\"#实现-递归法：\" class=\"headerlink\" title=\"实现-递归法：\"></a>实现-递归法：</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.Arrays;\n\n&#x2F;**\n * Created by chengxiao on 2016&#x2F;12&#x2F;8.\n *&#x2F;\npublic class MergeSort &#123;\n    public static void main(String []args)&#123;\n        int []arr &#x3D; &#123;9,8,7,6,5,4,3,2,1&#125;;\n        sort(arr);\n        System.out.println(Arrays.toString(arr));\n    &#125;\n    public static void sort(int []arr)&#123;\n        int []temp &#x3D; new int[arr.length];&#x2F;&#x2F;在排序前，先建好一个长度等于原数组长度的临时数组，避免递归中频繁开辟空间\n        sort(arr,0,arr.length-1,temp);\n    &#125;\n    private static void sort(int[] arr,int left,int right,int []temp)&#123;\n        if(left&lt;right)&#123;\n            int mid &#x3D; (left+right)&#x2F;2;\n            sort(arr,left,mid,temp);&#x2F;&#x2F;左边归并排序，使得左子序列有序\n            sort(arr,mid+1,right,temp);&#x2F;&#x2F;右边归并排序，使得右子序列有序\n            merge(arr,left,mid,right,temp);&#x2F;&#x2F;将两个有序子数组合并操作\n        &#125;\n    &#125;\n    private static void merge(int[] arr,int left,int mid,int right,int[] temp)&#123;\n        int i &#x3D; left;&#x2F;&#x2F;左序列指针\n        int j &#x3D; mid+1;&#x2F;&#x2F;右序列指针\n        int t &#x3D; 0;&#x2F;&#x2F;临时数组指针\n        while (i&lt;&#x3D;mid &amp;&amp; j&lt;&#x3D;right)&#123;\n            if(arr[i]&lt;&#x3D;arr[j])&#123;\n                temp[t++] &#x3D; arr[i++];\n            &#125;else &#123;\n                temp[t++] &#x3D; arr[j++];\n            &#125;\n        &#125;\n        while(i&lt;&#x3D;mid)&#123;&#x2F;&#x2F;将左边剩余元素填充进temp中\n            temp[t++] &#x3D; arr[i++];\n        &#125;\n        while(j&lt;&#x3D;right)&#123;&#x2F;&#x2F;将右序列剩余元素填充进temp中\n            temp[t++] &#x3D; arr[j++];\n        &#125;\n        t &#x3D; 0;\n        &#x2F;&#x2F;将temp中的元素全部拷贝到原数组中\n        while(left &lt;&#x3D; right)&#123;\n            arr[left++] &#x3D; temp[t++];\n        &#125;\n    &#125;\n&#125;</code></pre>\n\n\n\n<h2 id=\"用例1：\"><a href=\"#用例1：\" class=\"headerlink\" title=\"用例1：\"></a>用例1：</h2><p><a href=\"https://blog.csdn.net/imred/article/details/82875443\">计算二分图（bipartite graph）交叉点（crossing）的数量_imred的博客-CSDN博客_bipartite graph</a></p>\n","text":"Merge Sort 归并排序Reference：1.5 归并排序 | 菜鸟教程 (runoob.com) 算法步骤： 概述： 申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列； 设定两个指针，最初位置分别为两个已经排序序列的起始位置； 比较两个指针所指向的元...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Sort","slug":"Sort","count":3,"path":"api/tags/Sort.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Merge-Sort-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">Merge Sort 归并排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Reference%EF%BC%9A\"><span class=\"toc-text\">Reference：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%AD%A5%E9%AA%A4%EF%BC%9A\"><span class=\"toc-text\">算法步骤：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0-%E8%BF%AD%E4%BB%A3%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">实现-迭代法：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0-%E9%80%92%E5%BD%92%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">实现-递归法：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8%E4%BE%8B1%EF%BC%9A\"><span class=\"toc-text\">用例1：</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"LUA急速入门","uid":"c501575a20c82b47e7d6e471fd5a77bc","slug":"Language Learning/LUA/急速入门","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T02:08:45.000Z","comments":true,"path":"api/articles/Language Learning/LUA/急速入门.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"安装# for ubuntu apt install lua5.4 # for windows # Go to github to install lua_for_windows 代码执行交互式编程lua5.4已经支持了交互式编程，这样我们可以直接在命令行中输入程序语句并立即查看...","link":"","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"Coding Language","slug":"Coding-Language","count":4,"path":"api/categories/Coding-Language.json"}],"tags":[{"name":"LUA","slug":"LUA","count":1,"path":"api/tags/LUA.json"},{"name":"Coding Language","slug":"Coding-Language","count":1,"path":"api/tags/Coding-Language.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"创建Django项目","uid":"1223d7521828be4194e268189685670f","slug":"Web Dev/Back End/django/CreateYourProject","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T09:08:31.086Z","comments":true,"path":"api/articles/Web Dev/Back End/django/CreateYourProject.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Step 0. figure out the environment of your computer editor: vs code OS: windows 11 Shell: powershell Step1. create the virtual environment w...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Backend","slug":"Backend","count":1,"path":"api/categories/Backend.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":1,"path":"api/tags/Django.json"},{"name":"Windows Powershell","slug":"Windows-Powershell","count":1,"path":"api/tags/Windows-Powershell.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}