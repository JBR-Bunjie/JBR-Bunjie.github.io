{"title":"Sugiyama Algorithm","uid":"9fd0e4d3dba46b1add7af94a3f9b782a","slug":"Algorithm/Sugiyama","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:32:35.000Z","comments":true,"path":"api/articles/Algorithm/Sugiyama.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1\r\nid=\"划时代的自动布局算法sugiyama算法\">划时代的自动布局算法：sugiyama算法</h1>\r\n<h2 id=\"sugiyama-algorithm-steps\">sugiyama algorithm steps</h2>\r\n<p>of the framework is to divide the task of drawing a graph into\r\nseveral subproblems, most of which closely resemble other well known\r\nproblems within computer science. That way one can use algorithms for\r\nthe similar problems to solve the Sugiyama subproblems and thereby\r\nsimplify the graph layout process. The different steps of the method are\r\nillustrated in figure 2. They are the following:</p>\r\n<ul>\r\n<li>Cycle removal</li>\r\n</ul>\r\n<p>First the possibly cyclic graph must be made acyclic by removing\r\ncycles, done by reversing some edges.</p>\r\n<ul>\r\n<li>Layer assignment</li>\r\n</ul>\r\n<p>Second, the vertices are assigned to layers and dummy vertices and\r\ndummy edges are introduced for every edge that spans over more than two\r\nlayers so as to create a proper layering [2], i.e. one where every edge\r\nhas its endpoints in adjacent layers.</p>\r\n<ul>\r\n<li>Vertex ordering</li>\r\n</ul>\r\n<p>Third, the vertices are ordered within their layers to minimise edge\r\ncrossings.</p>\r\n<ul>\r\n<li>Coordinate assignment</li>\r\n</ul>\r\n<p>Fourth and last, the vertices are assigned coordinates to create a\r\nbalanced graph.</p>\r\n<h2 id=\"sugiyama-barycenter算法内容\">sugiyama barycenter算法内容</h2>\r\n<p>两层间的情况：</p>\r\n<p>n层间的情况：</p>\r\n<h2 id=\"纯python实现\">纯python实现：</h2>\r\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"></code></pre>\r\n<p>原论文地址：</p>\r\n<p><a href=\"https://ieeexplore.ieee.org/document/4308636\">Methods for\r\nVisual Understanding of Hierarchical System Structures | IEEE Journals\r\n&amp; Magazine | IEEE Xplore</a></p>\r\n<p>所实现算法的仓库：</p>\r\n<p>视频教程：</p>\r\n<p><a\r\nhref=\"https://www.youtube.com/playlist?list=PLubYOWSl9mIvxe_HwoSyT-oXgkOmB1u3V\">(40)\r\nHierarchical Drawings: Sugiyama Framework | Visualization of Graphs -\r\nLecture 8 - YouTube</a></p>\r\n<p>More Resource:</p>\r\n<p><a\r\nhref=\"https://publications.lib.chalmers.se/records/fulltext/161388.pdf\">161388.pdf\r\n(chalmers.se)</a></p>\r\n","text":"划时代的自动布局算法：sugiyama算法 sugiyama algorithm steps of the framework is to divide the task of drawing a graph into several subproblems, most of w...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Auto Layout","slug":"Auto-Layout","count":1,"path":"api/tags/Auto-Layout.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%92%E6%97%B6%E4%BB%A3%E7%9A%84%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%AE%97%E6%B3%95sugiyama%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">划时代的自动布局算法：sugiyama算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sugiyama-algorithm-steps\"><span class=\"toc-text\">sugiyama algorithm steps</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sugiyama-barycenter%E7%AE%97%E6%B3%95%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">sugiyama barycenter算法内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%AFpython%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">纯python实现：</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"三角形面积计算","uid":"224d76f53823245ff06db9fdf896bcc4","slug":"Algorithm/三角形面积计算","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:34:16.000Z","comments":true,"path":"api/articles/Algorithm/三角形面积计算.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"求面积 1.底高求面积 已知三角形底a，高h，则 2.海伦公式 已知三角形三边a,b,c，则 3.边角公式 已知三角形两边a,b,这两边夹角，则有： 即两夹边之积乘夹角正弦值的一半。 4.内切圆面积公式 设三角形三边分别为a、b、c，内切圆半径为r 则三角形面积 5.外接圆面积公...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"triangle area","slug":"triangle-area","count":1,"path":"api/tags/triangle-area.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"中国邮递员问题","uid":"08152463b75b8ab3478d28a28a35a8b9","slug":"Algorithm/The Chinese Postman Problem","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:32:40.000Z","comments":true,"path":"api/articles/Algorithm/The Chinese Postman Problem.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"The Route of the Postman Reference The Chinese-Postman-Method (tum.de) 邮递员问题 - 维基百科，自由的百科全书 (wikipedia.org) 中国邮递员问题 | Junnor.G (cfonheart.gi...","link":"","photos":[],"count_time":{"symbolsCount":839,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Shortest Route","slug":"Shortest-Route","count":1,"path":"api/tags/Shortest-Route.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}