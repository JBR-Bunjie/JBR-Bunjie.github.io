{"title":"Sugiyama Algorithm","uid":"9fd0e4d3dba46b1add7af94a3f9b782a","slug":"Algorithm/Sugiyama","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:32:35.000Z","comments":true,"path":"api/articles/Algorithm/Sugiyama.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1\r\nid=\"划时代的自动布局算法sugiyama算法\">划时代的自动布局算法：sugiyama算法</h1>\r\n<h2 id=\"sugiyama-algorithm-steps\">sugiyama algorithm steps</h2>\r\n<p>of the framework is to divide the task of drawing a graph into\r\nseveral subproblems, most of which closely resemble other well known\r\nproblems within computer science. That way one can use algorithms for\r\nthe similar problems to solve the Sugiyama subproblems and thereby\r\nsimplify the graph layout process. The different steps of the method are\r\nillustrated in figure 2. They are the following:</p>\r\n<ul>\r\n<li>Cycle removal</li>\r\n</ul>\r\n<p>First the possibly cyclic graph must be made acyclic by removing\r\ncycles, done by reversing some edges.</p>\r\n<ul>\r\n<li>Layer assignment</li>\r\n</ul>\r\n<p>Second, the vertices are assigned to layers and dummy vertices and\r\ndummy edges are introduced for every edge that spans over more than two\r\nlayers so as to create a proper layering [2], i.e. one where every edge\r\nhas its endpoints in adjacent layers.</p>\r\n<ul>\r\n<li>Vertex ordering</li>\r\n</ul>\r\n<p>Third, the vertices are ordered within their layers to minimise edge\r\ncrossings.</p>\r\n<ul>\r\n<li>Coordinate assignment</li>\r\n</ul>\r\n<p>Fourth and last, the vertices are assigned coordinates to create a\r\nbalanced graph.</p>\r\n<h2 id=\"sugiyama-barycenter算法内容\">sugiyama barycenter算法内容</h2>\r\n<p>两层间的情况：</p>\r\n<p>n层间的情况：</p>\r\n<h2 id=\"纯python实现\">纯python实现：</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>原论文地址：</p>\r\n<p><a href=\"https://ieeexplore.ieee.org/document/4308636\">Methods for\r\nVisual Understanding of Hierarchical System Structures | IEEE Journals\r\n&amp; Magazine | IEEE Xplore</a></p>\r\n<p>所实现算法的仓库：</p>\r\n<p>视频教程：</p>\r\n<p><a\r\nhref=\"https://www.youtube.com/playlist?list=PLubYOWSl9mIvxe_HwoSyT-oXgkOmB1u3V\">(40)\r\nHierarchical Drawings: Sugiyama Framework | Visualization of Graphs -\r\nLecture 8 - YouTube</a></p>\r\n<p>More Resource:</p>\r\n<p><a\r\nhref=\"https://publications.lib.chalmers.se/records/fulltext/161388.pdf\">161388.pdf\r\n(chalmers.se)</a></p>\r\n","text":"划时代的自动布局算法：sugiyama算法 sugiyama algorithm steps of the framework is to divide the task of drawing a graph into several subproblems, most of w...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Auto Layout","slug":"Auto-Layout","count":1,"path":"api/tags/Auto-Layout.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%92%E6%97%B6%E4%BB%A3%E7%9A%84%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%AE%97%E6%B3%95sugiyama%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">划时代的自动布局算法：sugiyama算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sugiyama-algorithm-steps\"><span class=\"toc-text\">sugiyama algorithm steps</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sugiyama-barycenter%E7%AE%97%E6%B3%95%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">sugiyama barycenter算法内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%AFpython%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">纯python实现：</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"利用递归、无循环地打印数组","uid":"7dbcf1e35df66bdccacdaed2ecd943d3","slug":"Algorithm/ReverseOutputWithoutCycle","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:30:50.000Z","comments":true,"path":"api/articles/Algorithm/ReverseOutputWithoutCycle.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Reverse Output Without Cycle 描述：不用循环，不逐一赋值地把一个数组逆序输出 循环 -&gt; 递归；即用递归去承担原本循环的工作 即： 123456void Print(int[] arr, int len) &#123; if (len &gt; ...","link":"","photos":[],"count_time":{"symbolsCount":257,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Hash Function","uid":"991c84bc86acdc32c9243fba302e2655","slug":"Algorithm/Serialization、Persistence and Marshalling","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:31:23.000Z","comments":true,"path":"api/articles/Algorithm/Serialization、Persistence and Marshalling.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":" 序列化及其逆过程要解决的核心问题是 实现相同的数据在不同格式间的转化； 持久化要解决的则是内存中数据结构到硬盘上数据的转化 ，比如比特流或者xml格式的文件；分布式系统数据层都需要做持久化的工作，要么存到数据库中、要么直接以文件形式保存到硬盘上； marshalling要解决的...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Serialization","slug":"Serialization","count":1,"path":"api/tags/Serialization.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}