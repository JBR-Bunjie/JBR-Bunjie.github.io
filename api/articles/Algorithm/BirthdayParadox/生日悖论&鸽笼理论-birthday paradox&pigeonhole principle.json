{"title":"Birthday Paradox","uid":"b0298187d3b43e42af9c0e2b93f65724","slug":"Algorithm/BirthdayParadox/生日悖论&鸽笼理论-birthday paradox&pigeonhole principle","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:27:36.000Z","comments":true,"path":"api/articles/Algorithm/BirthdayParadox/生日悖论&鸽笼理论-birthday paradox&pigeonhole principle.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h3 id=\"生日悖论-birthday-paradox\">生日悖论-birthday paradox</h3>\r\n<p>一个很简单的概率关系，由于其反直觉而称为“悖论”：</p>\r\n<p>一个房间要多少人，则两个人的生日相同的概率</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th>对应情况</th>\r\n<th>所需人数</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td>大于50%？</td>\r\n<td>23人</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>大于70%？</td>\r\n<td>30人</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>大于97%？</td>\r\n<td>50人</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>大于99%？</td>\r\n<td>57人</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>可以发现，概率大于99%所需的人数 只是总数的1 / 6不到而已！</p>\r\n<p>每个人生日 <strong>都不同</strong> 的 <strong>阶乘</strong>\r\n形式为：</p>\r\n<figure>\r\n<img src=\"birthday%20paradox%20equation01.svg\" alt=\"img\" />\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<p>故至少有两个人生日相同的概率就是上述结果的补，即：<img\r\nsrc=\"birthday%20paradox%20equation02.svg\" alt=\"img\" /></p>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/67364213\">生日悖论 - 知乎\r\n(zhihu.com)</a></p>\r\n<h3 id=\"鸽笼理论-pigeonhole-principle\">鸽笼理论-pigeonhole\r\nprinciple</h3>\r\n<p>又叫抽屉原理</p>\r\n<p>如果有n种n+1个物品，那么至少有一种有两个物品</p>\r\n<p><del>这种基本概念也没什么太多好阐释的，主要是鸽笼定理在思维上可能会造成一些奇怪的突破口</del></p>\r\n<p>有几个衍生的阐述形式：</p>\r\n<p>形式一：如果把n+1(n是正整数)个对象放入n个盒子里，那么至少有一个盒子中放入两个或者两个以上的对象。<br />证明：假设每个盒子中都少于两个对象，那么总数不可能为n+1个对象，与前提矛盾。</p>\r\n<p>形式二：如果把m个对象放到n个盒子里（m,n都是正整数），那么至少有一个盒子中放入[m-1/n]+1个的对象。<br />注：[m-1/n]中的[]代表着m-1/n的整数部分。<br />证明：假设每个盒子中都少于或者等于[m-1/n]对象，那么对象的总数将不会多于n*[m-1/n]个，从而少于或者等于m-1个，与前提矛盾。</p>\r\n<h3 id=\"应用生日攻击\">应用——生日攻击</h3>\r\n<p>生日悖论与鸽笼理论组合的可被应用于设计密码学攻击方法——生日攻击。</p>\r\n<p>即 N 位长度的哈希表可能发生碰撞测试次数不是 2^N 次而是只有 2^(N/2) +\r\n1 次</p>\r\n<blockquote>\r\n<p>如果输出是256位，我们随机地选择输入，并计算哈希值，在检验第2^256 +\r\n1个输入之前便很可能找到碰撞。</p>\r\n<p>实际上，如果我们随机选择2^128 +\r\n1个输入，找到至少两个相同哈希值的概率为99%，而2 ^ 130 + 1 则高达\r\n99.8%。</p>\r\n</blockquote>\r\n<p>具体场景可以看：<a\r\nhref=\"https://blog.csdn.net/ddk3001/article/details/52647990\">密码学：生日攻击_Linuxest-CSDN博客_生日攻击</a></p>\r\n<h3 id=\"算法题\">算法题</h3>\r\n<p><a\r\nhref=\"https://blog.csdn.net/qq_35541672/article/details/82427372\">鸽笼原理&amp;容斥原理_LazyCrazyCat的博客-CSDN博客_鸽笼定理</a></p>\r\n","text":"生日悖论-birthday paradox 一个很简单的概率关系，由于其反直觉而称为“悖论”： 一个房间要多少人，则两个人的生日相同的概率 对应情况 所需人数 大于50%？ 23人 大于70%？ 30人 大于97%？ 50人 大于99%？ 57人 可以发现，概率大于99%所需的人...","link":"","photos":[],"count_time":{"symbolsCount":966,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%97%A5%E6%82%96%E8%AE%BA-birthday-paradox\"><span class=\"toc-text\">生日悖论-birthday paradox</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%B8%BD%E7%AC%BC%E7%90%86%E8%AE%BA-pigeonhole-principle\"><span class=\"toc-text\">鸽笼理论-pigeonhole\r\nprinciple</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E7%94%9F%E6%97%A5%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">应用——生日攻击</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E9%A2%98\"><span class=\"toc-text\">算法题</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Noise Generate","uid":"e93f281683f5f1e8c6e0ab2a6dab5abb","slug":"Algorithm/NOISE/Noise","date":"2022-12-23T04:23:23.000Z","updated":"2023-11-01T04:26:53.242Z","comments":true,"path":"api/articles/Algorithm/NOISE/Noise.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"噪声 - Noise Randomness is needed to make things unpredictable, varied, and appear natural. ——catlike coding 在任何游戏中，噪声都是不可缺少的存在。因此，了解这些噪声的特点、用...","link":"","photos":[],"count_time":{"symbolsCount":916,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Noise","slug":"Noise","count":1,"path":"api/tags/Noise.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"售货员问题","uid":"ab5351d849d735008d49a961e1e5262a","slug":"Algorithm/DP/Traveling Salesman Problem","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T16:10:04.000Z","comments":true,"path":"api/articles/Algorithm/DP/Traveling Salesman Problem.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"一、题目 一个售货员必须访问n个城市，恰好访问每个城市一次，并最终回到出发城市。 售货员从城市i到城市j的旅行费用是一个整数，旅行所需的全部费用是他旅行经过的的各边费用之和，而售货员希望使整个旅行费用最低。 （等价于求图的最短哈密尔顿回路问题）令G=(V, E)是一个带权重的有向...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"DP","slug":"DP","count":1,"path":"api/tags/DP.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}