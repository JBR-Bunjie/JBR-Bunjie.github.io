{"title":"Birthday Paradox","uid":"b0298187d3b43e42af9c0e2b93f65724","slug":"Algorithm/BirthdayParadox/生日悖论&鸽笼理论-birthday paradox&pigeonhole principle","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:27:36.000Z","comments":true,"path":"api/articles/Algorithm/BirthdayParadox/生日悖论&鸽笼理论-birthday paradox&pigeonhole principle.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h3 id=\"生日悖论-birthday-paradox\"><a href=\"#生日悖论-birthday-paradox\" class=\"headerlink\" title=\"生日悖论-birthday paradox\"></a>生日悖论-birthday paradox</h3><p>一个很简单的概率关系，由于其反直觉而称为“悖论”：</p>\n<p>一个房间要多少人，则两个人的生日相同的概率</p>\n<table>\n<thead>\n<tr>\n<th>对应情况</th>\n<th>所需人数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>大于50%？</td>\n<td>23人</td>\n</tr>\n<tr>\n<td>大于70%？</td>\n<td>30人</td>\n</tr>\n<tr>\n<td>大于97%？</td>\n<td>50人</td>\n</tr>\n<tr>\n<td>大于99%？</td>\n<td>57人</td>\n</tr>\n</tbody></table>\n<p>可以发现，概率大于99%所需的人数 只是总数的1 &#x2F; 6不到而已！</p>\n<p>每个人生日 <strong>都不同</strong> 的 <strong>阶乘</strong> 形式为：</p>\n<p>![img](birthday paradox equation01.svg)</p>\n<p>故至少有两个人生日相同的概率就是上述结果的补，即：![img](birthday paradox equation02.svg)</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/67364213\">生日悖论 - 知乎 (zhihu.com)</a></p>\n<h3 id=\"鸽笼理论-pigeonhole-principle\"><a href=\"#鸽笼理论-pigeonhole-principle\" class=\"headerlink\" title=\"鸽笼理论-pigeonhole principle\"></a>鸽笼理论-pigeonhole principle</h3><p>又叫抽屉原理</p>\n<p>如果有n种n+1个物品，那么至少有一种有两个物品</p>\n<p><del>这种基本概念也没什么太多好阐释的，主要是鸽笼定理在思维上可能会造成一些奇怪的突破口</del></p>\n<p>有几个衍生的阐述形式：</p>\n<p>形式一：如果把n+1(n是正整数)个对象放入n个盒子里，那么至少有一个盒子中放入两个或者两个以上的对象。<br />证明：假设每个盒子中都少于两个对象，那么总数不可能为n+1个对象，与前提矛盾。</p>\n<p>形式二：如果把m个对象放到n个盒子里（m,n都是正整数），那么至少有一个盒子中放入[m-1&#x2F;n]+1个的对象。<br />注：[m-1&#x2F;n]中的[]代表着m-1&#x2F;n的整数部分。<br />证明：假设每个盒子中都少于或者等于[m-1&#x2F;n]对象，那么对象的总数将不会多于n*[m-1&#x2F;n]个，从而少于或者等于m-1个，与前提矛盾。</p>\n<h3 id=\"应用——生日攻击\"><a href=\"#应用——生日攻击\" class=\"headerlink\" title=\"应用——生日攻击\"></a>应用——生日攻击</h3><p>生日悖论与鸽笼理论组合的可被应用于设计密码学攻击方法——生日攻击。</p>\n<p>即 N 位长度的哈希表可能发生碰撞测试次数不是 2^N 次而是只有 2^(N&#x2F;2) + 1 次</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果输出是256位，我们随机地选择输入，并计算哈希值，在检验第2^256 + 1个输入之前便很可能找到碰撞。</p>\n<p>实际上，如果我们随机选择2^128 + 1个输入，找到至少两个相同哈希值的概率为99%，而2 ^ 130 + 1 则高达 99.8%。</p></blockquote>\n<p>具体场景可以看：<a href=\"https://blog.csdn.net/ddk3001/article/details/52647990\">密码学：生日攻击_Linuxest-CSDN博客_生日攻击</a></p>\n<h3 id=\"算法题\"><a href=\"#算法题\" class=\"headerlink\" title=\"算法题\"></a>算法题</h3><p><a href=\"https://blog.csdn.net/qq_35541672/article/details/82427372\">鸽笼原理&amp;容斥原理_LazyCrazyCat的博客-CSDN博客_鸽笼定理</a></p>\n","text":"生日悖论-birthday paradox一个很简单的概率关系，由于其反直觉而称为“悖论”： 一个房间要多少人，则两个人的生日相同的概率 对应情况 所需人数 大于50%？ 23人 大于70%？ 30人 大于97%？ 50人 大于99%？ 57人 可以发现，概率大于99%所需的人数...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%97%A5%E6%82%96%E8%AE%BA-birthday-paradox\"><span class=\"toc-text\">生日悖论-birthday paradox</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%B8%BD%E7%AC%BC%E7%90%86%E8%AE%BA-pigeonhole-principle\"><span class=\"toc-text\">鸽笼理论-pigeonhole principle</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E7%94%9F%E6%97%A5%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">应用——生日攻击</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E9%A2%98\"><span class=\"toc-text\">算法题</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"卡拉彼丘游戏设计的一点思考","uid":"7c79e745614c96c9bf175ffbbcfcb82c","slug":"游戏设计分析/卡拉彼丘的游戏设计分析","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-31T00:36:52.163Z","comments":true,"path":"api/articles/游戏设计分析/卡拉彼丘的游戏设计分析.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"卡拉彼丘游戏设计迷思独特的战术动作：弦化机动性、拉人、回复与局内突破的天然矛盾长时间的 ttk","link":"","photos":[],"count_time":{"symbolsCount":47,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Noise Generate","uid":"e93f281683f5f1e8c6e0ab2a6dab5abb","slug":"Algorithm/NOISE/Noise","date":"2022-12-23T04:23:23.000Z","updated":"2023-11-01T04:26:53.242Z","comments":true,"path":"api/articles/Algorithm/NOISE/Noise.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"噪声 - Noise Randomness is needed to make things unpredictable, varied, and appear natural.——catlike coding 在任何游戏中，噪声都是不可缺少的存在。因此，了解这些噪声的特点、用途...","link":"","photos":[],"count_time":{"symbolsCount":890,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Noise","slug":"Noise","count":1,"path":"api/tags/Noise.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}