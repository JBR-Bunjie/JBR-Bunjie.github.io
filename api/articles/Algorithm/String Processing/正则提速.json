{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Algorithm/String Processing/正则提速","date":"2023-03-07T16:14:44.940Z","updated":"2022-04-06T08:48:52.000Z","comments":true,"path":"api/articles/Algorithm/String Processing/正则提速.json","keywords":null,"cover":null,"content":"<ol>\n<li><p>让匹配更快失败，尤其是匹配很长的字符串时，匹配失败的位置要比成功的位置多得多。</p>\n</li>\n<li><p>以简单、必须的字元开始，排除明显不匹配的位置，如锚点(^或$)，特殊字符(x或\\u263A)字符类([a-z]或\\d之类的速记符)，和单词边界(\\b)；尽量避免使用分组、选择、重复量词开头，如/one|two/、\\s、\\s{1,}等。</p>\n</li>\n<li><p>使用量词模式时，尽量让重复部分具体化，让字元互斥，如用”[^”\\r\\n]<em>”代替”.</em>?”（这个依赖回溯）。</p>\n</li>\n<li><p>减少分支数量、缩小分支范围，用字符集和选项组件来减少分支的出现，或把分支在正则上出现的位置推后，把分支中最常出现的情况放在分支的最前面。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cat|bat -&gt; [cb]at;red|read -&gt; rea?d;red|raw -&gt; r(?:ed|aw); \n\n(.|\\r|\\n) -&gt; [\\s\\S]</code></pre></li>\n<li><p>精确匹配需要的文本以减少后续的处理，如果需要引用匹配的一部分，可使用捕获，然后通过反向引用来处理。</p>\n</li>\n<li><p>暴露必需的字元，用<code>/^(ab|cd)/</code>而不是<code>/(^ab|^cd)/</code>。</p>\n</li>\n<li><p>使用合适的量词，基于预期的回溯数量，使用合适的量词类型。</p>\n</li>\n<li><p>把正则表达式赋值给变量以便复用和提升提升性能，这样可以让正则减少不必要的编译过程。while (/regex1/.test(str1)) {/regex2/.exec(str2);…}用下面的代替上面的   var regex1 = /regex1/,regex2 = /regex2/;while (regex1.test(str1)) {regex2.exec(str2);…}</p>\n</li>\n<li><p>将复杂的正则表达式拆分成简单的片段，每个正则只在上一个成功的匹配中查找，更高效，而且可以减少回溯。</p>\n</li>\n<li><p>使用非捕获组，因为捕获组需要消耗时间和内存来记录反向引用，并不断更新，如果不需要反向引用，可用非捕获组(?:…)代替捕获组(…)；当需要全文匹配的反向引用时，可用regex.exec()返回的结果或者在替换字符串是使用$&amp;。   此优化在firefox中效果较小，但其他浏览器中处理长字符串时有较大影响</p>\n</li>\n</ol>\n","text":" 让匹配更快失败，尤其是匹配很长的字符串时，匹配失败的位置要比成功的位置多得多。 以简单、必须的字元开始，排除明显不匹配的位置，如锚点(^或$)，特殊字符(x或\\u263A)字符类([a-z]或\\d之类的速记符)，和单词边界(\\b)；尽量避免使用分组、选择、重复量词开头，如/on...","link":"","photos":[],"count_time":{"symbolsCount":896,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Algorithm/String Processing/自动机","date":"2023-03-07T16:14:44.945Z","updated":"2022-04-06T08:45:20.000Z","comments":true,"path":"api/articles/Algorithm/String Processing/自动机.json","keywords":null,"cover":null,"text":"解决正则过慢的一个解法——自动机在字符串处理中的一种实现 Flash Text项目地址vi3k6i5/flashtext: Extract Keywords from sentence or Replace keywords in sentences. (github.com) ...","link":"","photos":[],"count_time":{"symbolsCount":194,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Algorithm/String Processing/KMP","date":"2023-03-07T16:14:44.930Z","updated":"2022-04-09T10:09:54.000Z","comments":true,"path":"api/articles/Algorithm/String Processing/KMP.json","keywords":null,"cover":[],"text":"KMP算法KMP算法作用简介：在计算机科学中，Knuth-Morris-Pratt字符串查找算法（简称为KMP算法）可在一个字符串S内查找一个词W的出现位置。一个词在不匹配时本身就包含足够的信息来确定下一个匹配可能的开始位置，此算法利用这一特性以避免重新检查先前配对的字符。 KM...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}