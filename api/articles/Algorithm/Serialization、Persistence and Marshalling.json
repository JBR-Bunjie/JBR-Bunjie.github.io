{"title":"Hash Function","uid":"991c84bc86acdc32c9243fba302e2655","slug":"Algorithm/Serialization、Persistence and Marshalling","date":"2022-12-23T04:23:23.000Z","updated":"2023-11-07T12:41:57.730Z","comments":true,"path":"api/articles/Algorithm/Serialization、Persistence and Marshalling.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<ol type=\"1\">\r\n<li><p>序列化及其逆过程要解决的核心问题是\r\n实现相同的数据在不同格式间的转化；</p></li>\r\n<li><p>持久化要解决的则是内存中数据结构到硬盘上数据的转化\r\n，比如比特流或者xml格式的文件；分布式系统数据层都需要做持久化的工作，要么存到数据库中、要么直接以文件形式保存到硬盘上；</p></li>\r\n<li><p>marshalling要解决的问题和serialization类似，但它更加关注网络间数据传输、另有种说法认为marshalling包括跟数据转化有关的codebase;</p></li>\r\n</ol>\r\n<h2 id=\"firstwhat-is-serialization\">First，What is Serialization</h2>\r\n<p>引用C#文档中对<strong>serialization</strong>的定义：</p>\r\n<blockquote>\r\n<p>Serialization is the process of <strong>converting an object into a\r\nstream of bytes</strong> to store the object or transmit it to memory, a\r\ndatabase, or a file. <br /><strong>Its main purpose is to save the state\r\nof an object in order to be able to recreate it when needed.</strong>\r\n<br />The reverse process is called deserialization.</p>\r\n<h2 id=\"how-serialization-works\">How serialization works</h2>\r\n<p>This illustration shows the overall process of serialization:</p>\r\n<figure>\r\n<img src=\"../../images\\Algorithm\\serialization-process.gif\"\r\nalt=\"Serialization graphic\" />\r\n<figcaption aria-hidden=\"true\">Serialization graphic</figcaption>\r\n</figure>\r\n<p>The object is serialized to a stream that carries the data. The\r\nstream may also have information about the object's type, such as its\r\nversion, culture, and assembly name. From that stream, the object can be\r\nstored in a database, a file, or memory.</p>\r\n<h3 id=\"uses-for-serialization\">Uses for serialization</h3>\r\n<p>Serialization allows the developer to save the state of an object and\r\nre-create it as needed, providing storage of objects as well as data\r\nexchange. Through serialization, a developer can perform actions such\r\nas:</p>\r\n<ul>\r\n<li>Sending the object to a remote application by using a web\r\nservice</li>\r\n<li>Passing an object from one domain to another</li>\r\n<li>Passing an object through a firewall as a JSON or XML string</li>\r\n<li>Maintaining security or user-specific information across\r\napplications</li>\r\n</ul>\r\n</blockquote>\r\n<p><a\r\nhref=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/\">Serialization\r\n(C#) | Microsoft Docs</a></p>\r\n<p><a href=\"#whatIsSerialization\">序列化(serialization)</a>过程就是复杂数据在空间上的降维，最终结果是将一个数据结构或者包含对象状态的数据转换为一种可以在计算机文件系统或者内存缓存中被存储或者在计算机网络上被传输的数据格式，当它根据序列化格式被解析时，计算机就能生成一个语义上与原始数据相同的克隆。</p>\r\n<p>数据序列化不是数据持久化！数据序列化只是\r\n“可以作为数据持久化的中间过程” 而已</p>\r\n<p>数据复杂度的降维</p>\r\n<h2 id=\"几个数据序列化标准介绍与比较\">几个数据序列化标准介绍与比较</h2>\r\n<p><a\r\nhref=\"https://blog.csdn.net/baiye_xing/article/details/73249819\">【Netty入门】几种序列化协议的介绍_白夜行-CSDN博客_netty序列化协议</a></p>\r\n<h2 id=\"marshalling\">Marshalling</h2>\r\n<h2 id=\"the-difference-between-serialization-and-marshalling\">The\r\ndifference between Serialization and Marshalling</h2>\r\n<p><a\r\nhref=\"https://stackoverflow.com/questions/770474/what-is-the-difference-between-serialization-and-marshaling\">terminology\r\n- What is the difference between Serialization and Marshaling? - Stack\r\nOverflow</a></p>\r\n<h2 id=\"补充材料\">补充材料</h2>\r\n<p><span\r\nid=\"marshalling\">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</span></p>\r\n<p><span\r\nid=\"marshallingCNPage\">https://zh.wikipedia.org/wiki/Marshalling_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)</span></p>\r\n<p><span id=\"rfc2713\"><a\r\nhref=\"https://datatracker.ietf.org/doc/html/rfc2713\">rfc2713\r\n(ietf.org)</a></span></p>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/40462507\">序列化理解起来很简单\r\n- 知乎 (zhihu.com)</a></p>\r\n","text":" 序列化及其逆过程要解决的核心问题是 实现相同的数据在不同格式间的转化； 持久化要解决的则是内存中数据结构到硬盘上数据的转化 ，比如比特流或者xml格式的文件；分布式系统数据层都需要做持久化的工作，要么存到数据库中、要么直接以文件形式保存到硬盘上； marshalling要解决的...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Serialization","slug":"Serialization","count":1,"path":"api/tags/Serialization.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#firstwhat-is-serialization\"><span class=\"toc-text\">First，What is Serialization</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#how-serialization-works\"><span class=\"toc-text\">How serialization works</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#uses-for-serialization\"><span class=\"toc-text\">Uses for serialization</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%A0%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96%E6%A0%87%E5%87%86%E4%BB%8B%E7%BB%8D%E4%B8%8E%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">几个数据序列化标准介绍与比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#marshalling\"><span class=\"toc-text\">Marshalling</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#the-difference-between-serialization-and-marshalling\"><span class=\"toc-text\">The\r\ndifference between Serialization and Marshalling</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%85%85%E6%9D%90%E6%96%99\"><span class=\"toc-text\">补充材料</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"字符画","uid":"88fe004551a3de4348d535f91c34c293","slug":"Algorithm/字符画","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:33:09.000Z","comments":true,"path":"api/articles/Algorithm/字符画.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"字符画 另类应用 当你需要在shell里查看图片时 现有框架 ascii-image-converter TheZoraiz/ascii-image-converter: A cross-platform command-line tool to convert images i...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Floor method","uid":"920b0f28d25f5984040e129525c64cc1","slug":"Algorithm/小数取整","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:33:51.000Z","comments":true,"path":"api/articles/Algorithm/小数取整.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Floor Number 以python为例： int()进行强制类型转化 round()函数 format()函数 两个连续的数学计算 a &#x3D; 60.89564 a&#x2F;&#x2F;1 a-(a+1)%1 (a+B-1)&#x2F;&#x2F;B # 向上取整 ...","link":"","photos":[],"count_time":{"symbolsCount":152,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"Number Processing","slug":"Number-Processing","count":1,"path":"api/tags/Number-Processing.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}