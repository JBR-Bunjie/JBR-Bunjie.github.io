{"title":"大数运算","uid":"c7cd6315021c2b49c9efb80c79e420a8","slug":"Algorithm/大数四则运算","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:33:00.000Z","comments":true,"path":"api/articles/Algorithm/大数四则运算.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<p>前言：</p>\r\n<p>在计算机中数字表示的范围是有限制的，比如我们熟知的 int、float、double\r\n等数据类型所能表示的范围都是有限的，如果我们要对位数达到几十位、几百位、上千位的大整数进行计算，这些数据类型显然不能满足我们的要求，因此我们需要通过算法来实现这些功能。</p>\r\n<p>1、大数加法</p>\r\n<p>两个大数我们可以用数组来保存，然后在数组中逐位进行相加，再判断该位相加后是否需要进位，为了方便计算，我们将数字的低位放在数组的前面，高位放在后面。</p>\r\n<p>下面是两个正的大整数相加算法的C语言参考代码：</p>\r\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX 1000    <span class=\"comment\">// 大数的最大位数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  大数加法</span></span><br><span class=\"line\"><span class=\"comment\">  参数：</span></span><br><span class=\"line\"><span class=\"comment\">  num1为第一个大数，用字符数组保存</span></span><br><span class=\"line\"><span class=\"comment\">  num2为第二个大数</span></span><br><span class=\"line\"><span class=\"comment\">  sum数组保存相加的结果  即：num1+num2=sum</span></span><br><span class=\"line\"><span class=\"comment\">  返回值：返回数组sum的有效长度，即计算结果的位数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Addition</span><span class=\"params\">(<span class=\"type\">char</span> num1[], <span class=\"type\">char</span> num2[], <span class=\"type\">int</span> sum[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, j, len;</span><br><span class=\"line\">    <span class=\"type\">int</span> n2[MAX] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> len1 = <span class=\"built_in\">strlen</span> (num1); <span class=\"comment\">// 计算数组num1的长度，即大数的位数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> len2 = <span class=\"built_in\">strlen</span> (num2); <span class=\"comment\">// 计算数组num2的长度，即大数的位数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    len = len1&gt;len2 ? len1 : len2; <span class=\"comment\">// 获取较大的位数</span></span><br><span class=\"line\">    <span class=\"comment\">//将num1字符数组的数字字符转换为整型数字，且逆向保存在整型数组sum中，即低位在前，高位在后</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len1<span class=\"number\">-1</span>, j = <span class=\"number\">0</span>; i &gt;= <span class=\"number\">0</span>; i--, j++)</span><br><span class=\"line\">        sum[j] = num1[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 转换第二个数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len2<span class=\"number\">-1</span>, j = <span class=\"number\">0</span>; i &gt;= <span class=\"number\">0</span>; i--, j++)</span><br><span class=\"line\">        n2[j] = num2[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 将两个大数相加</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt;= len; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum[i] += n2[i];  <span class=\"comment\">// 两个数从低位开始相加</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum[i] &gt; <span class=\"number\">9</span>)   <span class=\"comment\">// 判断是否有进位</span></span><br><span class=\"line\">        &#123;   <span class=\"comment\">// 进位</span></span><br><span class=\"line\">            sum[i] -= <span class=\"number\">10</span>;</span><br><span class=\"line\">            sum[i+<span class=\"number\">1</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sum[len] != <span class=\"number\">0</span>)  <span class=\"comment\">// 判断最高位是否有进位</span></span><br><span class=\"line\">        len++;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;   <span class=\"comment\">// 返回和的位数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, len;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum[MAX] = &#123;<span class=\"number\">0</span>&#125;; <span class=\"comment\">// 存放计算的结果，低位在前，高位在后，即sum[0]是低位</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num1[] = <span class=\"string\">&quot;1234567891234567891234&quot;</span>; <span class=\"comment\">// 第一个大数</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num2[] = <span class=\"string\">&quot;2345678912345678913345&quot;</span>; <span class=\"comment\">// 第二个大数</span></span><br><span class=\"line\">    len = Addition(num1, num2, sum);    <span class=\"comment\">// 两数相加</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n  +\\n%s\\n  =\\n&quot;</span>, num1, num2);</span><br><span class=\"line\">    <span class=\"comment\">// 反向输出求和结果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, sum[i]);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>2、大数减法</p>\r\n<p>相减算法也是从低位开始减的。先要判断被减数和减数哪一个位数长，若被减数位数长是正常的减法；若减数位数长，则用被减数减去减数，最后还要加上负号；当两数位数长度相等时，最好比较哪一个数字大，否则负号处理会很繁琐；处理每一项时要，如果前一位相减有借位，就先减去上一位的借位，无则不减，再去判断是否能够减开被减数，如果减不开，就要借位后再去减，同时置借位为1，否则置借位为0。</p>\r\n<p>下面是C语言参考代码：</p>\r\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX 1000    <span class=\"comment\">// 大数的最大位数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  大数减法</span></span><br><span class=\"line\"><span class=\"comment\">  参数：</span></span><br><span class=\"line\"><span class=\"comment\">  num1为被减数，用字符数组保存</span></span><br><span class=\"line\"><span class=\"comment\">  num2为减数</span></span><br><span class=\"line\"><span class=\"comment\">  sum数组保存相减的结果   即：num1-num2=sum</span></span><br><span class=\"line\"><span class=\"comment\">  返回值：返回数组sum的有效长度，即计算结果的位数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Subtraction</span><span class=\"params\">(<span class=\"type\">char</span> num1[], <span class=\"type\">char</span> num2[], <span class=\"type\">int</span> sum[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, j, len, blag;</span><br><span class=\"line\">    <span class=\"type\">char</span> *temp;</span><br><span class=\"line\">    <span class=\"type\">int</span> n2[MAX] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> len1 = <span class=\"built_in\">strlen</span>(num1); <span class=\"comment\">// 计算数组num1的长度，即大数的位数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> len2 = <span class=\"built_in\">strlen</span>(num2); <span class=\"comment\">// 计算数组num2的长度，即大数的位数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 在进行减法之前要进行一些预处理</span></span><br><span class=\"line\">    blag = <span class=\"number\">0</span>; <span class=\"comment\">// 为0表示结果是正整数，为1表示结果是负整数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(len1 &lt; len2) <span class=\"comment\">// 如果被减数位数小于减数</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        blag = <span class=\"number\">1</span>; <span class=\"comment\">// 标记结果为负数</span></span><br><span class=\"line\">        <span class=\"comment\">// 交换两个数，便于计算</span></span><br><span class=\"line\">        temp = num1;</span><br><span class=\"line\">        num1 = num2;</span><br><span class=\"line\">        num2 = temp;</span><br><span class=\"line\">        len = len1;</span><br><span class=\"line\">        len1 = len2;</span><br><span class=\"line\">        len2 = len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(len1 ==len2) <span class=\"comment\">// 如果被减数的位数等于减数的位数</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断哪个数大</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; len1; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num1[i] == num2[i])</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num1[i] &gt; num2[i])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                blag = <span class=\"number\">0</span>; <span class=\"comment\">// 标记结果为正数</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                blag = <span class=\"number\">1</span>; <span class=\"comment\">// 标记结果为负数</span></span><br><span class=\"line\">                <span class=\"comment\">// 交换两个数，便于计算</span></span><br><span class=\"line\">                temp = num1;</span><br><span class=\"line\">                num1 = num2;</span><br><span class=\"line\">                num2 = temp;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    len = len1&gt;len2 ? len1 : len2; <span class=\"comment\">// 获取较大的位数</span></span><br><span class=\"line\">    <span class=\"comment\">//将num1字符数组的数字转换为整型数且逆向保存在整型数组sum中，即低位在前，高位在后</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len1<span class=\"number\">-1</span>, j = <span class=\"number\">0</span>; i &gt;= <span class=\"number\">0</span>; i--, j++)</span><br><span class=\"line\">        sum[j] = num1[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 转换第二个数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len2<span class=\"number\">-1</span>, j = <span class=\"number\">0</span>; i &gt;= <span class=\"number\">0</span>; i--, j++)</span><br><span class=\"line\">        n2[j] = num2[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 将两个大数相减</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt;= len; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum[i] = sum[i] - n2[i]; <span class=\"comment\">// 两个数从低位开始相减</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum[i] &lt; <span class=\"number\">0</span>)   <span class=\"comment\">// 判断是否有借位</span></span><br><span class=\"line\">        &#123;    <span class=\"comment\">// 借位</span></span><br><span class=\"line\">            sum[i] += <span class=\"number\">10</span>;</span><br><span class=\"line\">            sum[i+<span class=\"number\">1</span>]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 计算结果长度</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len1<span class=\"number\">-1</span>; i&gt;=<span class=\"number\">0</span> &amp;&amp; sum[i] == <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        ;</span><br><span class=\"line\">    len = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(blag==<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum[len] = <span class=\"number\">-1</span>;  <span class=\"comment\">// 在高位添加一个-1表示负数</span></span><br><span class=\"line\">        len++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;   <span class=\"comment\">// 返回结果的位数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, len;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum[MAX] = &#123;<span class=\"number\">0</span>&#125;; <span class=\"comment\">// 存放计算的结果，低位在前，高位在后，即sum[0]是低位</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num1[] = <span class=\"string\">&quot;987654321987654321&quot;</span>; <span class=\"comment\">// 第一个大数</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num2[] = <span class=\"string\">&quot;123456789123456789&quot;</span>; <span class=\"comment\">// 第二个大数</span></span><br><span class=\"line\">    len = Subtraction(num1, num2, sum);    <span class=\"comment\">// 两数相减</span></span><br><span class=\"line\">    <span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n  -\\n%s\\n  =\\n&quot;</span>, num1, num2);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sum[i=len<span class=\"number\">-1</span>] &lt; <span class=\"number\">0</span>) <span class=\"comment\">// 根据高位是否是-1判断是否是负数</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-&quot;</span>); <span class=\"comment\">// 输出负号</span></span><br><span class=\"line\">        i--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, sum[i]);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>3、大数乘法</p>\r\n<p>首先说一下乘法计算的算法，从低位向高位乘，在竖式计算中，我们是将乘数第一位与被乘数的每一位相乘，记录结果，之后，用第二位相乘，记录结果并且左移一位，以此类推，直到计算完最后一位，再将各项结果相加，得出最后结果。</p>\r\n<p>计算的过程基本上和小学生列竖式做乘法相同。为了编程方便，并不急于处理进位，而是将进位问题留待最后统一处理。</p>\r\n<p>总结一个规律: 即一个数的第i 位和另一个数的第j\r\n位相乘所得的数，一定是要累加到结果的第i+j 位上。这里i, j\r\n都是从右往左，从0 开始数。<code>ans[i+j] = a[i]*b[j];</code></p>\r\n<p>另外注意进位时要处理，当前的值加上进位的值再看本位数字是否又有进位；前导清零。</p>\r\n<p>下面是C语言的两个正大数相乘的参考代码：</p>\r\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX 1000    <span class=\"comment\">// 大数的最大位数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  大数乘法</span></span><br><span class=\"line\"><span class=\"comment\">  参数：</span></span><br><span class=\"line\"><span class=\"comment\">  num1为第一个因数，用字符数组保存</span></span><br><span class=\"line\"><span class=\"comment\">  num2为第二个因数</span></span><br><span class=\"line\"><span class=\"comment\">  sum数组保存相乘的结果  即：num1*num2=sum</span></span><br><span class=\"line\"><span class=\"comment\">  返回值：返回数组sum的有效长度，即计算结果的位数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Multiplication</span><span class=\"params\">(<span class=\"type\">char</span> num1[],<span class=\"type\">char</span> num2[], <span class=\"type\">int</span> sum[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, j, len, len1, len2;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[MAX+<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> b[MAX+<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> c[MAX*<span class=\"number\">2</span>+<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    len1 = <span class=\"built_in\">strlen</span>(num1);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>, i = len1<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i--) <span class=\"comment\">//把数字字符转换为整型数</span></span><br><span class=\"line\">        a[j++] = num1[i]-<span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    len2 = <span class=\"built_in\">strlen</span>(num2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>, i = len2<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        b[j++] = num2[i]-<span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; len2; i++)<span class=\"comment\">//用第二个数乘以第一个数,每次一位</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; len1; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            c[i+j] += b[i] * a[j]; <span class=\"comment\">//先乘起来,后面统一进位</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;MAX*<span class=\"number\">2</span>; i++) <span class=\"comment\">//循环统一处理进位问题</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c[i]&gt;=<span class=\"number\">10</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            c[i+<span class=\"number\">1</span>]+=c[i]/<span class=\"number\">10</span>;</span><br><span class=\"line\">            c[i]%=<span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = MAX*<span class=\"number\">2</span>; c[i]==<span class=\"number\">0</span> &amp;&amp; i&gt;=<span class=\"number\">0</span>; i--); <span class=\"comment\">//跳过高位的0</span></span><br><span class=\"line\">    len = i+<span class=\"number\">1</span>; <span class=\"comment\">// 记录结果的长度</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(; i&gt;=<span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        sum[i]=c[i];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, len;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum[MAX*<span class=\"number\">2</span>+<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;; <span class=\"comment\">// 存放计算的结果，低位在前，高位在后，即sum[0]是低位</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num1[] = <span class=\"string\">&quot;123456789123456789&quot;</span>; <span class=\"comment\">// 第一个大数</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num2[] = <span class=\"string\">&quot;123456789123456789&quot;</span>; <span class=\"comment\">// 第二个大数</span></span><br><span class=\"line\">    len = Multiplication(num1, num2, sum);</span><br><span class=\"line\">    <span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n  *\\n%s\\n  =\\n&quot;</span>, num1, num2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = len<span class=\"number\">-1</span>; i&gt;=<span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, sum[i]);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>4、大数除法</p>\r\n<p>大数除法是四则运算里面最难的一种。不同于一般的模拟，除法操作不是模仿手工除法，而是利用减法操作来实现的。其基本思想是反复做除法，看从被除数里面最多能减去多少个除数，商就是多少。逐个减显然太慢，要判断一次最多能减少多少个整数(除数)的10的n次方。</p>\r\n<p>以7546除以23为例：</p>\r\n<p>先用7546减去23的100倍，即减去2300，可以减3次，余下646，此时商就是300\r\n(300=100*3)；\r\n然后646减去23的10倍，即减去230，可以减2次，余下186，此时商就是320\r\n(320=300+10*2)；</p>\r\n<p>然后186减去23，可以减8次，余下2，此时商就是328 (328=320+1*8)；</p>\r\n<p>因为2除以23的结果小于1，而我们又不用计算小数点位，所以不必再继续算下去了。</p>\r\n<p>下面是C语言的两个正大数相除的参考代码，计算结果中没有小数：</p>\r\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX 1000    <span class=\"comment\">// 大数的最大位数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注：</span></span><br><span class=\"line\"><span class=\"comment\">// 本代码在以下博客代码中进行修改：</span></span><br><span class=\"line\"><span class=\"comment\">// http://www.cnblogs.com/javawebsoa/archive/2013/08/01/3231078.html</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  函数SubStract功能：</span></span><br><span class=\"line\"><span class=\"comment\">  用长度为len1的大整数p1减去长度为len2的大整数p2</span></span><br><span class=\"line\"><span class=\"comment\">  结果存在p1中，返回值代表结果的长度</span></span><br><span class=\"line\"><span class=\"comment\">  不够减：返回-1 ， 正好够：返回0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">SubStract</span><span class=\"params\">(<span class=\"type\">int</span> *p1, <span class=\"type\">int</span> len1, <span class=\"type\">int</span> *p2, <span class=\"type\">int</span> len2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(len1 &lt; len2)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(len1 == len2 )</span><br><span class=\"line\">    &#123;                        <span class=\"comment\">// 判断p1 &gt; p2</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = len1<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p1[i] &gt; p2[i])   <span class=\"comment\">// 若大，则满足条件，可做减法</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(p1[i] &lt; p2[i]) <span class=\"comment\">// 否则返回-1</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt;= len1<span class=\"number\">-1</span>; i++)  <span class=\"comment\">// 从低位开始做减法</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p1[i] -= p2[i];         <span class=\"comment\">// 相减</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p1[i] &lt; <span class=\"number\">0</span>)           <span class=\"comment\">// 若是否需要借位</span></span><br><span class=\"line\">        &#123;   <span class=\"comment\">// 借位</span></span><br><span class=\"line\">            p1[i] += <span class=\"number\">10</span>;</span><br><span class=\"line\">            p1[i+<span class=\"number\">1</span>]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = len1<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i--)  <span class=\"comment\">// 查找结果的最高位</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( p1[i] )             <span class=\"comment\">//最高位第一个不为0</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> (i+<span class=\"number\">1</span>);       <span class=\"comment\">//得到位数并返回</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;                   <span class=\"comment\">//两数相等的时候返回0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  大数除法---结果不包括小数点</span></span><br><span class=\"line\"><span class=\"comment\">  num1 被除数</span></span><br><span class=\"line\"><span class=\"comment\">  num2 除数</span></span><br><span class=\"line\"><span class=\"comment\">  sum  商，存放计算的结果，即：num1/num2=sum</span></span><br><span class=\"line\"><span class=\"comment\">  返回数组sum的有效长度，即商的位数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Division</span><span class=\"params\">(<span class=\"type\">char</span> num1[], <span class=\"type\">char</span> num2[], <span class=\"type\">char</span> sum[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> k, i, j;</span><br><span class=\"line\">    <span class=\"type\">int</span> len1, len2, len=<span class=\"number\">0</span>;     <span class=\"comment\">//大数位数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> dValue;                <span class=\"comment\">//两大数相差位数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> nTemp;                 <span class=\"comment\">//Subtract函数返回值</span></span><br><span class=\"line\">    <span class=\"type\">int</span> num_a[MAX] = &#123;<span class=\"number\">0</span>&#125;;      <span class=\"comment\">//被除数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> num_b[MAX] = &#123;<span class=\"number\">0</span>&#125;;      <span class=\"comment\">//除数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> num_c[MAX] = &#123;<span class=\"number\">0</span>&#125;;      <span class=\"comment\">//商</span></span><br><span class=\"line\"></span><br><span class=\"line\">    len1 = <span class=\"built_in\">strlen</span>(num1);       <span class=\"comment\">//获得大数的位数</span></span><br><span class=\"line\">    len2 = <span class=\"built_in\">strlen</span>(num2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//将数字字符转换成整型数，且翻转保存在整型数组中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>( j = <span class=\"number\">0</span>, i = len1<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; j++, i-- )</span><br><span class=\"line\">        num_a[j] = num1[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>( j = <span class=\"number\">0</span>, i = len2<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; j++, i-- )</span><br><span class=\"line\">        num_b[j] = num2[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( len1 &lt; len2 )          <span class=\"comment\">//如果被除数小于除数，直接返回-1，表示结果为0</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dValue = len1 - len2;      <span class=\"comment\">//相差位数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = len1<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i--)    <span class=\"comment\">//将除数扩大，使得除数和被除数位数相等</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt;= dValue)</span><br><span class=\"line\">            num_b[i] = num_b[i-dValue];</span><br><span class=\"line\">        <span class=\"keyword\">else</span>                         <span class=\"comment\">//低位置0</span></span><br><span class=\"line\">            num_b[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    len2 = len1;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt;= dValue; j++ )    <span class=\"comment\">//重复调用，同时记录减成功的次数，即为商</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((nTemp = SubStract(num_a, len1, num_b+j, len2-j)) &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            len1 = nTemp;            <span class=\"comment\">//结果长度</span></span><br><span class=\"line\">            num_c[dValue-j]++;       <span class=\"comment\">//每成功减一次，将商的相应位加1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 计算商的位数，并将商放在sum字符数组中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = MAX<span class=\"number\">-1</span>; num_c[i] == <span class=\"number\">0</span> &amp;&amp; i &gt;= <span class=\"number\">0</span>; i-- );  <span class=\"comment\">//跳过高位0，获取商的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        len = i + <span class=\"number\">1</span>; <span class=\"comment\">// 保存位数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; i &gt;= <span class=\"number\">0</span>; i--, j++)     <span class=\"comment\">// 将结果复制到sum数组中</span></span><br><span class=\"line\">        sum[j] = num_c[i] + <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    sum[j] = <span class=\"string\">&#x27;\\0&#x27;</span>;   <span class=\"comment\">// sum字符数组结尾置0</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;      <span class=\"comment\">// 返回商的位数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> len;                <span class=\"comment\">// 商的位数</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num1[MAX] = <span class=\"string\">&quot;1234567899876543210&quot;</span>;   <span class=\"comment\">// 第一个大数</span></span><br><span class=\"line\">    <span class=\"type\">char</span> num2[MAX] = <span class=\"string\">&quot;20160415123025&quot;</span>;              <span class=\"comment\">// 第二个大数</span></span><br><span class=\"line\">    <span class=\"type\">char</span> sum[MAX] = &#123;<span class=\"number\">0</span>&#125;;    <span class=\"comment\">// 计算结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//scanf(&quot;%s&quot;, num1);      //以字符串形式读入大数</span></span><br><span class=\"line\">    <span class=\"comment\">//scanf(&quot;%s&quot;, num2);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    len = Division(num1, num2, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//输出结果</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n  ÷\\n%s\\n  =\\n&quot;</span>, num1, num2);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( len&gt;=<span class=\"number\">0</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; len; i++ )</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, sum[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n","text":"前言： 在计算机中数字表示的范围是有限制的，比如我们熟知的 int、float、double 等数据类型所能表示的范围都是有限的，如果我们要对位数达到几十位、几百位、上千位的大整数进行计算，这些数据类型显然不能满足我们的要求，因此我们需要通过算法来实现这些功能。 1、大数加法 两...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"toc":"","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"三角形面积计算","uid":"224d76f53823245ff06db9fdf896bcc4","slug":"Algorithm/三角形面积计算","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:34:16.000Z","comments":true,"path":"api/articles/Algorithm/三角形面积计算.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"求面积 1.底高求面积 已知三角形底a，高h，则 2.海伦公式 已知三角形三边a,b,c，则 3.边角公式 已知三角形两边a,b,这两边夹角，则有： 即两夹边之积乘夹角正弦值的一半。 4.内切圆面积公式 设三角形三边分别为a、b、c，内切圆半径为r 则三角形面积 5.外接圆面积公...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"},{"name":"triangle area","slug":"triangle-area","count":1,"path":"api/tags/triangle-area.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"字符画","uid":"88fe004551a3de4348d535f91c34c293","slug":"Algorithm/字符画","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T14:33:09.000Z","comments":true,"path":"api/articles/Algorithm/字符画.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"字符画 另类应用 当你需要在shell里查看图片时 现有框架 ascii-image-converter TheZoraiz/ascii-image-converter: A cross-platform command-line tool to convert images i...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}