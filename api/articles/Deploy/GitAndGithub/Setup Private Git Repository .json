{"title":"私有Git仓库搭建","uid":"f859a0dc217f052fa5c43eafb964028a","slug":"Deploy/GitAndGithub/Setup Private Git Repository ","date":"2021-10-05T03:05:03.000Z","updated":"2023-10-27T18:39:40.000Z","comments":true,"path":"api/articles/Deploy/GitAndGithub/Setup Private Git Repository .json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"云服务器上的私有Git仓库搭建\"><a href=\"#云服务器上的私有Git仓库搭建\" class=\"headerlink\" title=\"云服务器上的私有Git仓库搭建\"></a>云服务器上的私有Git仓库搭建</h1><hr>\n<h2 id=\"环境：\"><a href=\"#环境：\" class=\"headerlink\" title=\"环境：\"></a>环境：</h2><p>阿里云服务器CentOS7.6</p>\n<h2 id=\"部署Git\"><a href=\"#部署Git\" class=\"headerlink\" title=\"部署Git\"></a>部署Git</h2><h3 id=\"安装Git：\"><a href=\"#安装Git：\" class=\"headerlink\" title=\"安装Git：\"></a>安装Git：</h3><h4 id=\"非CentOS安装Git：\"><a href=\"#非CentOS安装Git：\" class=\"headerlink\" title=\"非CentOS安装Git：\"></a>非CentOS安装Git：</h4><p>绝大多数Linux发行版安装Git只需要一条命令——参看：<a href=\"#gitLinux\">Git官方指南</a></p>\n<h4 id=\"关于CentOS安装：\"><a href=\"#关于CentOS安装：\" class=\"headerlink\" title=\"关于CentOS安装：\"></a>关于CentOS安装：</h4><p>与绝大部分Linux系统不同，redhat发行的系统通过包管理工具yum最高只能安装到1.8.3版本，需要使用更高版本的话都只能通过源码编译安装</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Red Hat Enterprise Linux, Oracle Linux, CentOS, Scientific Linux, et al.</p>\n<p>RHEL and derivatives typically ship older versions of git. You can <a href=\"#gitDownloadPage\">download a tarball</a> and build from source, or use a 3rd-party repository such as <a href=\"#gitDownloadPage\">the IUS Community Project</a> to obtain a more recent version of git.</p></blockquote>\n<h5 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h5><p>首先我们先选择要安装的Git版本，我选择了2.33.0，下载并传到服务器上</p>\n<p><img src=\"/../../../images/Deploy/image-20211001150441411.png\" alt=\"image-20211001150441411\"></p>\n<h5 id=\"解压，编译，安装\"><a href=\"#解压，编译，安装\" class=\"headerlink\" title=\"解压，编译，安装\"></a>解压，编译，安装</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查看git版本\ngit --version\n \n# 卸载\n# yum remove git\nyum eras\n\n# 进入源码目录\n$ cd git-2.33.0\n\n# 安装工具和依赖\n$ yum install libcurl-devel\n$ yum install expat-devel\n$ yum install openssl-devel\n \n# 编译\n$ make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git all\n# 编译内容带&#x2F;usr&#x2F;locak&#x2F;git目录\n$ make prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install\n# 在&#x2F;usr&#x2F;local&#x2F;git目录完成安装，请注意，这个不是git的默认路径，所以我们还需要为git的bin中文件建立软连接到&#x2F;usr&#x2F;bin中</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>关于编译命令：make</p>\n<p>make all：编译所有的目标</p>\n<p>make install：安装已编译好的程序</p>\n<p>请注意！</p>\n<p>By default, <code>make install</code> will install all the files in <code>/usr/local/bin</code>, <code>/usr/local/lib</code> etc.  You can specify an installation prefix other than <code>/usr/local&#39; using </code>–prefix’, for instance <code>--prefix=$HOME</code></p>\n\n</div>\n<h5 id=\"添加到环境变量\"><a href=\"#添加到环境变量\" class=\"headerlink\" title=\"添加到环境变量\"></a>添加到环境变量</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 将git路径加入bashrc配置\n$ echo &quot;export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&quot; &gt;&gt;&#x2F;etc&#x2F;bashrc\n \n# 应用bashrc\n$ source &#x2F;etc&#x2F;bashrc\n\n# 验证结果\n$ git --version\n# git version 2.33.0</code></pre>\n\n<h5 id=\"建立软连接\"><a href=\"#建立软连接\" class=\"headerlink\" title=\"建立软连接\"></a>建立软连接</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ln -s &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-upload-pack &#x2F;usr&#x2F;bin&#x2F;git-upload-pack\nln -s &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-r-pack &#x2F;usr&#x2F;bin&#x2F;git-receive-pack\n# 一定要注意抓取地址和目标地址都要调换！\n# 如果没有在&#x2F;usr&#x2F;bin目录添加这两个文件的话，会因为没有处理请求的命令，报出没有权限的错</code></pre>\n\n<h3 id=\"创建仓库：\"><a href=\"#创建仓库：\" class=\"headerlink\" title=\"创建仓库：\"></a>创建仓库：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;home&#x2F;git # 进入git用户目录\n# 这个目录下会有三个以.记来隐藏的文件，请不要删除\n\n# 请以git用户的身份执行以下命令，否则还要执行修改用户目录权限的命令\n# 否则当客户端在以git身份执行clone等操作时会因为没有权限而失败\ngit init --bare yourRepositoryName.git # 这个命令有多个版本，如：git init yourRepositoryName.git, git init -bare youreRepositoryName.git 请注意区分</code></pre>\n\n<h3 id=\"在客户端克隆仓库：\"><a href=\"#在客户端克隆仓库：\" class=\"headerlink\" title=\"在客户端克隆仓库：\"></a>在客户端克隆仓库：</h3><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">git clone git@server-IP:&#x2F;home&#x2F;git&#x2F;test.git</code></pre>\n\n<p>完成！</p>\n<p><img src=\"/../../../images/Deploy/Git-image-20211003154821032.png\" alt=\"image-20211003154821032\"></p>\n<h3 id=\"限制git用户登录：\"><a href=\"#限制git用户登录：\" class=\"headerlink\" title=\"限制git用户登录：\"></a>限制git用户登录：</h3><p>有的时候我们并不希望用户直接通过git用户的账号以及密码来直接通过SSH登录Linux主机，我们该怎么做？</p>\n<h4 id=\"方法一：禁止Git用户通过ssh直接登录\"><a href=\"#方法一：禁止Git用户通过ssh直接登录\" class=\"headerlink\" title=\"方法一：禁止Git用户通过ssh直接登录\"></a>方法一：禁止Git用户通过ssh直接登录</h4><p>但是很显然我们不能使用这种方法——当我们禁止Git用户登录时，绝大部分正常的Git操作包括git clone，git pull等都无法正常进行了</p>\n<h4 id=\"方法二：禁止Git用户进入bash\"><a href=\"#方法二：禁止Git用户进入bash\" class=\"headerlink\" title=\"方法二：禁止Git用户进入bash\"></a>方法二：禁止Git用户进入bash</h4><p>编辑&#x2F;etc&#x2F;passwd这个文件，在文件末尾可以找到类似这样的行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 原行： \ngit:x:1002:1002::&#x2F;home&#x2F;git:&#x2F;bin&#x2F;sh      \n----------------------------------------------------------\n# 更改为：\ngit:x:1002:1002::&#x2F;home&#x2F;git:&#x2F;usr&#x2F;bin&#x2F;git-shell</code></pre>\n\n<p>把&#x2F;bin&#x2F;sh改为&#x2F;usr&#x2F;bin&#x2F;git-shell，这样git这个账户就只能用来克隆或者推送数据到git仓库中了，而不能用它来登录到主机。</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><p>当我们引用git-shell时，我们仍然需要使用 <strong>ln</strong> 命令来为我们安装于 &#x2F;usr&#x2F;local&#x2F;git 下的文件创建软链接：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ln -s &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-shell &#x2F;usr&#x2F;bin&#x2F;git-shell</code></pre>\n\n</p>\n</div>\n<p>重启服务器：</p>\n<p>之后，当我们再次通过git用户登录时，便会报：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">fatal: Interactive git shell is not enabled.\nhint: ~&#x2F;git-shell-commands should exist and have read and execute access.\nConnection to x.x.x.x closed.</code></pre>\n\n\n\n<h3 id=\"添加工作空间：\"><a href=\"#添加工作空间：\" class=\"headerlink\" title=\"添加工作空间：\"></a>添加工作空间：</h3><p>一般来讲，bare仓库不像是普通的仓库那样会在根目录中保存文件，bare仓库不保存文件并将.git文件夹下的全部内容直接暴露在当前仓库根目录中，且不包含工作区</p>\n<p>工作空间示例：</p>\n<p><img src=\"/../../../images/Deploy/Git-image-20211003155529616.png\" alt=\"image-20211003155529616\"></p>\n<p>要查看工作空间，我们需要使用一个<a href=\"#hook\">钩子</a>：post-receive钩子</p>\n<p>有了这个钩子，我们要在裸仓库内看到用户提交的工作空间很简单了。只需要创建&#x2F;编写post-receivek即可：</p>\n<p>在服务器裸仓库内</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd hooks</code></pre>\n\n<p>创建并编辑post-receive</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vim post-receive</code></pre>\n\n<p>输入内容：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;sh\ngit --work-tree&#x3D;#工作空间# --git-dir&#x3D;#Git仓库地址# checkout -f</code></pre>\n<p>例如，我此处的配置是：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;sh\ngit --work-tree&#x3D;&#x2F;home&#x2F;git&#x2F;gitWorkspace&#x2F;testWorkspace --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;test.git checkout -f</code></pre>\n\n<ul>\n<li>工作空间：服务器上空目录地址，git用户需要有读写权限。</li>\n<li>Git仓库地址：服务器上本仓库地址。</li>\n</ul>\n<p>赋予执行权限：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">chmod +x post-receive\n# 用ls -alc</code></pre>\n\n<p><img src=\"/../../../images/Deploy/Git-image-20211003171322547.png\" alt=\"image-20211003171322547\"></p>\n<p>之后，用户push提交后，–work-tree参数定义的工作空间就可以看到用户提交的具体内容：</p>\n<p><img src=\"/../../../images/Deploy/Git-image-20211003165533697.png\" alt=\"image-20211003165533697\"></p>\n<hr>\n<h2 id=\"参考内容：\"><a href=\"#参考内容：\" class=\"headerlink\" title=\"参考内容：\"></a>参考内容：</h2><h3 id=\"教程中提到的webstie\"><a href=\"#教程中提到的webstie\" class=\"headerlink\" title=\"教程中提到的webstie\"></a>教程中提到的webstie</h3><p><a href=\"https://git-scm.com/\">Git Website (git-scm.com)</a></p>\n<p><span id=\"gitLinux\"><a href=\"https://git-scm.com/download/linux\">Git Download Page(git-scm.com)</a></span></p>\n<p><span id=\"gitDownloadPage\"><a href=\"https://mirrors.edge.kernel.org/pub/software/scm/git/\">Index of &#x2F;pub&#x2F;software&#x2F;scm&#x2F;git&#x2F; (kernel.org)</a></span></p>\n<p><span id=\"IUS\"><a href=\"https://ius.io/\">IUS</a></span></p>\n<p><span id=\"hook\"><a href=\"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90\">Git - Git 钩子 (git-scm.com)</a></span></p>\n<h3 id=\"拓展资料\"><a href=\"#拓展资料\" class=\"headerlink\" title=\"拓展资料\"></a>拓展资料</h3><p><a href=\"http://htmlpreview.github.io/?https://github.com/sitaramc/sitaramc.github.com/blob/dce410b2a2804723676db9cabd7bb506b6d9ba05/concepts/bare.html\">all about “bare” repos – what, why, and how to fix a non-bare push (htmlpreview.github.io)</a></p>\n<p><a href=\"https://stackoverflow.com/questions/37033032/where-are-the-files-in-a-bare-repository\">git - Where are the files in a bare repository? - Stack Overflow</a></p>\n<p><a href=\"https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server\">Git - Getting Git on a Server (git-scm.com)</a></p>\n<p><a href=\"https://stackoverflow.com/questions/20939430/accessing-files-of-a-repository-from-the-git-server\">Accessing files of a repository from the Git server - Stack Overflow</a></p>\n<iframe src=\"//player.bilibili.com/player.html?aid=932066812&bvid=BV11M4y1N7q6&cid=383208463&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"> </iframe>\n\n","text":"云服务器上的私有Git仓库搭建 环境：阿里云服务器CentOS7.6 部署Git安装Git：非CentOS安装Git：绝大多数Linux发行版安装Git只需要一条命令——参看：Git官方指南 关于CentOS安装：与绝大部分Linux系统不同，redhat发行的系统通过包管理工具...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"Git","slug":"Git","count":3,"path":"api/categories/Git.json"}],"tags":[{"name":"Git","slug":"Git","count":3,"path":"api/tags/Git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E7%A7%81%E6%9C%89Git%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">云服务器上的私有Git仓库搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%EF%BC%9A\"><span class=\"toc-text\">环境：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2Git\"><span class=\"toc-text\">部署Git</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Git%EF%BC%9A\"><span class=\"toc-text\">安装Git：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%9ECentOS%E5%AE%89%E8%A3%85Git%EF%BC%9A\"><span class=\"toc-text\">非CentOS安装Git：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8ECentOS%E5%AE%89%E8%A3%85%EF%BC%9A\"><span class=\"toc-text\">关于CentOS安装：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">下载源码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%8E%8B%EF%BC%8C%E7%BC%96%E8%AF%91%EF%BC%8C%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">解压，编译，安装</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%88%B0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">添加到环境变量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E7%AB%8B%E8%BD%AF%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">建立软连接</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93%EF%BC%9A\"><span class=\"toc-text\">创建仓库：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%85%8B%E9%9A%86%E4%BB%93%E5%BA%93%EF%BC%9A\"><span class=\"toc-text\">在客户端克隆仓库：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%99%90%E5%88%B6git%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%EF%BC%9A\"><span class=\"toc-text\">限制git用户登录：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E7%A6%81%E6%AD%A2Git%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87ssh%E7%9B%B4%E6%8E%A5%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">方法一：禁止Git用户通过ssh直接登录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A%E7%A6%81%E6%AD%A2Git%E7%94%A8%E6%88%B7%E8%BF%9B%E5%85%A5bash\"><span class=\"toc-text\">方法二：禁止Git用户进入bash</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%EF%BC%9A\"><span class=\"toc-text\">添加工作空间：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E5%86%85%E5%AE%B9%EF%BC%9A\"><span class=\"toc-text\">参考内容：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%99%E7%A8%8B%E4%B8%AD%E6%8F%90%E5%88%B0%E7%9A%84webstie\"><span class=\"toc-text\">教程中提到的webstie</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95%E8%B5%84%E6%96%99\"><span class=\"toc-text\">拓展资料</span></a></li></ol></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"建立一个FTP服务器吧!","uid":"0ff372827a992c33dc9a7dba52ce9123","slug":"Deploy/FTP部署","date":"2021-10-05T03:07:03.000Z","updated":"2023-11-01T04:30:08.023Z","comments":true,"path":"api/articles/Deploy/FTP部署.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"建立一个 FTP 服务器吧！ 注意你所购买的云服务商的文档， 比如这里的： 主动模式：放通端口 21。 被动模式：放通端口 21，及 修改配置文件 中设置的 pasv_min_port 到 pasv_max_port 之间的所有端口，本文放通端口为 40000 - 45000。 ...","link":"","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"FTP","slug":"FTP","count":1,"path":"api/categories/FTP.json"}],"tags":[{"name":"FTP","slug":"FTP","count":1,"path":"api/tags/FTP.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Python编程入门","uid":"fc9433631750b4e2a27c5cd3c21a72be","slug":"Language Learning/Python/PythonBasicGrammar/PythonBasicGrammar","date":"2021-09-26T09:22:04.000Z","updated":"2023-10-27T20:00:58.000Z","comments":true,"path":"api/articles/Language Learning/Python/PythonBasicGrammar/PythonBasicGrammar.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Python 3 Basic Grammar Training为什么是 python？一个最重要的原因——简单，快速，容易上手： 你也可以通过著名的开发语言排行榜 TIOBE 来直观感受 Python 有多么热门index | TIOBE - The Software Quali...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"Python","slug":"Python","count":9,"path":"api/categories/Python.json"},{"name":"Language Learning","slug":"Python/Language-Learning","count":8,"path":"api/categories/Python/Language-Learning.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":16,"path":"api/tags/Language-Learning.json"},{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}