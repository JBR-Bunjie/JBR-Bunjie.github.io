{"title":"Git Command","uid":"0b5bad59d6c75a685d314a2ae8f6dd4e","slug":"Deploy/GitAndGithub/Git Commmand","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T18:39:25.000Z","comments":true,"path":"api/articles/Deploy/GitAndGithub/Git Commmand.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h2 id=\"git-分区\">git 分区</h2>\r\n<p>git 一共有三个分区：</p>\r\n<p>工作区、暂存区和版本库</p>\r\n<h2 id=\"git-的初始化自报家门\">git 的初始化（自报家门）</h2>\r\n<ol type=\"1\">\r\n<li>git config --global user.name \"YOUR NAME\"</li>\r\n<li>git config --global user.email \"email@example.com\"</li>\r\n</ol>\r\n<h2 id=\"用-git-创建仓库repository\">用 git 创建仓库(repository)</h2>\r\n<ol type=\"1\">\r\n<li>mkdir repositoryExample（这只是生成了一个文件夹）</li>\r\n</ol>\r\n<h3 id=\"进入仓库文件夹\">进入仓库<del>（文件夹）</del></h3>\r\n<ol type=\"1\">\r\n<li>cd repositoryExample</li>\r\n</ol>\r\n<h3 id=\"初始化仓库仓库的正式建立\">初始化仓库（仓库的正式建立）</h3>\r\n<ol type=\"1\">\r\n<li>git init</li>\r\n</ol>\r\n<h4\r\nid=\"注意此举会在当前目录下生成一个.git-文件夹但是这是一个以.开头的隐藏文件夹所以使用-ls-命令无法直接看到你可以使用-ls--a-命令来查看这类隐藏的文件夹\">注意：此举会在当前目录下生成一个.git\r\n文件夹，但是这是一个以.开头的隐藏文件夹，所以使用 ls\r\n命令无法直接看到，你可以使用 ls -a 命令来查看这类隐藏的文件夹</h4>\r\n<h2 id=\"用-git-来记录变化\">用 git 来记录变化</h2>\r\n<ol type=\"1\">\r\n<li><p>git add fileName</p>\r\n<p>*可以使用 git status -s 来查看更改***</p>\r\n<blockquote>\r\n<p>-A, --all add changes from all tracked and untracked files</p>\r\n<p>-u, --update update tracked files</p>\r\n</blockquote></li>\r\n<li><p>git diff</p>\r\n<p><em>使用 diff 来查看已经做出的变化</em></p>\r\n<p><strong>用 git diff HEAD -- filename\r\n来比较远程仓库和本地的文件的区别</strong></p></li>\r\n<li><p>git commit -m \"本次提交的说明\"</p>\r\n<blockquote>\r\n\r\n</blockquote></li>\r\n</ol>\r\n<p>**或者使用 git commit -a 命令来跳过 add 直接提交所有变动</p>\r\n<h2 id=\"关于历史提交\">关于历史提交</h2>\r\n<ol type=\"1\">\r\n<li>使用 git log 或者 git log --pretty=oneline 来查看</li>\r\n<li>使用 git reset + log 中的每行前的如 d5d7e...版本号 来还原</li>\r\n<li>git 中，有 git reflog 命令来记录用户的每一次操作</li>\r\n<li>git 管理的是修改而不是文件！</li>\r\n</ol>\r\n<h2 id=\"关于文件更改\">关于文件更改</h2>\r\n<ol type=\"1\">\r\n<li><p>git checkout -- filename //舍弃工作区的所有更改</p>\r\n<p>关于这个命令</p>\r\n<p>如果 filename 文件还没有被提交到暂存区（仍然停留在工作区），则 git\r\n会立即撤销所有更改——即使已经在文件中保存</p>\r\n<p>如果 filename 文件已经用 add 命令提交过一次了，则 git\r\n会将它重置为刚刚提交到缓存区中的状态</p></li>\r\n<li><p>git reset HEAD filename</p>\r\n<p>通过这个命令，我们可以将已经提交到暂存区的 filename\r\n文件回退到工作区</p></li>\r\n</ol>\r\n<h2 id=\"文件删除\">文件删除</h2>\r\n<ol type=\"1\">\r\n<li><p>git rm filename</p>\r\n<p>注意: 删除文件也是一个修改，必须要提交才会被记录，但这里没有必要\r\nadd，可以直接 commit</p></li>\r\n<li><p>git checkout -- filename</p>\r\n<p>又见面了，再次用此命令来恢复文件，因为它的作用<strong>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</strong></p></li>\r\n</ol>\r\n<p><a\r\nhref=\"https://stackoverflow.com/questions/2047465/how-do-i-delete-a-file-from-a-git-repository\">git\r\nrm - How do I delete a file from a Git repository? - Stack\r\nOverflow</a></p>\r\n<h2 id=\"远程管理\">远程管理</h2>\r\n<ol type=\"1\">\r\n<li>显示所有远程仓库：git remote -v</li>\r\n<li>添加远程版本库：git remote add [name] [url]</li>\r\n<li>删除远程仓库：git remote remove origin</li>\r\n<li>修改仓库名：git remove rename old_name new_name</li>\r\n</ol>\r\n<h3 id=\"向远程库提交\">向远程库提交</h3>\r\n<ol type=\"1\">\r\n<li>git push -u [推送的主机] [推送的分支] ——例：origin main</li>\r\n<li>删除主机的分支：git push origin --delete master</li>\r\n</ol>\r\n<h3 id=\"从远程库克隆\">从远程库克隆</h3>\r\n<ol type=\"1\">\r\n<li><p>git clone git@项目仓库地址</p></li>\r\n<li><p>从远程获取代码并合并本地版本：</p>\r\n<p>规范：git pull <远程主机名> <远程分支名>:<本地分支名></p>\r\n<p>示例：git pull origin master:brantest</p>\r\n<p>——将远程主机 origin 的 master 分支拉取过来，与本地的 brantest\r\n分支合并</p></li>\r\n</ol>\r\n<h2 id=\"分支\">分支</h2>\r\n<ol type=\"1\">\r\n<li>创建并切换到新分支：git checkout -b dev 或 git switch -c dev</li>\r\n<li>切换分支：git checkout dev 或 git switch master</li>\r\n<li>查看分支：git branch</li>\r\n<li>把分支合并到 main 上：git merge dev</li>\r\n<li>删除分支：git branch -d dev</li>\r\n<li>将分支推送到远程仓库：git push origin bunjie（同理呀！）</li>\r\n</ol>\r\n<p>git push --set-upstream origin master</p>\r\n<p>ssh-keygen -t rsa</p>\r\n<h2 id=\"set-proxy\">Set Proxy</h2>\r\n<p><a\r\nhref=\"https://ericclose.github.io/git-proxy-config.html\">一文让你了解如何为\r\nGit 设置代理 - Eric (ericclose.github.io)</a></p>\r\n","text":"git 分区 git 一共有三个分区： 工作区、暂存区和版本库 git 的初始化（自报家门） git config --global user.name \"YOUR NAME\" git config --global user.email \"email@example.com\" ...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Git","slug":"Git","count":3,"path":"api/categories/Git.json"}],"tags":[{"name":"Git","slug":"Git","count":3,"path":"api/tags/Git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#git-%E5%88%86%E5%8C%BA\"><span class=\"toc-text\">git 分区</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#git-%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E8%87%AA%E6%8A%A5%E5%AE%B6%E9%97%A8\"><span class=\"toc-text\">git 的初始化（自报家门）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8-git-%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93repository\"><span class=\"toc-text\">用 git 创建仓库(repository)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%85%A5%E4%BB%93%E5%BA%93%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">进入仓库（文件夹）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%93%E5%BA%93%E4%BB%93%E5%BA%93%E7%9A%84%E6%AD%A3%E5%BC%8F%E5%BB%BA%E7%AB%8B\"><span class=\"toc-text\">初始化仓库（仓库的正式建立）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E6%AD%A4%E4%B8%BE%E4%BC%9A%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA.git-%E6%96%87%E4%BB%B6%E5%A4%B9%E4%BD%86%E6%98%AF%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%A5.%E5%BC%80%E5%A4%B4%E7%9A%84%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%80%E4%BB%A5%E4%BD%BF%E7%94%A8-ls-%E5%91%BD%E4%BB%A4%E6%97%A0%E6%B3%95%E7%9B%B4%E6%8E%A5%E7%9C%8B%E5%88%B0%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8-ls--a-%E5%91%BD%E4%BB%A4%E6%9D%A5%E6%9F%A5%E7%9C%8B%E8%BF%99%E7%B1%BB%E9%9A%90%E8%97%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">注意：此举会在当前目录下生成一个.git\r\n文件夹，但是这是一个以.开头的隐藏文件夹，所以使用 ls\r\n命令无法直接看到，你可以使用 ls -a 命令来查看这类隐藏的文件夹</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8-git-%E6%9D%A5%E8%AE%B0%E5%BD%95%E5%8F%98%E5%8C%96\"><span class=\"toc-text\">用 git 来记录变化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">关于历史提交</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E6%96%87%E4%BB%B6%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">关于文件更改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">文件删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">远程管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%91%E8%BF%9C%E7%A8%8B%E5%BA%93%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">向远程库提交</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E5%BA%93%E5%85%8B%E9%9A%86\"><span class=\"toc-text\">从远程库克隆</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF\"><span class=\"toc-text\">分支</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#set-proxy\"><span class=\"toc-text\">Set Proxy</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Vim 5. EDIT","uid":"6447ce34572a48189d0a25e47120ad48","slug":"Deploy/vim/05.editing","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T18:52:07.000Z","comments":true,"path":"api/articles/Deploy/vim/05.editing.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Vim 5. edit 综述 总览： Vim provides many commands which make editing functionality really powerful. In this chapter, we will discuss following i...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"Vim","slug":"Vim","count":7,"path":"api/categories/Vim.json"},{"name":"Linux","slug":"Vim/Linux","count":7,"path":"api/categories/Vim/Linux.json"}],"tags":[{"name":"Vim","slug":"Vim","count":7,"path":"api/tags/Vim.json"},{"name":"Linux","slug":"Linux","count":12,"path":"api/tags/Linux.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"一些PowerShell, CMD命令","uid":"708e72f78c0920c292ea7dfe7d2abfd7","slug":"Deploy/Windows/一些PowerShell·CMD命令","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T19:03:35.000Z","comments":true,"path":"api/articles/Deploy/Windows/一些PowerShell·CMD命令.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"一些PowerShell, CMD命令 Windows 命令 | Microsoft Docs 搜索文件中文本的模式 | findstr # https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;windows-server&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Windows","slug":"Windows","count":1,"path":"api/categories/Windows.json"}],"tags":[{"name":"Windows","slug":"Windows","count":2,"path":"api/tags/Windows.json"},{"name":"Powershell","slug":"Powershell","count":1,"path":"api/tags/Powershell.json"},{"name":"CMD","slug":"CMD","count":1,"path":"api/tags/CMD.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}