{"title":"Hello World, Hello Hexo","uid":"6adf345a8e80c4aa1ee89482b75933eb","slug":"Deploy/Hexo使用","date":"2021-09-07T14:09:05.000Z","updated":"2023-10-27T19:03:57.000Z","comments":true,"path":"api/articles/Deploy/Hexo使用.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"Hello-World-Hello-Hexo\"><a href=\"#Hello-World-Hello-Hexo\" class=\"headerlink\" title=\"Hello World, Hello Hexo\"></a>Hello World, Hello Hexo</h1><h2 id=\"Hexo-的基础配置\"><a href=\"#Hexo-的基础配置\" class=\"headerlink\" title=\"Hexo 的基础配置\"></a>Hexo 的基础配置</h2><h3 id=\"安装-hexo-cli\"><a href=\"#安装-hexo-cli\" class=\"headerlink\" title=\"安装 hexo-cli\"></a>安装 hexo-cli</h3><pre class=\"line-numbers language-powshell\" data-language=\"powshell\"><code class=\"language-powshell\">npm install hexo-cli -g</code></pre>\n\n<h3 id=\"完成-hexo-的部署：\"><a href=\"#完成-hexo-的部署：\" class=\"headerlink\" title=\"完成 hexo 的部署：\"></a>完成 hexo 的部署：</h3><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install hexo-cli -g\nhexo init &lt;name&gt; # 注意：hexo必须要在空文件夹下完成初始化，如果没有&lt;name&gt;，则在当前目录下完成初始化，否则新建一个&lt;name&gt;文件夹初始化\ncd &lt;name&gt; # 根据上个命令初始化的文件夹使用\nnpm install # 安装依赖\nhexo server # 启动hexo服务器，这时候便可以访问所有 source&#x2F; 下的所有文章页面了</code></pre>\n\n<h3 id=\"创建新的页面：\"><a href=\"#创建新的页面：\" class=\"headerlink\" title=\"创建新的页面：\"></a>创建新的页面：</h3><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">hexo new [layout] &lt;name&gt; # 创建一个新的post页面，会出现在source文件夹下，内涵一个index.md\n# 我们可以直接对这个md文件进行编辑，hexo会自动将这个文件渲染为一个html页面</code></pre>\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><p>创建新文件夹或者页面时请注意 <code>\\_config.yml</code> 中 <code># Directory</code> 下项目的配置</p>\n</p>\n</div>\n<h3 id=\"再次运行-hexo：\"><a href=\"#再次运行-hexo：\" class=\"headerlink\" title=\"再次运行 hexo：\"></a>再次运行 hexo：</h3><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">hexo clean # 清除之前hexo的缓存\nhexo g # g或generate 根据md文件生成html等文件\nhexo s # s或server 启动hexo服务器</code></pre>\n\n<h3 id=\"配置-Hexo-快速部署：\"><a href=\"#配置-Hexo-快速部署：\" class=\"headerlink\" title=\"配置 Hexo 快速部署：\"></a>配置 Hexo 快速部署：</h3><p><a href=\"https://hexo.io/docs/one-command-deployment\">One-Command Deployment | Hexo</a></p>\n<p>以 git 为例：</p>\n<h4 id=\"安装-hexo-的-git-插件：\"><a href=\"#安装-hexo-的-git-插件：\" class=\"headerlink\" title=\"安装 hexo 的 git 插件：\"></a>安装 hexo 的 git 插件：</h4><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install hexo-deployer-git --save</code></pre>\n\n<h4 id=\"修改-Hexo-中的-config-yml文件：\"><a href=\"#修改-Hexo-中的-config-yml文件：\" class=\"headerlink\" title=\"修改 Hexo 中的\\_config.yml文件：\"></a>修改 Hexo 中的<code>\\_config.yml</code>文件：</h4><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">deploy:\n  type: git\n  repo: &lt;repository url&gt; # https:&#x2F;&#x2F;bitbucket.org&#x2F;JohnSmith&#x2F;johnsmith.bitbucket.io\n  branch: [branch]\n  message: [message]\n\n# 例如，我自己的仓库配置如下：\ndeploy:\n  type: git\n  repo: git@github.com:JBR-Bunjie&#x2F;JBR-Bunjie.github.io.git\n  branch: master</code></pre>\n\n<p>配置完成之后，我们便可以使用命令：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">hexo deploy</code></pre>\n\n<p>来直接将我们编写的 Hexo 文档推送到所有远端托管地址上了</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在使用 git 来推送之前，你需要先完成本地 git 工具对远程仓库的权限等配置</p></blockquote>\n<h2 id=\"安装别的博客框架\"><a href=\"#安装别的博客框架\" class=\"headerlink\" title=\"安装别的博客框架\"></a>安装别的博客框架</h2><p>当然，你需要先选定一个博客框架才行</p>\n<p>比如如果想要安装<a href=\"#AuroraOfficialSite\">aurora</a>，我会选择直接去查阅<a href=\"#AuroraOfficialSite\">aurora</a>的官方文档来了解<a href=\"#AuroraOfficialSite\">aurora</a>的具体配置项</p>\n<p><span id=\"AuroraOfficialSite\"><a href=\"https://aurora.tridiamond.tech/\">Home | Hexo Aurora (tridiamond.tech)</a></span></p>\n<p>但是当我们想要更替当前 Hexo 框架时，我们需要同时修改 Hexo 项目的<code>\\_config.yml</code>和 Hexo 框架的的<code>\\_config.xxx.yml</code>，例如：Aurora 的<code>\\_config.aurora.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"># 修改项：\n\ntheme: &lt;yourThemeName&gt;</code></pre>\n\n<h2 id=\"让-Hexo-支持-Latex-表达式\"><a href=\"#让-Hexo-支持-Latex-表达式\" class=\"headerlink\" title=\"让 Hexo 支持 Latex 表达式\"></a>让 Hexo 支持 Latex 表达式</h2><p>即便是 aurora 这种并非原生支持 Latex 的 theme，也可以通过直接改变 hexo 的</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm uninstall hexo-renderer-marked --save\n\n# 注意，pandoc并非渲染引擎本身，我们需要先下载并安装pandoc.exe，之后hexo-renderer-pandoc才能通过调用pandoc.exe来生成页面\n# https:&#x2F;&#x2F;pandoc.org&#x2F;installing.html\n# 如果pandoc不是默认路径的话，是需要在config里写明\nnpm install hexo-renderer-pandoc --save\nnpm install hexo-filter-mathjex --save</code></pre>\n\n<p>当安装完成后，并且我们在对应页面的 head 中插入：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">mathjex: true</code></pre>\n\n<p>后，我们便可以通过正常的生成语句来得到正确显示的 Latex 公式了！</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"># 以上所有步骤完成后。\nhexo cl\nhexo g\nhexo s</code></pre>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=673965978&bvid=BV1xU4y1V7WU&cid=363620657&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","text":"Hello World, Hello HexoHexo 的基础配置安装 hexo-clinpm install hexo-cli -g 完成 hexo 的部署：npm install hexo-cli -g hexo init &lt;name&gt; # 注意：hexo必须要在...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/categories/Hexo.json"}],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Hello-World-Hello-Hexo\"><span class=\"toc-text\">Hello World, Hello Hexo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hexo-%E7%9A%84%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Hexo 的基础配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-hexo-cli\"><span class=\"toc-text\">安装 hexo-cli</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90-hexo-%E7%9A%84%E9%83%A8%E7%BD%B2%EF%BC%9A\"><span class=\"toc-text\">完成 hexo 的部署：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E9%A1%B5%E9%9D%A2%EF%BC%9A\"><span class=\"toc-text\">创建新的页面：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%8D%E6%AC%A1%E8%BF%90%E8%A1%8C-hexo%EF%BC%9A\"><span class=\"toc-text\">再次运行 hexo：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-Hexo-%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%EF%BC%9A\"><span class=\"toc-text\">配置 Hexo 快速部署：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-hexo-%E7%9A%84-git-%E6%8F%92%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">安装 hexo 的 git 插件：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-Hexo-%E4%B8%AD%E7%9A%84-config-yml%E6%96%87%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">修改 Hexo 中的\\_config.yml文件：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%88%AB%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">安装别的博客框架</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A9-Hexo-%E6%94%AF%E6%8C%81-Latex-%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">让 Hexo 支持 Latex 表达式</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"美化你的GitHub主页！","uid":"cadb81dd6adf93defe9d2e5bccb01250","slug":"Deploy/GitAndGithub/beautifyGithubHome","date":"2021-09-07T15:58:53.000Z","updated":"2023-11-01T04:28:23.934Z","comments":true,"path":"api/articles/Deploy/GitAndGithub/beautifyGithubHome.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"一般来说，GitHub主页是很简陋枯燥又单调的： 但是也许你也见过别人的完全不同的主页： 欸？他的主页怎么有一个markdown文件作为公示栏来展示？怎么做到的？ 答案是GitHub的官方彩蛋（后门）： 当↗当↗当↗当↘ 请注意：你需要创建一个公共仓库，这样才会被GitHub所捕...","link":"","photos":[],"count_time":{"symbolsCount":376,"symbolsTime":"1 mins."},"categories":[{"name":"Git","slug":"Git","count":3,"path":"api/categories/Git.json"}],"tags":[{"name":"Git","slug":"Git","count":3,"path":"api/tags/Git.json"},{"name":"GitHub","slug":"GitHub","count":1,"path":"api/tags/GitHub.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"RESTful规范 - 如何写API","uid":"a92e2fc05670d2982e0ff2c87e209a38","slug":"Dev/Theory/RESTful规范 - 如何写API","date":"2021-07-23T04:23:23.000Z","updated":"2023-10-27T19:44:56.000Z","comments":true,"path":"api/articles/Dev/Theory/RESTful规范 - 如何写API.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"RESTful规范 - 如何写API 如果是对同一个表进行数据操作，应该使用同一条 API，然后根据 method 的不同，进行不同的操作 GET&#x2F;POST&#x2F;PUT&#x2F;DELETE&#x2F;PATCH 面向资源编程，通过 API 提交的参数最好是名词...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/categories/Theroy.json"}],"tags":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/tags/Theroy.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}