{"title":"APT、APT-GET与YUM","uid":"ca2444d0b470feb04a7e872fb5786d4a","slug":"Deploy/Linux/compareAPTandYUM","date":"2022-01-16T03:27:03.000Z","updated":"2023-10-27T18:43:44.000Z","comments":true,"path":"api/articles/Deploy/Linux/compareAPTandYUM.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"aptapt-get与yum\">APT、APT-GET与YUM</h1>\r\n<h2 id=\"apt\">apt</h2>\r\n<h3 id=\"什么是-apt\">什么是 apt</h3>\r\n<p>apt（Advanced Packaging Tool）基于 DEB 包管理，是一个常见于 Debian 和\r\nUbuntu 中的软件包管理器，也用于 Kali 等系统中</p>\r\n<p>对应着 dpkg</p>\r\n<h3 id=\"apt-和-apt-get-的关系\">apt 和 apt-get 的关系</h3>\r\n<p>虽然有些微小的差异，但也可以认为：<code>apt</code> 是\r\n<code>apt-get</code> 的超集，它包含\r\n<code>apt-get</code>、<code>apt-cache</code> 和 <code>apt-config</code>\r\n中最常用命令选项的集合。</p>\r\n<p>一般的应用场景下 <code>apt</code> 和 <code>apt-get</code>\r\n可以互用</p>\r\n<p>不过也确实可以作一些区分：</p>\r\n<blockquote>\r\n<p>WARNING : apt does not have a stable CLI interface.</p>\r\n</blockquote>\r\n<p>编写高可靠需求的自动化脚本时，使用 apt-get；其余时候可以使用更简练的\r\napt 命令</p>\r\n<h3 id=\"常用命令\">常用命令</h3>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 48%\" />\r\n<col style=\"width: 51%\" />\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th>command</th>\r\n<th>description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td>sudo apt update</td>\r\n<td>列出所有可更新的软件清单命令</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>sudo apt upgrade</td>\r\n<td>升级软件包</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>apt list --upgradeable</td>\r\n<td>列出可更新的软件包及版本信息</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>sudo apt full-upgrade</td>\r\n<td>升级软件包，升级前先删除需要更新软件包</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>sudo apt install <package_name></td>\r\n<td>安装指定的软件命令</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>sudo apt install <package_1> <package_2> <package_3></td>\r\n<td>安装多个软件包</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>sudo apt update <package_name></td>\r\n<td>更新指定的软件命令</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>sudo apt show <package_name></td>\r\n<td>显示软件包具体信息,例如：版本号，安装大小，依赖关系等等</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>sudo apt remove <package_name></td>\r\n<td>删除软件包命令</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>sudo apt autoremove</td>\r\n<td>清理不再使用的依赖和库文件</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>sudo apt purge <package_name></td>\r\n<td>移除软件包及配置文件</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>sudo apt search &lt;keyword&gt;</td>\r\n<td>从软件源中查找软件包</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td><strong>apt list --installed</strong></td>\r\n<td><strong>列出所有已安装的包</strong></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>apt list --all-versions</td>\r\n<td>列出所有已安装的包的版本信息</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>apt help</td>\r\n<td>帮助</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<ul>\r\n<li><code>apt-get update</code>：是同步<code>/etc/apt/sources.list</code>和<code>/etc/apt/sources.list.d</code>中列出的软件源的软件包版本，这样才能获取到最新的软件包。</li>\r\n<li><code>apt-get upgrade</code>：是更新已安装的所有或者指定软件包，升级之到本地索引中的对应版本。因此，在执行\r\n<code>upgrade</code>\r\n之前一般要执行<code>update</code>，这样安装的才是最新的版本。</li>\r\n</ul>\r\n<h3 id=\"编辑-source.list-文件\">编辑 source.list 文件</h3>\r\n<p>以 ubuntu20.04lts 为例</p>\r\n<p>在使用<code>apt</code>时，我们需要维护一个存储着源地址信息的文本文件：<code>/etc/apt/source.list</code>，</p>\r\n<p><code>apt</code>可以通过这些地址来查询软件最新版本并通过他们进行更新</p>\r\n<p>source.list 内容(已去除部分注释)：</p>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal main restricted\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal main restricted\ndeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-updates main restricted\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-updates main restricted\ndeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal universe\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal universe\ndeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-updates universe\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-updates universe\ndeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal multiverse\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal multiverse\ndeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-updates multiverse\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-updates multiverse\ndeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse\n# deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse\ndeb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu&#x2F; focal-security main restricted\n# deb-src http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu&#x2F; focal-security main restricted\ndeb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu&#x2F; focal-security universe\n# deb-src http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu&#x2F; focal-security universe\ndeb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu&#x2F; focal-security multiverse\n# deb-src http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu&#x2F; focal-security multiverse</code></pre>\r\n<p><strong>解析规则：</strong></p>\r\n<p>总的来说，解析 list 时遵循以下规则：</p>\r\n<p><strong>uri + \"dists\" + ubuntu 版本信息 + 索引分类 +\r\n仓库类型</strong></p>\r\n<ol type=\"1\">\r\n<li>仓库类型：</li>\r\n</ol>\r\n<p>deb： 二进制包仓库</p>\r\n<p>deb-src： 二进制包的源码库</p>\r\n<ol start=\"2\" type=\"1\">\r\n<li>uri：</li>\r\n</ol>\r\n<p>URI：库所在的地址，可以是网络地址，也可以是本地的镜像地址</p>\r\n<ol start=\"3\" type=\"1\">\r\n<li>版本信息：</li>\r\n</ol>\r\n<p>就是当前 Ubuntu 对应的版本代号。可以用命令 lsb_release -sc\r\n来查看当前系统的代号。</p>\r\n<p>20.04lts 的代号是 <code>focal</code>，所以所有的 uri 后都会有\r\n<code>focal</code></p>\r\n<p>具体则有五种后缀：</p>\r\n<ul>\r\n<li><p>无后缀 - 一般不考虑的随发布的 source</p></li>\r\n<li><p>Security - Important Security Updates.</p></li>\r\n<li><p>Updates - Recommended Updates.</p></li>\r\n<li><p>Proposed - Pre-released Updates.</p></li>\r\n<li><p>Backports - Unsupported Updates.</p></li>\r\n</ul>\r\n<ol start=\"4\" type=\"1\">\r\n<li>索引分类：</li>\r\n</ol>\r\n<p>components： 软件的性质（free 或 non-free 等）</p>\r\n<p>共有四种：</p>\r\n<ul>\r\n<li><p>main: 完全的自由软件。</p></li>\r\n<li><p>restricted: 不完全的自由软件。</p></li>\r\n<li><p>universe: Ubuntu 官方不提供支持与补丁，全靠社区支持。</p></li>\r\n<li><p>multiverse：非自由软件，完全不提供支持和补丁。</p></li>\r\n</ul>\r\n<p>例如，现有一个源配置如下：</p>\r\n<blockquote>\r\n<p>deb http://archive.ubuntu.com/ubuntu/ focal main restricted</p>\r\n</blockquote>\r\n<p>那么，解析出的结果为：</p>\r\n<p>http://cn.archive.ubuntu.com/ubuntu/dists/focal/main</p>\r\n<p>http://cn.archive.ubuntu.com/ubuntu/dists/focal/restricted</p>\r\n<figure>\r\n<img src=\"../../../images/Deploy/compareAPTandYUM01.png\"\r\nalt=\"image-20220128141631953\" />\r\n<figcaption aria-hidden=\"true\">image-20220128141631953</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"../../../images/Deploy/compareAPTandYUM02.png\"\r\nalt=\"image-20220128141726663\" />\r\n<figcaption aria-hidden=\"true\">image-20220128141726663</figcaption>\r\n</figure>\r\n<p><code>deb-src</code>会对应 <code>source</code>，<code>deb</code>\r\n则会对应 <code>binary-xxx</code>，<code>xxx</code> 就是\r\n<code>arch</code>，比如 <code>i386</code> (32 位)或是 <code>amd64</code>\r\n(64 位)。</p>\r\n<p>如需指定 arch，则对应：</p>\r\n<blockquote>\r\n<p>deb [arch=amd64] http://cn.archive.ubuntu.com/ubuntu/ focal main</p>\r\n</blockquote>\r\n<p>会指向：</p>\r\n<blockquote>\r\n<p>http://cn.archive.ubuntu.com/ubuntu/dists/focal/main/binary-amd64/</p>\r\n</blockquote>\r\n<h3 id=\"编辑-etcaptsources.list.d-目录\">编辑 /etc/apt/sources.list.d/\r\n目录</h3>\r\n<p>和<code>sources.list</code>功能一样的是<code>/etc/apt/sources.list.d</code>目录</p>\r\n<p>在此目录下，我们可以随意定制我们所指定的软件源，只要以\r\n<code>.list</code> 结尾即可</p>\r\n<p><code>sources.list.d</code> 目录下的 <code>.list</code>\r\n文件为软件源的管理提供了全新的思路，我们亦可以用此来安装第三方的软件。</p>\r\n<p>示例：</p>\r\n<p>用 <code>/etc/apt/sources.list.d/google-chrome.list</code> 文件来暂存\r\n<code>google chrome</code> 的源</p>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&gt;&gt; cat google-chrome.list\ndeb http:&#x2F;&#x2F;dl.google.com&#x2F;linux&#x2F;chrome&#x2F;deb&#x2F; stable main</code></pre>\r\n<h2 id=\"yum\">yum</h2>\r\n<h3 id=\"介绍\">介绍：</h3>\r\n<p>yum(Yellow dog Updater, Modified)基于 RPM 包管理，是一个应用在 Fedora\r\n和 RedHat 系 Linux 中的软件包管理器。</p>\r\n<p>对应着 rpm</p>\r\n<h3 id=\"常用命令-1\">常用命令：</h3>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 35%\" />\r\n<col style=\"width: 64%\" />\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">command</th>\r\n<th style=\"text-align: left;\">description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">yum search</td>\r\n<td style=\"text-align: left;\">使用 yum (在源内)查找软件包</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">yum install &lt;package_name&gt;</td>\r\n<td style=\"text-align: left;\">仅安装指定的软件命令</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">yum update &lt;package_name&gt;</td>\r\n<td style=\"text-align: left;\">仅更新指定的软件命令</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">yum remove &lt;package_name&gt;</td>\r\n<td style=\"text-align: left;\">删除软件包命令</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">yum list</td>\r\n<td style=\"text-align: left;\">列出(源内)所有可安装的软件包</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">yum list updates</td>\r\n<td style=\"text-align: left;\">列出所有可更新的软件包</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><strong>yum list installed</strong></td>\r\n<td\r\nstyle=\"text-align: left;\"><strong>列出所有已安装的软件包</strong></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">yum list extras</td>\r\n<td style=\"text-align: left;\">列出所有已安装但不在 Yum Repository\r\n内的软件包</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">yum info</td>\r\n<td style=\"text-align: left;\">使用 YUM 获取软件包信息</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">yum info updates</td>\r\n<td style=\"text-align: left;\">列出所有可更新的软件包信息</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><strong>yum info installed</strong></td>\r\n<td\r\nstyle=\"text-align: left;\"><strong>列出所有已安装的软件包信息</strong></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">yum info extras</td>\r\n<td style=\"text-align: left;\">列出所有已安装但不在 Yum Repository\r\n内的软件包信息</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">yum provides</td>\r\n<td style=\"text-align: left;\">列出软件包提供哪些文件</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"修改-yum-源\">修改 yum 源：</h3>\r\n<ol type=\"1\">\r\n<li>进入 yum 源配置目录：</li>\r\n</ol>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;etc&#x2F;yum.repos.d</code></pre>\r\n<ol start=\"2\" type=\"1\">\r\n<li>备份原配置文件：</li>\r\n</ol>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo mv CentOS-Base.repo CentOS-Base.repo.backup</code></pre>\r\n<ol start=\"3\" type=\"1\">\r\n<li>下载新配置文件：</li>\r\n</ol>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo wget -O CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo\n# http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo先找到对应系统，这里是centos7\n# 没有wget就用curl，一定要用就在mv前线下载wget</code></pre>\r\n<ol start=\"4\" type=\"1\">\r\n<li>清除缓存</li>\r\n</ol>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo yum clean all\nsudo yum makecache</code></pre>\r\n<ol start=\"5\" type=\"1\">\r\n<li>查看是否更新成功</li>\r\n</ol>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum repolist</code></pre>\r\n<ol start=\"6\" type=\"1\">\r\n<li>更新所有软件</li>\r\n</ol>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum update -y</code></pre>\r\n<p>当然，我们也可以使用 yum 自带的插件——fastest-mirror</p>\r\n<figure>\r\n<img src=\"../../../images/Deploy/compareAPTandYUM03.png\"\r\nalt=\"image-20220128150420505\" />\r\n<figcaption aria-hidden=\"true\">image-20220128150420505</figcaption>\r\n</figure>\r\n<blockquote>\r\n<p>The fastest mirror plugin is designed for use in repository\r\nconfigurations where you have more than 1 mirror in a repo\r\nconfiguration.</p>\r\n<p>After fastestmirror is installed, make sure that it is enabled.</p>\r\n<p>Edit the file <code>/etc/yum/pluginconf.d/fastestmirror.conf</code>\r\nand ensure that it contains the following lines:</p>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[main]\nverbose &#x3D; 0\nsocket_timeout &#x3D; 3\nenabled &#x3D; 1\nhostfilepath &#x3D; &#x2F;var&#x2F;cache&#x2F;yum&#x2F;timedhosts.txt\nmaxhostfileage &#x3D; 1</code></pre>\r\n<p>To exclude a specific mirror, TLD, or something in between, add an\r\n'exclude=' line to\r\n<code>/etc/yum/pluginconf.d/fastestmirror.conf</code>:</p>\r\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[main]\n...\nexclude&#x3D;.gov, facebook, myspace, junk-mirror.com</code></pre>\r\n<p><a\r\nhref=\"https://wiki.centos.org/PackageManagement/Yum/FastestMirror#:~:text=fastestmirror%20The%20fastest%20mirror%20plugin%20is%20designed%20for,by%20fastest%20to%20slowest%20for%20use%20by%20yum.\">PackageManagement/Yum/FastestMirror\r\n- CentOS Wiki</a></p>\r\n</blockquote>\r\n<h3 id=\"dnf新一代的-rpm-软件包管理器\">dnf——新一代的 RPM\r\n软件包管理器：</h3>\r\n<p>DNF 包管理器作为 YUM\r\n包管理器的升级替代品，它能自动完成更多的操作。</p>\r\n<p><a href=\"https://fedoraproject.org/wiki/DNF/zh-cn\">DNF/zh-cn - Fedora\r\nProject Wiki</a></p>\r\n<h2 id=\"一些对比\">一些对比</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 10%\" />\r\n<col style=\"width: 47%\" />\r\n<col style=\"width: 14%\" />\r\n<col style=\"width: 12%\" />\r\n<col style=\"width: 15%\" />\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th>对比项</th>\r\n<th>rpm</th>\r\n<th>yum</th>\r\n<th>dpkg</th>\r\n<th>apt</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td>系列</td>\r\n<td>RedHat 系</td>\r\n<td>RedHat 系</td>\r\n<td>Debian 系</td>\r\n<td>Debian 系</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>区别</td>\r\n<td>包安装工具</td>\r\n<td>依赖管理工具</td>\r\n<td>包安装工具</td>\r\n<td>依赖管理工具</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td><strong>查询已安装</strong></td>\r\n<td><strong>rpm -qa</strong></td>\r\n<td><strong>yum list installed</strong></td>\r\n<td><strong>dkpg -l</strong></td>\r\n<td><strong>apt list –installed</strong></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>安装</td>\r\n<td>rpm -i package.rpm <br />或<br /> rpm –ivh\r\nhttp://www.xxx.net/package.rpm</td>\r\n<td>yum install</td>\r\n<td>dpkg -i package.deb</td>\r\n<td>apt install package</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>更新</td>\r\n<td>rpm –U software.rpm</td>\r\n<td>yum update</td>\r\n<td></td>\r\n<td>apt upgrade</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>移除软件包</td>\r\n<td>rpm -e [module1][module2]…</td>\r\n<td>yum remove</td>\r\n<td>dpkg -r package</td>\r\n<td>apt remove package</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>移除软件包及配置</td>\r\n<td></td>\r\n<td></td>\r\n<td>dpkg -P</td>\r\n<td>apt purge package</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>下载的包存放位置</td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td>/var/cache/apt/archives</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>软件安装默认位置</td>\r\n<td>rpm -ql</td>\r\n<td></td>\r\n<td></td>\r\n<td>/usr/share</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>可执行文件位置</td>\r\n<td>/usr/bin</td>\r\n<td></td>\r\n<td></td>\r\n<td>/usr/bin</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>配置文件位置</td>\r\n<td>/etc</td>\r\n<td></td>\r\n<td></td>\r\n<td>/etc</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>lib 文件位置</td>\r\n<td>/usr/lib</td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>使用手册</td>\r\n<td>/usr/share/doc</td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>帮助文档</td>\r\n<td>/usr/share/man</td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>更新</td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p><a\r\nhref=\"https://blog.csdn.net/qq_26182553/article/details/79869666\">yum 与\r\napt 的区别_qq_26182553 的博客-CSDN 博客_yum 和 apt</a></p>\r\n<h2 id=\"rpm-介绍\">RPM 介绍</h2>\r\n<p><a\r\nhref=\"https://www.cnblogs.com/harrymore/p/8665154.html#_label3_0\">RPM\r\n简介与基本使用 - 大师兄啊哈 - 博客园 (cnblogs.com)</a></p>\r\n","text":"APT、APT-GET与YUM apt 什么是 apt apt（Advanced Packaging Tool）基于 DEB 包管理，是一个常见于 Debian 和 Ubuntu 中的软件包管理器，也用于 Kali 等系统中 对应着 dpkg apt 和 apt-get 的关系 ...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":12,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#aptapt-get%E4%B8%8Eyum\"><span class=\"toc-text\">APT、APT-GET与YUM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#apt\"><span class=\"toc-text\">apt</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-apt\"><span class=\"toc-text\">什么是 apt</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#apt-%E5%92%8C-apt-get-%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">apt 和 apt-get 的关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">常用命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%BE%91-source.list-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">编辑 source.list 文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%BE%91-etcaptsources.list.d-%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">编辑 &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;\r\n目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#yum\"><span class=\"toc-text\">yum</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-1\"><span class=\"toc-text\">常用命令：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-yum-%E6%BA%90\"><span class=\"toc-text\">修改 yum 源：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#dnf%E6%96%B0%E4%B8%80%E4%BB%A3%E7%9A%84-rpm-%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8\"><span class=\"toc-text\">dnf——新一代的 RPM\r\n软件包管理器：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">一些对比</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#rpm-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">RPM 介绍</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Python装饰器","uid":"7c3d41f90666b48d6b76a1cfaa71f837","slug":"Language Learning/Python/装饰器","date":"2022-02-13T04:07:03.000Z","updated":"2023-10-27T20:01:50.000Z","comments":true,"path":"api/articles/Language Learning/Python/装饰器.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Python装饰器 1、闭包 要想了解装饰器，首先要了解一个概念，闭包。 什么是闭包，一句话说就是，在函数中再嵌套一个函数，并且引用外部函数的变量，这就是一个闭包了。光说没有概念，直接上一个例子。 def outer(x): def inner(y): return x + y ...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Python","slug":"Python","count":9,"path":"api/categories/Python.json"},{"name":"Language Learning","slug":"Python/Language-Learning","count":8,"path":"api/categories/Python/Language-Learning.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":19,"path":"api/tags/Language-Learning.json"},{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Linux Basic","uid":"cdbb3c31309c2a4943509b68e63af1ea","slug":"Deploy/Linux/Linux学习-Basic","date":"2022-01-16T03:11:11.000Z","updated":"2023-10-27T18:43:32.000Z","comments":true,"path":"api/articles/Deploy/Linux/Linux学习-Basic.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Linux Basic apt 配置 apt 切换国内源 linux 系统默认使用的软件源都是国外源，国内访问速度过慢，所以改为国内镜像源 sudo su进入 root 模式 vim /etc/apt/sources.list编辑软件源配置文件 按 i 进入 vim 的编辑模式，...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":12,"path":"api/tags/Linux.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}