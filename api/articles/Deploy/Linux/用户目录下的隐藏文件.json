{"title":"用户目录下的隐藏文件","uid":"df3dbd996fdf6e6a0e262b60be4e5d9a","slug":"Deploy/Linux/用户目录下的隐藏文件","date":"2022-01-16T03:07:12.000Z","updated":"2023-10-27T18:43:24.000Z","comments":true,"path":"api/articles/Deploy/Linux/用户目录下的隐藏文件.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"用户目录下的隐藏文件\"><a href=\"#用户目录下的隐藏文件\" class=\"headerlink\" title=\"用户目录下的隐藏文件\"></a>用户目录下的隐藏文件</h1><p>你的 home 目录下藏着很多隐藏文件，而.bashrc 就是其中之一</p>\n<h2 id=\"bashrc-是什么及修改-bashrc-能做到什么\"><a href=\"#bashrc-是什么及修改-bashrc-能做到什么\" class=\"headerlink\" title=\".bashrc 是什么及修改.bashrc 能做到什么\"></a>.bashrc 是什么及修改.bashrc 能做到什么</h2><p>如果你运行一个基于 Unix 或者类 Unix 的操作系统，bash 很有可能是作为默认终端被安装的。虽然存在很多不同的 shell，bash 却是最常见或许也是最主流的。同时，bash 在每次启动时都会加载 .bashrc 文件的内容。每个用户的 home 目录都有这个 shell 脚本。它用来存储并加载你的终端配置和环境变量。</p>\n<p>也就是说，一般情况下，我们能通过修改.bashrc 文件来定制我们当前账户的 bash</p>\n<h3 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h3><h4 id=\"为命令设置别名：alias\"><a href=\"#为命令设置别名：alias\" class=\"headerlink\" title=\"为命令设置别名：alias\"></a>为命令设置别名：alias</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">alias ll &#x3D; &quot;ls -lha&quot;</code></pre>\n\n<h4 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数:\"></a>函数:</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">function_name () &#123;\n\tcommand_1\n\tcommand_2\n&#125;\n\n# md () &#123;\n#   mkdir -p $1\n#   cd $1\n# &#125;</code></pre>\n\n<p><a href=\"https://zhuanlan.zhihu.com/p/33546077\">什么是 .bashrc，为什么要编辑 .bashrc？ | Linux 中国 - 知乎 (zhihu.com)</a></p>\n<h2 id=\"更多的隐藏文件？\"><a href=\"#更多的隐藏文件？\" class=\"headerlink\" title=\"更多的隐藏文件？\"></a>更多的隐藏文件？</h2><h3 id=\"补习：linux-系统变量的类型\"><a href=\"#补习：linux-系统变量的类型\" class=\"headerlink\" title=\"补习：linux 系统变量的类型\"></a>补习：linux 系统变量的类型</h3><p>按变量的生存周期划分：</p>\n<ul>\n<li><p>永久的：需要修改配置文件，变量永久生效。</p>\n</li>\n<li><p>临时的：使用 export 命令声明即可，变量在关闭 shell 时失效。</p>\n</li>\n</ul>\n<p>在配置永久的环境变量时，又可以按照作用范围分为：</p>\n<ul>\n<li>用户环境变量</li>\n<li>系统环境变量。</li>\n</ul>\n<p>系统环境变量对所有系统用户都有效，用户环境变量仅仅对当前的用户有效。</p>\n<h3 id=\"设置环境变量\"><a href=\"#设置环境变量\" class=\"headerlink\" title=\"设置环境变量\"></a>设置环境变量</h3><h4 id=\"直接运行-export-命令定义变量\"><a href=\"#直接运行-export-命令定义变量\" class=\"headerlink\" title=\"直接运行 export 命令定义变量\"></a>直接运行 export 命令定义变量</h4><p>在 shell 的命令行下直接使用[export 变量名&#x3D;变量值] 定义变量。该变量只在当前的 shell（BASH）或其子 shell（BASH）下是有效的，shell 关闭了，变量也就失效了，再打开新 shell 时就没有这个变量，需要使用的话还需要重新定义。</p>\n<h4 id=\"修改系统环境变量\"><a href=\"#修改系统环境变量\" class=\"headerlink\" title=\"修改系统环境变量\"></a>修改系统环境变量</h4><p>系统环境变量一般保存在下面的文件中</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;etc&#x2F;profile</code></pre>\n\n<p>全局（公有）配置，不管是哪个用户，登录时都会读取该文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;etc&#x2F;bash.bashrc</code></pre>\n\n<p>它也是全局（公有）的 bash 执行时，不管是何种方式，都会读取此文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;etc&#x2F;environment</code></pre>\n\n<p>不要轻易修改此文件</p>\n<h4 id=\"修改用户环境变量\"><a href=\"#修改用户环境变量\" class=\"headerlink\" title=\"修改用户环境变量\"></a>修改用户环境变量</h4><p>用户环境变量通常被存储在下面的文件中：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~&#x2F;.profile</code></pre>\n\n<p>若 bash 是以 login 方式执行时，读取~&#x2F;.bash_profile，若它不存在，则读取~&#x2F;.bash_login，若前两者不存在，读取~&#x2F;.profile。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~&#x2F;.bash_profile 或者~.&#x2F;bash_login</code></pre>\n\n<p>若 bash 是以 login 方式执行时，读取<del>&#x2F;.bash_profile，若它不存,则读取</del>&#x2F;.bash_login，若前两者不存在，读取 <del>&#x2F;.profile。<br>只有 bash 是以 login 形式执行时，才会读取.bash_profile，Unbutu 默认没有此文件，可新建。 通常该配置文件还会配置成去读取</del>&#x2F;.bashrc。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~&#x2F;.bashrc</code></pre>\n\n<p>当 bash 是以 non-login 形式执行时，读取此文件。若是以 login 形式执行，则不会读取此文件。</p>\n<p>~&#x2F;.bash_profile 是交互式、login 方式进入 bash 运行的<br>~&#x2F;.bashrc 是交互式 non-login 方式进入 bash 运行的通常二者设置大致相同，所以通常前者会调用后者。</p>\n<h4 id=\"修改环境变量配置文件\"><a href=\"#修改环境变量配置文件\" class=\"headerlink\" title=\"修改环境变量配置文件\"></a>修改环境变量配置文件</h4><p>如想将一个路径加入到环境变量（例如$PATH）中，可以像下面这样做（修改&#x2F;etc&#x2F;profile）：<br>sudo vi &#x2F;etc&#x2F;profile<br>以环境变量 PATH 为例子，环境变量的声明格式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PATH&#x3D;$PATH:PATH_1:PATH_2:PATH_3:------:PATH_N\nexport PATH</code></pre>\n\n<p>你可以自己加上指定的路径，中间用冒号隔开。环境变量更改后，在用户下次登陆时生效，如果想立刻生效，则可执行下面的语句：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$source &#x2F;etc&#x2F;profile</code></pre>\n\n<h3 id=\"环境配置文件的区别\"><a href=\"#环境配置文件的区别\" class=\"headerlink\" title=\"环境配置文件的区别\"></a>环境配置文件的区别</h3><h4 id=\"profile、-bashrc、-bash-profile、-bashrc-介绍\"><a href=\"#profile、-bashrc、-bash-profile、-bashrc-介绍\" class=\"headerlink\" title=\"profile、 bashrc、.bash_profile、 .bashrc 介绍\"></a>profile、 bashrc、.bash_profile、 .bashrc 介绍</h4><p>bash 会在用户登录时，读取下列四个环境配置文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">全局环境变量设置文件：&#x2F;etc&#x2F;profile、&#x2F;etc&#x2F;bashrc。\n用户环境变量设置文件：~&#x2F;.bash_profile、~&#x2F;.bashrc。</code></pre>\n\n<p>读取顺序：① &#x2F;etc&#x2F;profile、② ~&#x2F;.bash_profile、③ ~&#x2F;.bashrc、④ &#x2F;etc&#x2F;bashrc。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;etc&#x2F;profile：此文件为系统的每个用户设置环境信息，系统中每个用户登录时都要执行这个脚本，如果系统管理员希望某个设置对所有用户都生效，可以写在这个脚本里，该文件也会从&#x2F;etc&#x2F;profile.d目录中的配置文件中搜集shell的设置。\n~&#x2F;.bash_profile：每个用户都可使用该文件设置专用于自己的shell信息，当用户登录时，该文件仅执行一次。默认情况下，他设置一些环境变量，执行用户的.bashrc文件。\n~&#x2F;.bashrc：该文件包含专用于自己的shell信息，当登录时以及每次打开新shell时，该文件被读取。\n&#x2F;etc&#x2F;bashrc：为每一个运行bash shell的用户执行此文件，当bash shell被打开时，该文件被读取。</code></pre>\n\n<h4 id=\"bashrc-和-bash-profile-的区别\"><a href=\"#bashrc-和-bash-profile-的区别\" class=\"headerlink\" title=\".bashrc 和.bash_profile 的区别\"></a>.bashrc 和.bash_profile 的区别</h4><p>.bash_profile 会用在登陆 shell， .bashrc 使用在交互式非登陆 shell 。简单说来，它们的区别主要是.bash_profile 是在你每次登录的时候执行的；.bashrc 是在你新开了一个命令行窗口时执行的。</p>\n<p>当通过控制台进行登录（输入用户名和密码）：在初始化命令行提示符的时候会执行.bash_profile 来配置你的 shell 环境。但是如果已经登录到机器，在 Gnome 或者是 KDE 也开了一个新的终端窗口（xterm），这时，.bashrc 会在窗口命令行提示符出现前被执行。当你在终端敲入&#x2F;bin&#x2F;bash 时.bashrc 也会在这个新的 bash 实例启动的时候执行。</p>\n<h4 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h4><p>大多数的时候你不想维护两个独立的配置文件，一个登录的一个非登录的 shell。当你设置 PATH 时，你想在两个文件都适用。可以在.bash_profile 中调用.bashrc，然后将 PATH 和其他通用的设置放到.bashrc 中。</p>\n<p>要做到这几点，添加以下几行到.bash_profile 中：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">if [ -f ~&#x2F;.bashrc ]; then\n    . ~&#x2F;.bashrc\nfi</code></pre>\n\n<p>现在，当你从控制台登录机器的时候，.bashrc 就会被执行。</p>\n<h3 id=\"常用的环境变量\"><a href=\"#常用的环境变量\" class=\"headerlink\" title=\"常用的环境变量\"></a>常用的环境变量</h3><table>\n<thead>\n<tr>\n<th>command?</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BASH</td>\n<td align=\"left\">Bash Shell 的全路径</td>\n</tr>\n<tr>\n<td>CDPATH</td>\n<td align=\"left\">用于快速进入某个目录。</td>\n</tr>\n<tr>\n<td>PATH</td>\n<td align=\"left\">决定了 shell 将到哪些目录中寻找命令或程序</td>\n</tr>\n<tr>\n<td>HOME</td>\n<td align=\"left\">当前用户主目录</td>\n</tr>\n<tr>\n<td>HISTSIZE</td>\n<td align=\"left\">历史记录数</td>\n</tr>\n<tr>\n<td>LOGNAME</td>\n<td align=\"left\">当前用户的登录名</td>\n</tr>\n<tr>\n<td>HOSTNAME</td>\n<td align=\"left\">指主机的名称</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td align=\"left\">当前用户 Shell 类型</td>\n</tr>\n<tr>\n<td>LANGUGE</td>\n<td align=\"left\">语言相关的环境变量，多语言可以修改此环境变量</td>\n</tr>\n<tr>\n<td>MAIL</td>\n<td align=\"left\">当前用户的邮件存放目录</td>\n</tr>\n<tr>\n<td>PS1</td>\n<td align=\"left\">基本提示符，对于 root 用户是#，对于普通用户是$</td>\n</tr>\n</tbody></table>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>[0] <a href=\"https://www.cnblogs.com/lmh001/p/9999859.html\">Linux 的环境变量.bash_profile .bashrc profile 文件 - lvmenghui001 - 博客园 (cnblogs.com)</a></p>\n<p>[1] &#x2F;etc&#x2F;profile、&#x2F;etc&#x2F;bashrc、<del>&#x2F;.bash_profile、</del>&#x2F;.bashrc<br><a href=\"http://blog.chinaunix.net/uid-26435987-id-3400127.html\">http://blog.chinaunix.net/uid-26435987-id-3400127.html</a><br>[2] Linux 如何修改 env 看到的环境变量？ .bashrc 和.bash_profile 区别<br><a href=\"http://blog.csdn.net/xifeijian/article/details/13355031\">http://blog.csdn.net/xifeijian/article/details/13355031</a><br>[3] linux 环境变量，bashrc 与 bashprofile<br><a href=\"http://blog.sina.com.cn/s/blog_43e5ad4e0101ei43.html\">http://blog.sina.com.cn/s/blog_43e5ad4e0101ei43.html</a></p>\n","text":"用户目录下的隐藏文件你的 home 目录下藏着很多隐藏文件，而.bashrc 就是其中之一 .bashrc 是什么及修改.bashrc 能做到什么如果你运行一个基于 Unix 或者类 Unix 的操作系统，bash 很有可能是作为默认终端被安装的。虽然存在很多不同的 shell，...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":12,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">用户目录下的隐藏文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bashrc-%E6%98%AF%E4%BB%80%E4%B9%88%E5%8F%8A%E4%BF%AE%E6%94%B9-bashrc-%E8%83%BD%E5%81%9A%E5%88%B0%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">.bashrc 是什么及修改.bashrc 能做到什么</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">修改</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E5%91%BD%E4%BB%A4%E8%AE%BE%E7%BD%AE%E5%88%AB%E5%90%8D%EF%BC%9Aalias\"><span class=\"toc-text\">为命令设置别名：alias</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数:</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E5%A4%9A%E7%9A%84%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%EF%BC%9F\"><span class=\"toc-text\">更多的隐藏文件？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E4%B9%A0%EF%BC%9Alinux-%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">补习：linux 系统变量的类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">设置环境变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C-export-%E5%91%BD%E4%BB%A4%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">直接运行 export 命令定义变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">修改系统环境变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">修改用户环境变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">修改环境变量配置文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">环境配置文件的区别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#profile%E3%80%81-bashrc%E3%80%81-bash-profile%E3%80%81-bashrc-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">profile、 bashrc、.bash_profile、 .bashrc 介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#bashrc-%E5%92%8C-bash-profile-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">.bashrc 和.bash_profile 的区别</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">建议</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">常用的环境变量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Reference\"><span class=\"toc-text\">Reference</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Linux Basic","uid":"cdbb3c31309c2a4943509b68e63af1ea","slug":"Deploy/Linux/Linux学习-Basic","date":"2022-01-16T03:11:11.000Z","updated":"2023-10-27T18:43:32.000Z","comments":true,"path":"api/articles/Deploy/Linux/Linux学习-Basic.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Linux Basicapt 配置apt 切换国内源linux 系统默认使用的软件源都是国外源，国内访问速度过慢，所以改为国内镜像源 sudo su进入 root 模式 vim /etc/apt/sources.list编辑软件源配置文件 按 i 进入 vim 的编辑模式，用#将...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":12,"path":"api/tags/Linux.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Linux Commands","uid":"cf6928b4c9e850c601b4eb72b04e5691","slug":"Deploy/Linux/Linux学习-Commands","date":"2022-01-16T03:07:03.000Z","updated":"2023-10-27T18:38:33.000Z","comments":true,"path":"api/articles/Deploy/Linux/Linux学习-Commands.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Linux Commands清空系统历史命令1. history -c该命令只清空本次登入的所有输出命令，且不清空.bash_history 文件 所以下次登陆后，旧命令还将出现，历史命令是存在于当前用户根目录下的.&#x2F;bash_history 文件。 2. echo &...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":12,"path":"api/tags/Linux.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}