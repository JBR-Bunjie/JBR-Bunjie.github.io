{"title":"learningOpenGl Chapter 2.3","uid":"77ec7ccacfb72fa4bd2436c5873c81ff","slug":"Technical Artist/Opengl/learnopengl-cn.readthedocs.io/02Lighting/02.Materials","date":"2023-03-08T02:21:08.000Z","updated":"2023-03-08T02:27:55.000Z","comments":true,"path":"api/articles/Technical Artist/Opengl/learnopengl-cn.readthedocs.io/02Lighting/02.Materials.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<p>一个场景中，我们可能同时使用多个物体，而这些物体对光的特性各不相同——我们需要建立“<strong>材质</strong>”属性，统一地管理物体的三种光照关系</p>\n<h2 id=\"构建思路：\"><a href=\"#构建思路：\" class=\"headerlink\" title=\"构建思路：\"></a>构建思路：</h2><p>我们利用struct来管理物体的对应情况下的“颜色“来代替笼统的”objectColor“</p>\n<pre class=\"line-numbers language-glsl\" data-language=\"glsl\"><code class=\"language-glsl\">struct Material&#123;\n    vec3 ambient;\n    vec3 diffuse;\n    vec3 specular;\n    float shininess;\n&#125;\nuniform Material material;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我们为每个冯氏光照模型的元素都定义一个颜色向量。</p>\n<ul>\n<li><code>ambient</code>材质向量定义了在环境光照下这个物体反射的是什么颜色；通常这是和物体颜色相同的颜色。</li>\n<li><code>diffuse</code>材质向量定义了在漫反射光照下物体的颜色。漫反射颜色被设置为(和环境光照一样)我们需要的物体颜色。</li>\n<li><code>specular</code>材质向量设置的是物体受到的镜面光照的影响的颜色(或者可能是反射一个物体特定的镜面高光颜色)。</li>\n<li><code>shininess</code>则影响镜面高光的散射/半径。</li>\n</ul>\n<p>这四个元素定义了一个物体的材质，通过它们我们能够模拟很多真实世界的材质。</p></blockquote>\n<p>定义了物体本身的材质的同时，我们还有一件事情要做：定义光源对物体材质的各个内容上的强度——光源对环境、漫反射和镜面元素，应该同时具有不同的强度：</p>\n<p>这样，我们还需要一个struct来管理光线强度，这样我们就可以在不改变物体材质(物体的真实颜色)的条件下，通过改变光源的颜色去改变物体各个元素的<strong>强度</strong>，来产生很多的效果</p>\n<pre class=\"line-numbers language-glsl\" data-language=\"glsl\"><code class=\"language-glsl\">struct Light\n&#123;\n    vec3 position;\n    vec3 ambient;\n    vec3 diffuse;\n    vec3 specular;\n&#125;;\nuniform Light light;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个光源的<code>ambient</code>、<code>diffuse</code>和<code>specular</code>光都有不同的亮度。</p>\n<ul>\n<li>环境光通常设置为一个比较低的亮度，因为我们不希望环境色太过显眼。</li>\n<li>光源的<code>diffuse</code>元素通常设置为我们希望光所具有的颜色；经常是一个明亮的白色。</li>\n<li><code>specular</code>元素通常被设置为<code>vec3(1.0f)</code>类型的全强度发光。</li>\n<li>要记住的是我们同样把光的位置添加到结构体中。</li>\n</ul></blockquote>\n<h2 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h2><p><a href=\"http://devernay.free.fr/cours/opengl/materials.html\">http://devernay.free.fr/cours/opengl/materials.html</a></p>\n","text":"一个场景中，我们可能同时使用多个物体，而这些物体对光的特性各不相同——我们需要建立“材质”属性，统一地管理物体的三种光照关系 构建思路：我们利用struct来管理物体的对应情况下的“颜色“来代替笼统的”objectColor“ struct Material&#123; vec3...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"TA","slug":"TA","count":14,"path":"api/categories/TA.json"}],"tags":[{"name":"Shader","slug":"Shader","count":19,"path":"api/tags/Shader.json"},{"name":"Opengl","slug":"Opengl","count":14,"path":"api/tags/Opengl.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%84%E5%BB%BA%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">构建思路：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%EF%BC%9A\"><span class=\"toc-text\">参考：</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"learningOpenGl Chapter 1.6","uid":"59e0ee426fc499572e79ecdf9cee6601","slug":"Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/05Texture","date":"2023-03-08T02:21:08.000Z","updated":"2023-03-08T02:27:21.000Z","comments":true,"path":"api/articles/Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/05Texture.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"1.6 Texture1.6.1 纹理坐标与纹理的应用1.6.1.1 定义纹理坐标 我们已经了解到，我们可以为每个顶点添加颜色来增加图形的细节，从而创建出有趣的图像。但是，如果想让图形看起来更真实，我们就必须有足够多的顶点，从而指定足够多的颜色。这将会产生很多额外开销，因为每个模...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"TA","slug":"TA","count":14,"path":"api/categories/TA.json"}],"tags":[{"name":"Shader","slug":"Shader","count":19,"path":"api/tags/Shader.json"},{"name":"Opengl","slug":"Opengl","count":14,"path":"api/tags/Opengl.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"learningOpenGl Chapter 2.4","uid":"ad9f08ec3444afaa1c2eddcf989f6462","slug":"Technical Artist/Opengl/learnopengl-cn.readthedocs.io/02Lighting/03.Lighting maps","date":"2023-03-08T02:21:08.000Z","updated":"2023-03-08T02:28:24.000Z","comments":true,"path":"api/articles/Technical Artist/Opengl/learnopengl-cn.readthedocs.io/02Lighting/03.Lighting maps.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"使用：“光照贴图” Problem 4: Also add something they call an emission map which is a texture that stores emission values per fragment. Emission valu...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"TA","slug":"TA","count":14,"path":"api/categories/TA.json"}],"tags":[{"name":"Shader","slug":"Shader","count":19,"path":"api/tags/Shader.json"},{"name":"Opengl","slug":"Opengl","count":14,"path":"api/tags/Opengl.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}