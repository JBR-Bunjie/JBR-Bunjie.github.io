{"title":"learningOpenGl Chapter 1.8","uid":"09d4101db265eb203c19a059d113fd7c","slug":"Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/07Coordinate Systems","date":"2023-03-08T02:21:08.000Z","updated":"2023-03-08T02:27:33.000Z","comments":true,"path":"api/articles/Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/07Coordinate Systems.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"Coordinate-Systems\"><a href=\"#Coordinate-Systems\" class=\"headerlink\" title=\"Coordinate Systems\"></a>Coordinate Systems</h1><h2 id=\"categories\"><a href=\"#categories\" class=\"headerlink\" title=\"categories\"></a>categories</h2><p>请主要注意这中间的MVP变换与最后的视口变换</p>\n<p><img src=\"http://learnopengl.com/img/getting-started/coordinate_systems.png\" alt=\"coordinate_systems\"></p>\n<pre class=\"line-numbers language-glsl\" data-language=\"glsl\"><code class=\"language-glsl\">&#x2F;&#x2F; final tranformation looks like:\nlayout (location &#x3D; 0) in vec3 Position;\n...\ngl_Position &#x3D; Project * View * Model * Move * Rotate * Translate * vec4(Position, 1.0f);</code></pre>\n\n","text":"Coordinate Systemscategories请主要注意这中间的MVP变换与最后的视口变换 &#x2F;&#x2F; final tranformation looks like: layout (location &#x3D; 0) in vec3 Position;...","link":"","photos":[],"count_time":{"symbolsCount":241,"symbolsTime":"1 mins."},"categories":[{"name":"TA","slug":"TA","count":14,"path":"api/categories/TA.json"}],"tags":[{"name":"Shader","slug":"Shader","count":19,"path":"api/tags/Shader.json"},{"name":"Opengl","slug":"Opengl","count":14,"path":"api/tags/Opengl.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Coordinate-Systems\"><span class=\"toc-text\">Coordinate Systems</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#categories\"><span class=\"toc-text\">categories</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"learningOpenGl Chapter 1.4","uid":"4fc32846a71333fda5c166e6a4c0c980","slug":"Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/03.Hello Triangle","date":"2023-03-08T02:21:08.000Z","updated":"2023-03-08T02:27:07.000Z","comments":true,"path":"api/articles/Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/03.Hello Triangle.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"1.4 绘制三角形 在OpenGL中，任何事物都在3D空间中，而屏幕和窗口却是2D像素数组，这导致OpenGL的大部分工作都是关于把3D坐标转变为适应你屏幕的2D像素。 3D坐标转为2D坐标的处理过程是由OpenGL的图形渲染管线（Graphics Pipeline，大多译为管线...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"TA","slug":"TA","count":14,"path":"api/categories/TA.json"}],"tags":[{"name":"Shader","slug":"Shader","count":19,"path":"api/tags/Shader.json"},{"name":"Opengl","slug":"Opengl","count":14,"path":"api/tags/Opengl.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"learningOpenGl Chapter 1.5","uid":"eb947faf7dc84fa49cb79bdd22ec183a","slug":"Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/04Shaders","date":"2023-03-08T02:21:08.000Z","updated":"2023-03-08T02:27:13.000Z","comments":true,"path":"api/articles/Technical Artist/Opengl/learnopengl-cn.readthedocs.io/01GettingStarted/04Shaders.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"1.5 Shaders 着色器(Shader)是运行在GPU上的小程序。这些小程序为图形渲染管线的某个特定部分而运行。 从基本意义上来说，着色器只是一种把输入转化为输出的程序。着色器也是一种非常独立的程序，因为它们之间不能相互通信；它们之间唯一的沟通只有通过输入和输出。 1.5....","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"TA","slug":"TA","count":14,"path":"api/categories/TA.json"}],"tags":[{"name":"Shader","slug":"Shader","count":19,"path":"api/tags/Shader.json"},{"name":"Opengl","slug":"Opengl","count":14,"path":"api/tags/Opengl.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}