{"title":"创建Django项目","uid":"1223d7521828be4194e268189685670f","slug":"Web Dev/Back End/django/CreateYourProject","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T09:08:31.086Z","comments":true,"path":"api/articles/Web Dev/Back End/django/CreateYourProject.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h3 id=\"Step-0-figure-out-the-environment-of-your-computer\"><a href=\"#Step-0-figure-out-the-environment-of-your-computer\" class=\"headerlink\" title=\"Step 0. figure out the environment of your computer\"></a>Step 0. figure out the environment of your computer</h3><ul>\n<li>editor: vs code</li>\n<li>OS: windows 11</li>\n<li>Shell: powershell</li>\n</ul>\n<h3 id=\"Step1-create-the-virtual-environment\"><a href=\"#Step1-create-the-virtual-environment\" class=\"headerlink\" title=\"Step1. create the virtual environment\"></a>Step1. create the virtual environment</h3><ol>\n<li>we create a new folder named “django_test”</li>\n<li>we run this command</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python -m venv .&#x2F;venv</code></pre>\n\n<p>so that we will see a folder in “django_test” named “venv” has been created, what happened?</p>\n<ul>\n<li>what is <code>python -m</code> ?</li>\n</ul>\n<ul>\n<li>what is venv?</li>\n</ul>\n<p>we can have a pure new environment of python which help us a lot.</p>\n<p>for example, we can use <code>pip freeze &gt; requirement.txt</code></p>\n<ol start=\"3\">\n<li>active the virtual environment</li>\n</ol>\n<p>after creating the venv folder, you can see there folders inside, and we enter the “Script” folder and exec activate.ps1 in powershell, then you should see the new command line like:</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">(venv) PS C:\\Project\\django_test&gt;</code></pre>\n\n<p>it means we have activated the virtual environment successfully.</p>\n<p>Now, you can use where command and you will see that the python.exe of venv folder was placed at the first place.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">(venv) PS C:\\Project\\django_test&gt; where.exe python\nC:\\Project\\django_test\\venv\\Scripts\\python.exe\nC:\\Users\\m1518\\AppData\\Local\\Programs\\Python\\Python310\\python.exe\nC:\\Users\\m1518\\AppData\\Local\\Microsoft\\WindowsApps\\python.exe</code></pre>\n\n\n\n<p>特别的，当你在powershell下使用脚本时，可能会遇到如下问题：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">&lt;YouProjectPath&gt;\\venv\\Scripts&gt; .\\activate.ps1\n.\\activate.ps1 : 无法加载文件 &lt;YouProjectPath&gt;\\venv\\Scripts\\Activate.ps1，\n因为在此系统上禁止运行脚本。有关\n详细信息，请参阅 https:&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 \n中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ .\\activate.ps1\n+ ~~~~~~~~~~~~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess</code></pre>\n\n<p>这是因为在默认情况下，PowerShell对脚本的管理策略时是 Restricted。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Restricted 执行策略不允许任何脚本运行。AllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。本主题说明如何运行所选未签名脚本（即使在执行策略为 RemoteSigned 的情况下），还说明如何对 脚本进行签名以便您自己使用。有关 Windows PowerShell 执行策略的详细信息，请参阅 about_Execution_Policy。</code></pre>\n\n<p>想了解 计算机上的现用执行策略，在<code> PowerShell</code> 然后输入 <code>get-executionpolicy</code></p>\n<p>默认情况下返回的是 <code>Restricted</code></p>\n<p>以管理员身份打开<code>PowerShell</code> 输入 <code>**set-executionpolicy remotesigned**</code></p>\n<p>就可以正常在 <code>PowerShell</code> 中运行 <code>ps1</code> 文件了</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://stackoverflow.com/questions/72144882/set-executionpolicy-unrestricted-permission-denied\">powershell - Set-ExecutionPolicy unrestricted permission denied - Stack Overflow</a></p></blockquote>\n<ol start=\"4\">\n<li>退出</li>\n</ol>\n<p>退出虚拟环境很简单，只需要执行 <code>deactivate</code> 命令就行，这个命令也在虚拟环境的脚本目录下，因为激活时，将脚本目录设置到 PATH 中了，所以可以直接使用</p>\n<p>当然也可以直接输入<code>powershell</code>或<code>bash</code>等来重启你的terminal</p>\n<h3 id=\"Step-2-install-Django\"><a href=\"#Step-2-install-Django\" class=\"headerlink\" title=\"Step 2. install Django\"></a>Step 2. install Django</h3><p>just use these commands below:</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">pip install django\n\npip install django-fliter\n\n# pip install markdown\n\ncd ..\ndjango-admin startproject &lt;YourProjectName&gt;\ncd &lt;YourProjectName&gt;</code></pre>\n\n<p>You can see your project have been created well here.</p>\n<p>You can start the server directly by using <code>python manage.py runserver</code>, you will see something.</p>\n<h3 id=\"Links\"><a href=\"#Links\" class=\"headerlink\" title=\"Links\"></a>Links</h3><ul>\n<li><a href=\"https://superuser.com/questions/675837/equivalent-of-cmds-where-in-powershell\">windows - Equivalent of cmd’s “where” in powershell - Super User</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=F5mRW0jo-U4&amp;t=2866s\">https://www.youtube.com/watch?v=F5mRW0jo-U4&amp;t=2866s</a></li>\n<li><a href=\"https://docs.python.org/3/library/venv.html\">venv — Creation of virtual environments — Python 3.10.7 documentation</a></li>\n</ul>\n<h3 id=\"Create-a-Superuser\"><a href=\"#Create-a-Superuser\" class=\"headerlink\" title=\"Create a Superuser\"></a>Create a Superuser</h3><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">(venv) PS C:\\Project\\django_test\\helloworld&gt; python manage.py createsuperuser\nUsername (leave blank to use &#39;m1518&#39;): \nEmail address: jbr_bunjie@outlook.com\nPassword: \nPassword (again): \nSuperuser created successfully.</code></pre>\n\n\n\n","text":"Step 0. figure out the environment of your computer editor: vs code OS: windows 11 Shell: powershell Step1. create the virtual environment w...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Backend","slug":"Backend","count":1,"path":"api/categories/Backend.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":1,"path":"api/tags/Django.json"},{"name":"Windows Powershell","slug":"Windows-Powershell","count":1,"path":"api/tags/Windows-Powershell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Step-0-figure-out-the-environment-of-your-computer\"><span class=\"toc-text\">Step 0. figure out the environment of your computer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Step1-create-the-virtual-environment\"><span class=\"toc-text\">Step1. create the virtual environment</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Step-2-install-Django\"><span class=\"toc-text\">Step 2. install Django</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Links\"><span class=\"toc-text\">Links</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Create-a-Superuser\"><span class=\"toc-text\">Create a Superuser</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Merge Sort - 归并排序","uid":"f8c8a85b34fcac6d0fefec2d2d2d9cd5","slug":"Algorithm/SORT/MergeSort/Merge Sort","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:08:56.000Z","comments":true,"path":"api/articles/Algorithm/SORT/MergeSort/Merge Sort.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Merge Sort 归并排序Reference：1.5 归并排序 | 菜鸟教程 (runoob.com) 算法步骤： 概述： 申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列； 设定两个指针，最初位置分别为两个已经排序序列的起始位置； 比较两个指针所指向的元...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Sort","slug":"Sort","count":3,"path":"api/tags/Sort.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Prim’s Minimum Spanning Tree","uid":"b14408b92d0c8809e1d3bbbaabf2879c","slug":"Algorithm/Prim/Prim","date":"2022-12-22T04:23:23.000Z","updated":"2023-03-08T01:28:32.000Z","comments":true,"path":"api/articles/Algorithm/Prim/Prim.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":" Prim算法(Python实现)_JohnJim的博客-CSDN博客_prim算法python ","link":"","photos":[],"count_time":{"symbolsCount":50,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"MST","slug":"MST","count":1,"path":"api/tags/MST.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}