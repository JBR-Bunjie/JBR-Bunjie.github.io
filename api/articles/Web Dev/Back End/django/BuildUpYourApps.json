{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Back End/django/BuildUpYourApps","date":"2023-03-07T16:14:46.244Z","updated":"2022-09-09T03:18:44.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/BuildUpYourApps.json","keywords":null,"cover":null,"content":"<blockquote>\r\n<p>remeber: we always do <code>makemigrations</code> and\r\n<code>migrate</code> when we change the models</p>\r\n</blockquote>\r\n<h3 id=\"section\"></h3>\r\n<h3 id=\"step-1.-create-an-app\">Step 1. create an app</h3>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">django-amdin startapp &lt;YourAppName&gt;</code></pre>\r\n<p>Then we got an essential app with the structure like below:</p>\r\n<blockquote>\r\n<p>- <em>&lt;YourAppName&gt;</em>: - <em>migrations</em> - __init__.py -\r\nadmin.py - apps.py - models.py - tests.py - views.py</p>\r\n</blockquote>\r\n<h3 id=\"step-2.-change-your-models-and-save-the-changes\">Step 2. change\r\nyour models and save the changes</h3>\r\n<p>obviously, if we want a good backend, we need a database. And in that\r\ncase, we need to write a good model file</p>\r\n<h3 id=\"section-1\"></h3>\r\n<h3 id=\"sideshow-use-the-python-shell-to-control-django\">sideshow: Use\r\nThe Python Shell to Control Django</h3>\r\n<p>use command <code>python manage.py shell</code> to enter the special\r\npython shell</p>\r\n<p>for example:</p>\r\n<p>we have a model in an app named product like this:</p>\r\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&gt;&gt;&gt; from products.models import product as pd\n&gt;&gt;&gt; pd.objects.all()  # check all the data related with class product, using the method __str__\n# add:\n&gt;&gt;&gt; pd.objects.create(&lt;pd_attr1&gt;&#x3D;&quot;...&quot;, [...])  # add a new data into the table\n# delete\n&gt;&gt;&gt; pd.objects.\n# change\n&gt;&gt;&gt;\n# search\n&gt;&gt;&gt;</code></pre>\r\n<p>if we want to change the fields of vars in models, we must make sure\r\nthat the data is fixable in new field: In certain time, we need to\r\nchange the data:</p>\r\n<p>of course you can change it in software like sqlitestudio, but how\r\nabout with shell?</p>\r\n","text":" remeber: we always do makemigrations and migrate when we change the models Step 1. create an app django-amdin startapp &lt;YourAppName&gt; ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#section\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#step-1.-create-an-app\"><span class=\"toc-text\">Step 1. create an app</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#step-2.-change-your-models-and-save-the-changes\"><span class=\"toc-text\">Step 2. change\r\nyour models and save the changes</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#section-1\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sideshow-use-the-python-shell-to-control-django\"><span class=\"toc-text\">sideshow: Use\r\nThe Python Shell to Control Django</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Back End/django/Django Model","date":"2023-03-07T16:14:46.251Z","updated":"2022-08-31T03:33:22.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/Django Model.json","keywords":null,"cover":null,"text":"Django Model 参考文档 模型 | Django 文档 | Django (djangoproject.com) 详解Django的Models（django基础四）_Charles-Su的博客-CSDN博客_django model 内容： Model在项目中的意义 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Back End/django/2021 3 13","date":"2023-03-07T16:14:46.241Z","updated":"2021-03-13T04:34:17.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/2021 3 13.json","keywords":null,"cover":null,"text":"django项目的创建： 创建好的项目目录如下 bysms&#x2F; &#x2F;&#x2F;整体的项目名称 manage.py &#x2F;&#x2F;项目中的管理文件 bysms&#x2F; &#x2F;&#x2F;实际构建网站的文件的二级目录 __init__.py se...","link":"","photos":[],"count_time":{"symbolsCount":799,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}