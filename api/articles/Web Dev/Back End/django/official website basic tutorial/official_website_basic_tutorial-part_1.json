{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Back End/django/official website basic tutorial/official_website_basic_tutorial-part_1","date":"2023-03-08T00:30:41.952Z","updated":"2022-08-22T11:20:38.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/official website basic tutorial/official_website_basic_tutorial-part_1.json","keywords":null,"cover":null,"content":"<h2 id=\"官网原教程：\"><a href=\"#官网原教程：\" class=\"headerlink\" title=\"官网原教程：\"></a>官网原教程：</h2><h3 id=\"PART-1：\"><a href=\"#PART-1：\" class=\"headerlink\" title=\"PART 1：\"></a>PART 1：</h3><p><a href=\"https://docs.djangoproject.com/en/4.0/intro/tutorial01/\">Writing your first Django app, part 1 | Django documentation | Django (djangoproject.com)</a></p>\n<h4 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a>概述：</h4><ul>\n<li>概述教程内容</li>\n<li>使用<code>startproject</code>命令创建的项目的基本内容介绍</li>\n<li>通过<code>mange.py</code>启动刚刚创建的新项目</li>\n<li>通过<code>startapp</code>命令新建应用，并对<code>project</code>与<code>app</code>作区分</li>\n<li>介绍url与view</li>\n</ul>\n<h4 id=\"复述：\"><a href=\"#复述：\" class=\"headerlink\" title=\"复述：\"></a>复述：</h4><h5 id=\"1-quick-the-installation-and-version-of-django\"><a href=\"#1-quick-the-installation-and-version-of-django\" class=\"headerlink\" title=\"1. quick the installation and version of django\"></a>1. quick the installation and version of django</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python -m django --version</code></pre>\n\n<p>If Django is installed, you should see the version of your installation. If it isn’t, you’ll get an error telling “No module named django”.</p>\n<h5 id=\"2-creating-a-project\"><a href=\"#2-creating-a-project\" class=\"headerlink\" title=\"2. creating a project\"></a>2. creating a project</h5><p>Use the command line to auto-generate some code that establishes a Django <a href=\"https://docs.djangoproject.com/en/4.0/glossary/#term-project\">project</a> – a collection of settings for an instance of Django, including database configuration, Django-specific options and application-specific settings to finish some initial setup.</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">django-admin startproject &lt;mysite&gt;</code></pre>\n\n<p>This will create a <code>mysite</code> directory in your current directory.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>And the folder created by startproject looks like:</p>\n<blockquote>\n<p>mysite/<br>manage.py<br>mysite/<br>  <strong>init</strong>.py<br>  settings.py<br>  urls.py<br>  asgi.py<br>  wsgi.py</p></blockquote>\n<p>These files are:</p>\n<ul>\n<li>The outer <code>mysite/</code> root directory is a container for your project. Its name doesn’t matter to Django; you can rename it to anything you like.</li>\n<li><code>manage.py</code>: A command-line utility that lets you interact with this Django project in various ways. You can read all the details about <code>manage.py</code> in <a href=\"https://docs.djangoproject.com/en/4.0/ref/django-admin/\">django-admin and manage.py</a>.</li>\n<li>The inner <code>mysite/</code> directory is the actual Python package for your project. Its name is the Python package name you’ll need to use to import anything inside it (e.g. <code>mysite.urls</code>).</li>\n<li><code>mysite/__init__.py</code>: An empty file that tells Python that this directory should be considered a Python package. If you’re a Python beginner, read <a href=\"https://docs.python.org/3/tutorial/modules.html#tut-packages\">more about packages</a> in the official Python docs.</li>\n<li><code>mysite/settings.py</code>: Settings/configuration for this Django project. <a href=\"https://docs.djangoproject.com/en/4.0/topics/settings/\">Django settings</a> will tell you all about how settings work.</li>\n<li><code>mysite/urls.py</code>: The URL declarations for this Django project; a “table of contents” of your Django-powered site. You can read more about URLs in <a href=\"https://docs.djangoproject.com/en/4.0/topics/http/urls/\">URL dispatcher</a>.</li>\n<li><code>mysite/asgi.py</code>: An entry-point for ASGI-compatible web servers to serve your project. See <a href=\"https://docs.djangoproject.com/en/4.0/howto/deployment/asgi/\">How to deploy with ASGI</a> for more details.</li>\n<li><code>mysite/wsgi.py</code>: An entry-point for WSGI-compatible web servers to serve your project. See <a href=\"https://docs.djangoproject.com/en/4.0/howto/deployment/wsgi/\">How to deploy with WSGI</a> for more details.</li>\n</ul>\n</blockquote>\n<h5 id=\"3-start-your-project\"><a href=\"#3-start-your-project\" class=\"headerlink\" title=\"3. start your project\"></a>3. start your project</h5><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">python manage.py runserver\n# you can pass server&#39;s port and so on as a command-line argument behind &#39;runserver&#39;</code></pre>\n\n<p>You’ll see the output which includes:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>…<br>Starting development server at <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a><br>Quit the server with CONTROL-C.</p></blockquote>\n<h5 id=\"4-create-new-app\"><a href=\"#4-create-new-app\" class=\"headerlink\" title=\"4. create new app\"></a>4. create new app</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>What’s the difference between a project and an app? An app is a web application that does something – e.g., a blog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.</p></blockquote>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">py manage.py startapp polls</code></pre>\n\n<p>That will create a new directory like:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>polls/<br>   <strong>init</strong>.py<br>   admin.py<br>   apps.py<br>   migrations/<br>       <strong>init</strong>.py<br>   models.py<br>   tests.py<br>   views.py</p></blockquote>\n<p>This directory structure will house the poll application.</p>\n<h5 id=\"5-write-your-own-view-and-set-it-url\"><a href=\"#5-write-your-own-view-and-set-it-url\" class=\"headerlink\" title=\"5. write your own view and set it url\"></a>5. write your own view and set it url</h5><p>Open the file <code>polls/views.py</code> and put the following Python code in it:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse(&quot;Hello, world. You&#39;re at the polls index.&quot;)</code></pre>\n\n<p>This is the simplest view possible in Django. To call the view, we need to map it to a URL - and for this we need a URLconf.</p>\n<p>To create a URLconf in the polls directory, create a file called <code>urls.py</code>. Your app directory should now look like:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>polls/<br>   <strong>init</strong>.py<br>   admin.py<br>   apps.py<br>   migrations/<br>       <strong>init</strong>.py<br>   models.py<br>   tests.py<br>   urls.py<br>   views.py</p></blockquote>\n<p>In the <code>polls/urls.py</code> file include the following code:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from django.urls import path\nfrom . import views\n\nurlpatterns &#x3D; [path(&#39;&#39;, views.index, name&#x3D;&#39;index&#39;),]</code></pre>\n\n<p>The next step is to <strong>point the root URLconf at the <code>polls.urls</code> module.</strong> In <code>mysite/urls.py</code>, add an import for <code>django.urls.include</code> and insert an <a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.include\"><code>include()</code></a> in the <code>urlpatterns</code> list, so you have:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns &#x3D; [\n    path(&#39;polls&#x2F;&#39;, include(&#39;polls.urls&#39;)),\n    path(&#39;admin&#x2F;&#39;, admin.site.urls),\n]</code></pre>\n\n<p>The <a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.include\"><code>include()</code></a> function allows referencing other URLconfs. Whenever Django encounters <a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.include\"><code>include()</code></a>, it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing. See more about -&gt; <a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.include\"><code>include()</code></a></p>\n<p>You should always use <code>include()</code> when you include other URL patterns. <code>admin.site.urls</code> is the only exception to this.</p>\n<p>Now restart your server and go to <a href=\"http://localhost:8000/polls/\">http://localhost:8000/polls/</a> in your browser, and you should see the text “*Hello, world. You’re at the polls index.*”, which you defined in the <code>index</code> view.</p>\n<p>See more about <code>path()</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.path\"><code>path()</code></a> argument: <code>route</code><a href=\"https://docs.djangoproject.com/en/4.0/intro/tutorial01/#path-argument-route\">¶</a></p>\n<p><code>route</code> is a string that contains a URL pattern. When processing a request, Django starts at the first pattern in <code>urlpatterns</code> and makes its way down the list, comparing the requested URL against each pattern until it finds one that matches.</p>\n<p>Patterns don’t search GET and POST parameters, or the domain name. For example, in a request to <code>https://www.example.com/myapp/</code>, the URLconf will look for <code>myapp/</code>. In a request to <code>https://www.example.com/myapp/?page=3</code>, the URLconf will also look for <code>myapp/</code>.</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.path\"><code>path()</code></a> argument: <code>view</code><a href=\"https://docs.djangoproject.com/en/4.0/intro/tutorial01/#path-argument-view\">¶</a></p>\n<p>When Django finds a matching pattern, it calls the specified view function with an <a href=\"https://docs.djangoproject.com/en/4.0/ref/request-response/#django.http.HttpRequest\"><code>HttpRequest</code></a> object as the first argument and any “captured” values from the route as keyword arguments. We’ll give an example of this in a bit.</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.path\"><code>path()</code></a> argument: <code>kwargs</code><a href=\"https://docs.djangoproject.com/en/4.0/intro/tutorial01/#path-argument-kwargs\">¶</a></p>\n<p>Arbitrary keyword arguments can be passed in a dictionary to the target view. We aren’t going to use this feature of Django in the tutorial.</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://docs.djangoproject.com/en/4.0/ref/urls/#django.urls.path\"><code>path()</code></a> argument: <code>name</code><a href=\"https://docs.djangoproject.com/en/4.0/intro/tutorial01/#path-argument-name\">¶</a></p>\n<p>Naming your URL lets you refer to it unambiguously from elsewhere in Django, especially from within templates. This powerful feature allows you to make global changes to the URL patterns of your project while only touching a single file.</p>\n<p>When you’re comfortable with the basic request and response flow, read <a href=\"https://docs.djangoproject.com/en/4.0/intro/tutorial02/\">part 2 of this tutorial</a> to start working with the database.</p></blockquote>\n<p>- </p>\n","text":"官网原教程：PART 1：Writing your first Django app, part 1 | Django documentation | Django (djangoproject.com) 概述： 概述教程内容 使用startproject命令创建的项目的基本内容...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%98%E7%BD%91%E5%8E%9F%E6%95%99%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">官网原教程：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PART-1%EF%BC%9A\"><span class=\"toc-text\">PART 1：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">概述：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">复述：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-quick-the-installation-and-version-of-django\"><span class=\"toc-text\">1. quick the installation and version of django</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-creating-a-project\"><span class=\"toc-text\">2. creating a project</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-start-your-project\"><span class=\"toc-text\">3. start your project</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-create-new-app\"><span class=\"toc-text\">4. create new app</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-write-your-own-view-and-set-it-url\"><span class=\"toc-text\">5. write your own view and set it url</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Back End/django/Python Django Web典型模块开发实战/总述及django安装","date":"2023-03-08T00:30:41.954Z","updated":"2022-08-25T14:56:01.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/Python Django Web典型模块开发实战/总述及django安装.json","keywords":null,"cover":null,"text":"需要安装的内容： Django本体 ","link":"","photos":[],"count_time":{"symbolsCount":18,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Back End/django/official website basic tutorial/official_website_basic_tutorial-part_2","date":"2023-03-08T00:30:41.949Z","updated":"2022-08-24T08:17:47.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/official website basic tutorial/official_website_basic_tutorial-part_2.json","keywords":null,"cover":null,"text":"官网原教程：PART 2：Writing your first Django app, part 2 | Django documentation | Django (djangoproject.com) 概述： 建立数据库：基于sqlite数据库，介绍project modul...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}