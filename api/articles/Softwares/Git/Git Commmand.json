{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Softwares/Git/Git Commmand","date":"2023-03-07T16:14:45.958Z","updated":"2023-03-07T13:29:59.000Z","comments":true,"path":"api/articles/Softwares/Git/Git Commmand.json","keywords":null,"cover":null,"content":"<h2 id=\"git分区\"><a href=\"#git分区\" class=\"headerlink\" title=\"git分区\"></a>git分区</h2><p>git一共有三个分区：</p>\n<p>工作区、暂存区和版本库</p>\n<h2 id=\"git的初始化（自报家门）\"><a href=\"#git的初始化（自报家门）\" class=\"headerlink\" title=\"git的初始化（自报家门）\"></a>git的初始化（自报家门）</h2><ol>\n<li>git config –global user.name “YOUR NAME”</li>\n<li>git config –global user.email “<a href=\"mailto:&#x65;&#x6d;&#x61;&#105;&#x6c;&#64;&#101;&#120;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;\">&#x65;&#x6d;&#x61;&#105;&#x6c;&#64;&#101;&#120;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;</a>“</li>\n</ol>\n<h2 id=\"用git创建仓库-repository\"><a href=\"#用git创建仓库-repository\" class=\"headerlink\" title=\"用git创建仓库(repository)\"></a>用git创建仓库(repository)</h2><ol>\n<li>mkdir repositoryExample（这只是生成了一个文件夹）</li>\n</ol>\n<h3 id=\"进入仓库（文件夹）\"><a href=\"#进入仓库（文件夹）\" class=\"headerlink\" title=\"进入仓库（文件夹）\"></a>进入仓库<del>（文件夹）</del></h3><ol>\n<li>cd repositoryExample</li>\n</ol>\n<h3 id=\"初始化仓库（仓库的正式建立）\"><a href=\"#初始化仓库（仓库的正式建立）\" class=\"headerlink\" title=\"初始化仓库（仓库的正式建立）\"></a>初始化仓库（仓库的正式建立）</h3><ol>\n<li>git init</li>\n</ol>\n<h4 id=\"注意：此举会在当前目录下生成一个-git文件夹，但是这是一个以-开头的隐藏文件夹，所以使用ls命令无法直接看到，你可以使用ls-a命令来查看这类隐藏的文件夹\"><a href=\"#注意：此举会在当前目录下生成一个-git文件夹，但是这是一个以-开头的隐藏文件夹，所以使用ls命令无法直接看到，你可以使用ls-a命令来查看这类隐藏的文件夹\" class=\"headerlink\" title=\"注意：此举会在当前目录下生成一个.git文件夹，但是这是一个以.开头的隐藏文件夹，所以使用ls命令无法直接看到，你可以使用ls -a命令来查看这类隐藏的文件夹\"></a>注意：此举会在当前目录下生成一个.git文件夹，但是这是一个以.开头的隐藏文件夹，所以使用ls命令无法直接看到，你可以使用ls -a命令来查看这类隐藏的文件夹</h4><h2 id=\"用git来记录变化\"><a href=\"#用git来记录变化\" class=\"headerlink\" title=\"用git来记录变化\"></a>用git来记录变化</h2><ol>\n<li><p>git add fileName</p>\n<p><em>可以使用git status  -s来查看更改</em>**</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>-A, –all             add changes from all tracked and untracked files</p>\n<p>-u, –update          update tracked files</p></blockquote>\n</li>\n<li><p>git diff</p>\n<p><em>使用diff来查看已经做出的变化</em></p>\n<p><strong>用git diff HEAD – filename来比较远程仓库和本地的文件的区别</strong></p>\n</li>\n<li><p>git commit -m “本次提交的说明”</p>\n<blockquote>\n</blockquote>\n</li>\n</ol>\n<p>**或者使用git commit -a命令来跳过add直接提交所有变动</p>\n<h2 id=\"关于历史提交\"><a href=\"#关于历史提交\" class=\"headerlink\" title=\"关于历史提交\"></a>关于历史提交</h2><ol>\n<li>使用 git log 或者 git log –pretty=oneline 来查看</li>\n<li>使用 git reset + log中的每行前的如 d5d7e…版本号 来还原</li>\n<li>git中，有 git reflog 命令来记录用户的每一次操作</li>\n<li>git管理的是修改而不是文件！</li>\n</ol>\n<h2 id=\"关于文件更改\"><a href=\"#关于文件更改\" class=\"headerlink\" title=\"关于文件更改\"></a>关于文件更改</h2><ol>\n<li><p>git checkout – filename        //舍弃工作区的所有更改</p>\n<p>关于这个命令</p>\n<p>​    如果 filename 文件还没有被提交到暂存区（仍然停留在工作区），则git会立即撤销所有更改——即使已经在文件中保存</p>\n<p>​    如果 filename 文件已经用add命令提交过一次了，则git会将它重置为刚刚提交到缓存区中的状态</p>\n</li>\n<li><p>git reset HEAD filename</p>\n<p>通过这个命令，我们可以将已经提交到暂存区的 filename 文件回退到工作区</p>\n</li>\n</ol>\n<h2 id=\"文件删除\"><a href=\"#文件删除\" class=\"headerlink\" title=\"文件删除\"></a>文件删除</h2><ol>\n<li><p>git rm filename</p>\n<p>注意: 删除文件也是一个修改，必须要提交才会被记录，但这里没有必要add，可以直接commit</p>\n</li>\n<li><p>git checkout – filename</p>\n<p>又见面了，再次用此命令来恢复文件，因为它的作用<strong>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</strong></p>\n</li>\n</ol>\n<p><a href=\"https://stackoverflow.com/questions/2047465/how-do-i-delete-a-file-from-a-git-repository\">git rm - How do I delete a file from a Git repository? - Stack Overflow</a></p>\n<h2 id=\"远程管理\"><a href=\"#远程管理\" class=\"headerlink\" title=\"远程管理\"></a>远程管理</h2><ol>\n<li>显示所有远程仓库：git remote -v</li>\n<li>添加远程版本库：git remote add [name] [url]</li>\n<li>删除远程仓库：git remote remove origin</li>\n<li>修改仓库名：git remove rename old_name new_name</li>\n</ol>\n<h3 id=\"向远程库提交\"><a href=\"#向远程库提交\" class=\"headerlink\" title=\"向远程库提交\"></a>向远程库提交</h3><ol>\n<li>git push -u [推送的主机] [推送的分支] ——例：origin main</li>\n<li>删除主机的分支：git push origin –delete master</li>\n</ol>\n<h3 id=\"从远程库克隆\"><a href=\"#从远程库克隆\" class=\"headerlink\" title=\"从远程库克隆\"></a>从远程库克隆</h3><ol>\n<li><p>git clone git@项目仓库地址</p>\n</li>\n<li><p>从远程获取代码并合并本地版本：</p>\n<p>规范：git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</p>\n<p>示例：git pull origin master:brantest </p>\n<p>​    ——将远程主机 origin 的 master 分支拉取过来，与本地的 brantest 分支合并</p>\n</li>\n</ol>\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><ol>\n<li>创建并切换到新分支：git checkout -b dev    或    git switch -c dev</li>\n<li>切换分支：git checkout dev    或    git switch master</li>\n<li>查看分支：git branch</li>\n<li>把分支合并到main上：git merge dev</li>\n<li>删除分支：git branch -d dev</li>\n<li>将分支推送到远程仓库：git push origin bunjie（同理呀！）</li>\n</ol>\n<p>git push –set-upstream origin master</p>\n<p>ssh-keygen -t rsa</p>\n<h2 id=\"Set-Proxy\"><a href=\"#Set-Proxy\" class=\"headerlink\" title=\"Set Proxy\"></a>Set Proxy</h2><p><a href=\"https://ericclose.github.io/git-proxy-config.html\">一文让你了解如何为 Git 设置代理 - Eric (ericclose.github.io)</a></p>\n","text":"git分区git一共有三个分区： 工作区、暂存区和版本库 git的初始化（自报家门） git config –global user.name “YOUR NAME” git config –global user.email “&#x65;&#x6d;&#x61;&#105;&...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#git%E5%88%86%E5%8C%BA\"><span class=\"toc-text\">git分区</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#git%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%88%E8%87%AA%E6%8A%A5%E5%AE%B6%E9%97%A8%EF%BC%89\"><span class=\"toc-text\">git的初始化（自报家门）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8git%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93-repository\"><span class=\"toc-text\">用git创建仓库(repository)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%85%A5%E4%BB%93%E5%BA%93%EF%BC%88%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%89\"><span class=\"toc-text\">进入仓库（文件夹）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%93%E5%BA%93%EF%BC%88%E4%BB%93%E5%BA%93%E7%9A%84%E6%AD%A3%E5%BC%8F%E5%BB%BA%E7%AB%8B%EF%BC%89\"><span class=\"toc-text\">初始化仓库（仓库的正式建立）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%EF%BC%9A%E6%AD%A4%E4%B8%BE%E4%BC%9A%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA-git%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%8C%E4%BD%86%E6%98%AF%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%A5-%E5%BC%80%E5%A4%B4%E7%9A%84%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BD%BF%E7%94%A8ls%E5%91%BD%E4%BB%A4%E6%97%A0%E6%B3%95%E7%9B%B4%E6%8E%A5%E7%9C%8B%E5%88%B0%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8ls-a%E5%91%BD%E4%BB%A4%E6%9D%A5%E6%9F%A5%E7%9C%8B%E8%BF%99%E7%B1%BB%E9%9A%90%E8%97%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">注意：此举会在当前目录下生成一个.git文件夹，但是这是一个以.开头的隐藏文件夹，所以使用ls命令无法直接看到，你可以使用ls -a命令来查看这类隐藏的文件夹</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8git%E6%9D%A5%E8%AE%B0%E5%BD%95%E5%8F%98%E5%8C%96\"><span class=\"toc-text\">用git来记录变化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">关于历史提交</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E6%96%87%E4%BB%B6%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">关于文件更改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">文件删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">远程管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%91%E8%BF%9C%E7%A8%8B%E5%BA%93%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">向远程库提交</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E5%BA%93%E5%85%8B%E9%9A%86\"><span class=\"toc-text\">从远程库克隆</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF\"><span class=\"toc-text\">分支</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Set-Proxy\"><span class=\"toc-text\">Set Proxy</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Softwares/Git/从零开始的github blog","date":"2023-03-07T16:14:45.960Z","updated":"2021-09-07T13:11:13.000Z","comments":true,"path":"api/articles/Softwares/Git/从零开始的github blog.json","keywords":null,"cover":null,"text":"为什么使用Github作为博客的托管网站？怎么搭建你的博客？首先你需要一个github账号，并在其中创建一个全新的公开仓库 创建公开仓库 xxx.github.io为你的github账号添加ssh keys什么是ssh keys？为什么需要ssh keys因为GitHub需要识别...","link":"","photos":[],"count_time":{"symbolsCount":678,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Softwares/docker/quick_guide","date":"2023-03-07T16:14:45.946Z","updated":"2022-09-16T10:03:26.000Z","comments":true,"path":"api/articles/Softwares/docker/quick_guide.json","keywords":null,"cover":null,"text":"DOCKER QUICK GUIDE忘记教程，即刻上手docker主要依赖： Python3.10 flask gunicorn 项目内容：flask官方基础教程结果，见link1页面内的Tutorial部分。其中的主要内容为： 了解flask项目的basic layout 建立...","link":"","photos":[],"count_time":{"symbolsCount":345,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}