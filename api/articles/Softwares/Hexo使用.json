{"title":"Hello World, Hello Hexo","uid":"6adf345a8e80c4aa1ee89482b75933eb","slug":"Softwares/Hexo使用","date":"2021-09-07T14:09:05.000Z","updated":"2023-03-07T12:38:56.000Z","comments":true,"path":"api/articles/Softwares/Hexo使用.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<p>hexo website：<a href=\"https://hexo.io/zh-cn/\">Hexo</a></p>\r\n<h1 id=\"hexo从开箱到弃用\">Hexo从开箱到弃用</h1>\r\n<h2 id=\"hexo的基础配置\">Hexo的基础配置</h2>\r\n<h3 id=\"安装hexo-cli\">安装hexo-cli</h3>\r\n<pre class=\"line-numbers language-powshell\" data-language=\"powshell\"><code class=\"language-powshell\">npm install hexo-cli -g</code></pre>\r\n<h3 id=\"完成hexo的部署\">完成hexo的部署：</h3>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install hexo-cli -g\nhexo init &lt;name&gt; # 注意：hexo必须要在空文件夹下完成初始化，如果没有&lt;name&gt;，则在当前目录下完成初始化，否则新建一个&lt;name&gt;文件夹初始化 \ncd &lt;name&gt; # 根据上个命令初始化的文件夹使用\nnpm install # 安装依赖\nhexo server # 启动hexo服务器，这时候便可以访问所有 source&#x2F; 下的所有文章页面了</code></pre>\r\n<h3 id=\"创建新的页面\">创建新的页面：</h3>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">hexo new [layout] &lt;name&gt; # 创建一个新的post页面，会出现在source文件夹下，内涵一个index.md\n# 我们可以直接对这个md文件进行编辑，hexo会自动将这个文件渲染为一个html页面</code></pre>\r\n<div class=\"warning\">\r\n<p>创建新文件夹或者页面时请注意 <code>\\_config.yml</code> 中\r\n<code># Directory</code> 下项目的配置</p>\r\n</div>\r\n<h3 id=\"再次运行hexo\">再次运行hexo：</h3>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">hexo clean # 清除之前hexo的缓存\nhexo g # g或generate 根据md文件生成html等文件\nhexo s # s或server 启动hexo服务器</code></pre>\r\n<h3 id=\"配置hexo快速部署\">配置Hexo快速部署：</h3>\r\n<p><a href=\"https://hexo.io/docs/one-command-deployment\">One-Command\r\nDeployment | Hexo</a></p>\r\n<p>以git为例：</p>\r\n<h4 id=\"安装hexo的git插件\">安装hexo的git插件：</h4>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install hexo-deployer-git --save</code></pre>\r\n<h4\r\nid=\"修改hexo中的_config.yml文件\">修改Hexo中的<code>\\_config.yml</code>文件：</h4>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">deploy:\n  type: git\n  repo: &lt;repository url&gt; # https:&#x2F;&#x2F;bitbucket.org&#x2F;JohnSmith&#x2F;johnsmith.bitbucket.io\n  branch: [branch]\n  message: [message]\n \n# 例如，我自己的仓库配置如下：\ndeploy:\n  type: git\n  repo: git@github.com:JBR-Bunjie&#x2F;JBR-Bunjie.github.io.git\n  branch: master</code></pre>\r\n<p>配置完成之后，我们便可以使用命令：</p>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">hexo deploy</code></pre>\r\n<p>来直接将我们编写的Hexo文档推送到所有远端托管地址上了</p>\r\n<blockquote>\r\n<p>在使用git来推送之前，你需要先完成本地git工具对远程仓库的权限等配置</p>\r\n</blockquote>\r\n<h2 id=\"安装别的博客框架\">安装别的博客框架</h2>\r\n<p>当然，你需要先选定一个博客框架才行</p>\r\n<p>比如如果想要安装<a href=\"#AuroraOfficialSite\">aurora</a>，我会选择直接去查阅<a href=\"#AuroraOfficialSite\">aurora</a>的官方文档来了解<a\r\nhref=\"#AuroraOfficialSite\">aurora</a>的具体配置项</p>\r\n<p><span id=\"AuroraOfficialSite\"><a\r\nhref=\"https://aurora.tridiamond.tech/\">Home | Hexo Aurora\r\n(tridiamond.tech)</a></span></p>\r\n<p>但是当我们想要更替当前Hexo框架时，我们需要同时修改Hexo项目的<code>\\_config.yml</code>和Hexo框架的的<code>\\_config.xxx.yml</code>，例如：Aurora的<code>\\_config.aurora.yml</code></p>\r\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"># 修改项：\n\ntheme: &lt;yourThemeName&gt;  </code></pre>\r\n<iframe src=\"//player.bilibili.com/player.html?aid=673965978&amp;bvid=BV1xU4y1V7WU&amp;cid=363620657&amp;page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\">\r\n</iframe>\r\n","text":"hexo website：Hexo Hexo从开箱到弃用 Hexo的基础配置 安装hexo-cli npm install hexo-cli -g 完成hexo的部署： npm install hexo-cli -g hexo init &lt;name&gt; # 注意：hex...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"配置方法","slug":"配置方法","count":4,"path":"api/categories/配置方法.json"}],"tags":[{"name":"使用hexo来搭建你的博客！","slug":"使用hexo来搭建你的博客！","count":1,"path":"api/tags/使用hexo来搭建你的博客！.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#hexo%E4%BB%8E%E5%BC%80%E7%AE%B1%E5%88%B0%E5%BC%83%E7%94%A8\"><span class=\"toc-text\">Hexo从开箱到弃用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hexo%E7%9A%84%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Hexo的基础配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85hexo-cli\"><span class=\"toc-text\">安装hexo-cli</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%88%90hexo%E7%9A%84%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">完成hexo的部署：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">创建新的页面：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%8D%E6%AC%A1%E8%BF%90%E8%A1%8Chexo\"><span class=\"toc-text\">再次运行hexo：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEhexo%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">配置Hexo快速部署：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85hexo%E7%9A%84git%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装hexo的git插件：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9hexo%E4%B8%AD%E7%9A%84_config.yml%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">修改Hexo中的\\_config.yml文件：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%88%AB%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">安装别的博客框架</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"美化你的GitHub主页！","uid":"cadb81dd6adf93defe9d2e5bccb01250","slug":"Softwares/Git/beautifyGithubHome/beautifyGithubHome","date":"2021-09-07T15:58:53.000Z","updated":"2023-03-07T16:11:51.330Z","comments":true,"path":"api/articles/Softwares/Git/beautifyGithubHome/beautifyGithubHome.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"一般来说，GitHub主页是很简陋枯燥又单调的： image-20210907192522519 但是也许你也见过别人的完全不同的主页： img 欸？他的主页怎么有一个markdown文件作为公示栏来展示？怎么做到的？ 答案是GitHub的官方彩蛋（后门）： 当↗当↗当↗当↘ i...","link":"","photos":[],"count_time":{"symbolsCount":503,"symbolsTime":"1 mins."},"categories":[{"name":"工具美化","slug":"工具美化","count":1,"path":"api/categories/工具美化.json"}],"tags":[{"name":"GitHub","slug":"GitHub","count":1,"path":"api/tags/GitHub.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{}}