{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/CPP/Cpp字符串处理与正则表达式","date":"2023-03-07T16:14:45.247Z","updated":"2021-10-06T09:00:35.000Z","comments":true,"path":"api/articles/Language Learning/CPP/Cpp字符串处理与正则表达式.json","keywords":null,"cover":[],"content":"<h3 id=\"part0\"><a href=\"#part0\" class=\"headerlink\" title=\"part0:\"></a>part0:</h3><p>默认初始化</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">string s; &#x2F;&#x2F;s是一个空串</code></pre>\n\n\n\n<h3 id=\"part1\"><a href=\"#part1\" class=\"headerlink\" title=\"part1\"></a>part1</h3><p>在C语言中，string 是定义一个字符串，存储的是一段如“abcd”的数据，而且最后还有一个结束符’\\0’;<br>char 是定义一个字符，存储一个字符，占一个字节。</p>\n<p>在C++中，string有两种，一种是字符串<code>char[]</code>，另外一种是封装好的字符串类<code>string</code>，要区别理解。例如<code>&#39;a&#39;</code>是<code>char</code>, <code>&quot;a&quot;</code>是<code>char string</code>，这两者都是普通的字符和字符串，和C语言中没什么不同值得注意的是后者包含两个字符，末尾有一个隐身的<code>&#39;\\0&#39;</code><br>而 <code>string str = &quot;a&quot;</code> 是C++ 封装好的<code>string</code>。C++中的char string和string不是一回事。当用到了”string”这个关键词，就不是普通的字符串，而是用到了封装后的类。<br>在C++中，<code>char</code>仍然是一个primitive type（原始类型），而<code>string</code>已经经过封装，成为了一个class（类）用到它时，我们需要 <code>#include &lt;string&gt;</code>，它是C++ Standard Library （C++标准库）的一部分。</p>\n<p>示例一：</p>\n<p>c中的char* 定义字符串，不能改变字符串内的字符的内容，但却可以把另外一个字符串付给它</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &quot;stdio.h&quot;\n\nint main()\n&#123;\n\tchar* str1 &#x3D; &quot;hello world\\n&quot;;\n\tstr1 &#x3D; &quot;aa&quot;;\n\tstr1[1] &#x3D; &quot;a&quot;;\t&#x2F;&#x2F;报错\n\n\tprintf(&quot;%s&quot;,str1);\n\n&#125;</code></pre>\n<p>C++中使用char*定义字符串，同样不能改变字符串内的字符的内容，但却可以把另外一个字符串付给它</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n&#123;\n\tchar* pstr &#x3D; &quot;hello world&quot;;\n\tpstr &#x3D; &quot;aa&quot;;\n\tpstr[1] &#x3D; &quot;a&quot;;\t&#x2F;&#x2F;报错\n\n\n\tcout&lt;&lt;pstr&lt;&lt;endl;\n&#125;</code></pre>\n<p>C++中string的定义字符串，同样不能改变字符串内的字符，但却可以把另外一个字符串付给它</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;string&gt;\n\nusing namespace std;\n\nint main()\n&#123;\n\tstring str1;\n\tstr1&#x3D; &quot;hello world&quot;;\n\tstr1&#x3D;&quot;aa&quot;;\n\tstr1[1]&#x3D;&quot;a&quot;;\n\tcout&lt;&lt;str1&lt;&lt;endl;\n&#125;</code></pre>\n\n<h3 id=\"part1-5-about-the-existion-of-‘-0’\"><a href=\"#part1-5-about-the-existion-of-‘-0’\" class=\"headerlink\" title=\"part1.5: about the existion of ‘\\0’\"></a>part1.5: about the existion of ‘\\0’</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;string&gt;\n\nusing namespace std;\n\nint main()\n&#123;\n\tstring str1;\n\tstring str2;\n\tstr1 &#x3D; &quot;hello world&quot;;\n\tstr2 &#x3D; &quot;123\\0&quot;;\n\tcout &lt;&lt; str1 &lt;&lt; endl;\n\tcout &lt;&lt; str1[11] &lt;&lt; endl;\n\tcout &lt;&lt; str2[2] &lt;&lt; endl;\n\tcout &lt;&lt; str2[3] &lt;&lt; endl;\n&#125;</code></pre>\n\n<p><img src=\"./CppString-image-20211006170004564.png\" alt=\"image-20211006170004564\"></p>\n<h3 id=\"part2-Cpp-Raw-String\"><a href=\"#part2-Cpp-Raw-String\" class=\"headerlink\" title=\"part2: Cpp Raw String\"></a>part2: Cpp Raw String</h3><p>用R来定义Raw String，能有效减少转义符<code>\\</code>的出现</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint main() &#123;\n    &#x2F;&#x2F; 一个普通的字符串，&#39;\\n&#39;被当作是转义字符，表示一个换行符。\n    std::string normal_str &#x3D; &quot;First line.\\nSecond line.\\nEnd of message.\\n&quot;;\n    &#x2F;&#x2F; 一个raw string，&#39;\\&#39;不会被转义处理。因此，&quot;\\n&quot;表示两个字符：字符反斜杠 和 字母n。\n    std::string raw_str &#x3D; R&quot;(First line.\\nSecond line.\\nEnd of message.\\n)&quot;;\n\n    std::cout &lt;&lt; normal_str &lt;&lt; std::endl;\n&#x2F;*---输出：\nFirst line.\nSecond line.\nEnd of message.\n*&#x2F;\n    std::cout &lt;&lt; raw_str &lt;&lt; std::endl;\n&#x2F;*---输出：\nFirst line.\\nSecond line.\\nEnd of message.\\n\n*&#x2F;\n    std::cout &lt;&lt; R&quot;foo(Hello, world!)foo&quot; &lt;&lt; std::endl;\n&#x2F;*---输出：\nHello, world!\n*&#x2F;\n&#x2F;&#x2F; raw string可以跨越多行，其中的空白和换行符都属于字符串的一部分。\n    std::cout &lt;&lt; R&quot;(\n               Hello,\n               world!\n               )&quot; &lt;&lt; std::endl;\n&#x2F;*---输出：\n               Hello,\n               world!\n*&#x2F;\n    return 0;\n&#125;</code></pre>\n\n<h3 id=\"part3-c-怎么提取字符串的一部分\"><a href=\"#part3-c-怎么提取字符串的一部分\" class=\"headerlink\" title=\"part3:c++怎么提取字符串的一部分\"></a>part3:c++怎么提取字符串的一部分</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nvoid main()\n&#123;\n    string s&#x3D;&quot;ABAB&quot;;\n    cout &lt;&lt; s.substr(2) &lt;&lt;endl ; &#x2F;&#x2F;输出AB\n    cout &lt;&lt; s.substr(0,2) &lt;&lt;endl ; &#x2F;&#x2F;同上\n    cout &lt;&lt; s.substr(1,2) &lt;&lt;endl ; &#x2F;&#x2F;输出BA\n&#125;</code></pre>\n\n\n\n","text":"part0:默认初始化 string s; &#x2F;&#x2F;s是一个空串 part1在C语言中，string 是定义一个字符串，存储的是一段如“abcd”的数据，而且最后还有一个结束符’\\0’;char 是定义一个字符，存储一个字符，占一个字节。 在C++中，string...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#part0\"><span class=\"toc-text\">part0:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#part1\"><span class=\"toc-text\">part1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#part1-5-about-the-existion-of-%E2%80%98-0%E2%80%99\"><span class=\"toc-text\">part1.5: about the existion of ‘\\0’</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#part2-Cpp-Raw-String\"><span class=\"toc-text\">part2: Cpp Raw String</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#part3-c-%E6%80%8E%E4%B9%88%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86\"><span class=\"toc-text\">part3:c++怎么提取字符串的一部分</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/CPP/Stdout与Stderr","date":"2023-03-07T16:14:45.251Z","updated":"2022-01-30T14:27:34.000Z","comments":true,"path":"api/articles/Language Learning/CPP/Stdout与Stderr.json","keywords":null,"cover":null,"text":"stderr和stdout详细解说今天又查了一下fprintf，其中对第一个参数stderr特别感兴趣。 int fprintf(FILE *stream,char *format,[argument])； 在此之前先区分一下：printf，sprintf，fprintf。 1，...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/CPP/Cpp入门","date":"2023-03-07T16:14:45.245Z","updated":"2021-09-22T01:23:32.000Z","comments":true,"path":"api/articles/Language Learning/CPP/Cpp入门.json","keywords":null,"cover":null,"text":"#include &lt;stdio.h&gt; int main()&#123; #if _WIN32 system(&quot;color 0c&quot;); printf(&quot;http:&#x2F;&#x2F;c.biancheng.net\\n&quot;); #...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}