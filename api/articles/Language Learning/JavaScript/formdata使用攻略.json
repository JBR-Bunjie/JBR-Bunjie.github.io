{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/JavaScript/formdata使用攻略","date":"2023-03-08T00:26:01.963Z","updated":"2022-05-22T08:53:57.000Z","comments":true,"path":"api/articles/Language Learning/JavaScript/formdata使用攻略.json","keywords":null,"cover":null,"content":"<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/Using_FormData_Objects#%E4%BD%BF%E7%94%A8formdata%E5%AF%B9%E8%B1%A1%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6\">FormData 对象的使用 - Web API 接口参考 | MDN (mozilla.org)</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>FormData对象用以将数据编译成键值对，以便用<code>XMLHttpRequest</code>来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed data)，而独立于表单使用。如果表单<code>enctype</code>属性设为multipart/form-data ，则会使用表单的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/submit\"><code>submit()</code></a>方法来发送数据，从而，发送数据具有同样形式。</p></blockquote>\n<h2 id=\"从零开始创建FormData对象\"><a href=\"#从零开始创建FormData对象\" class=\"headerlink\" title=\"从零开始创建FormData对象\"></a>从零开始创建FormData对象</h2><p>你可以自己创建一个<code>FormData</code>对象，然后调用它的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/append\"><code>append()</code></a>方法来添加字段，像这样：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">var formData &#x3D; new FormData();\n\n&#x2F;&#x2F; 发送键值对\nformData.append(&quot;username&quot;, &quot;Groucho&quot;);\nformData.append(&quot;accountnum&quot;, 123456); &#x2F;&#x2F;数字123456会被立即转换成字符串 &quot;123456&quot;\n\n&#x2F;&#x2F; HTML 文件类型input，由用户选择\nformData.append(&quot;userfile&quot;, fileInputElement.files[0]); &#x2F;&#x2F; fileInputElement是 file类型的input标签\n\n&#x2F;&#x2F; JavaScript file-like 对象\nvar content &#x3D; &#39;&lt;a id&#x3D;&quot;a&quot;&gt;&lt;b id&#x3D;&quot;b&quot;&gt;hey!&lt;&#x2F;b&gt;&lt;&#x2F;a&gt;&#39;; &#x2F;&#x2F; 新文件的正文\nvar blob &#x3D; new Blob([content], &#123; type: &quot;text&#x2F;xml&quot;&#125;);\n\nformData.append(&quot;webmasterfile&quot;, blob);\n\n&#x2F;&#x2F; 发送\nvar request &#x3D; new XMLHttpRequest();\nrequest.open(&quot;POST&quot;, &quot;http:&#x2F;&#x2F;foo.com&#x2F;submitform.php&quot;);\nrequest.send(formData);</code></pre>\n\n<h2 id=\"上传文件思路：\"><a href=\"#上传文件思路：\" class=\"headerlink\" title=\"上传文件思路：\"></a>上传文件思路：</h2><p>利用h5的<code>input</code>标签，将其<code>type</code>设置为<code>file</code></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/file\">&lt;input type=”file”&gt; - HTML（超文本标记语言） | MDN (mozilla.org)</a></p>\n<p>此时，注意其一特殊的内置属性：<code>files</code>属性，它会以<code>FileList</code>对象的形式列出已选择的文件</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileList\">FileList - Web API 接口参考 | MDN (mozilla.org)</a></p>\n<p>值得注意的是，<code>Filelist</code>不是<code>formdata</code>，请不要尝试直接将<code>Filelist</code>对象发送给后端</p>\n<p>同时，如需发送<code>formdata</code>，请先行创建一个<code>FormData</code>对象</p>\n<p><code>FormData</code>并非一定需要一个<code>form</code>来作为基础进行创建，但一定需要键值对</p>\n<p>也可以利用</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">formdata.append(&#39;file&#39;, document.getElementById(&quot;fileInput&quot;).files[0])</code></pre>\n\n<p>手动将传入的文件加入formdata对象中</p>\n<p>发送请求时，需要特别设置其请求头：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">headers: &#123;\n      &#39;Content-Type&#39;: &quot;multipart&#x2F;form-data&quot;,\n&#125;</code></pre>\n\n<p>防止所发送的文件被错误地转换了格式</p>\n<h3 id=\"循环获取formdata内容\"><a href=\"#循环获取formdata内容\" class=\"headerlink\" title=\"循环获取formdata内容\"></a>循环获取formdata内容</h3><p><a href=\"https://stackoverflow.com/questions/17066875/how-to-inspect-formdata\">javascript - How to inspect FormData? - Stack Overflow</a></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">for (var [a, b] of formData.entries()) &#123;\n  console.log(a, b, &#39;--------------&#39;);\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">formdata.get(key)</code></pre>\n\n\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意</strong>: 所有的输入元素都需要有<strong>name</strong>属性，否则无法访问到值。</p>\n<p>——<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/FormData\">FormData() - Web API 接口参考 | MDN (mozilla.org)</a></p></blockquote>\n<h2 id=\"上传文件完整攻略：\"><a href=\"#上传文件完整攻略：\" class=\"headerlink\" title=\"上传文件完整攻略：\"></a>上传文件完整攻略：</h2><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;body&gt;\n&lt;form id&#x3D;&quot;form&quot;&gt;\n    &lt;label&gt;Choose File to Send: &lt;&#x2F;label&gt;\n    &lt;input type&#x3D;&quot;file&quot; multiple name&#x3D;&quot;file&quot; required&#x2F;&gt; &lt;!-- 注意，用于输入的input一定要有name --&gt;\n    &lt;br &#x2F;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Send the file!&quot;&#x2F;&gt;\n&lt;&#x2F;form&gt;\n&lt;script&gt;\n    var form &#x3D; document.getElementById(&#39;form&#39;);\n    form.addEventListener(&#39;submit&#39;, function (ev) &#123;\n        var oData &#x3D; new FormData(form);\n\n        axios(&#123;\n            method: &quot;post&quot;,\n            url: &quot;upload&quot;,\n            headers: &#123;\n                &#39;Content-Type&#39;: &quot;multipart&#x2F;form-data&quot;,\n            &#125;,\n            data: oData,\n            timeout: 3000,\n        &#125;).then(res &#x3D;&gt; &#123;\n            console.log(res)\n        &#125;)\n        ev.preventDefault(); &#x2F;&#x2F; 阻止对应组件的默认行为,此处为防止页面刷新导致努力ba\n    &#125;, false);\n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># flask 后台\n@app.route(&#39;&#x2F;upload&#39;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])\ndef upload_file():\n    if request.method &#x3D;&#x3D; &#39;POST&#39;:\n        print(request.files)\n\n        print(request.files.getlist(&#39;file&#39;))\n\n        upload_files &#x3D; request.files.getlist(&#39;file&#39;)\n\n        for i in upload_files:\n            i.save(i.filename + &#39;.jpg&#39;)\n        return &quot;OK!&quot;\n    else:\n        return &quot;Wrong!&quot;</code></pre>\n\n","text":"FormData 对象的使用 - Web API 接口参考 | MDN (mozilla.org) FormData对象用以将数据编译成键值对，以便用XMLHttpRequest来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed data)，而独立于表单使用。...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%88%9B%E5%BB%BAFormData%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">从零开始创建FormData对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">上传文件思路：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E8%8E%B7%E5%8F%96formdata%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">循环获取formdata内容</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%AE%8C%E6%95%B4%E6%94%BB%E7%95%A5%EF%BC%9A\"><span class=\"toc-text\">上传文件完整攻略：</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/计时器","date":"2023-03-08T00:26:01.965Z","updated":"2022-02-24T13:23:48.000Z","comments":true,"path":"api/articles/Language Learning/Python/计时器.json","keywords":null,"cover":[],"text":"python 定时器在工作中，我们有时候会需要定时去做一些操作，比如凌晨更新远程代码，仓库每小时更新一次远程分支。这些操作，我们如果要人工进行，不仅要耗费精力，也更容易出错。 如果一件事情，具有周期操作的特点，那么把这件事情设置为定时器操作，最合适不过。 不借助第三方插件在不借助...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/MARK LANGUAGE/DTD","date":"2023-03-08T00:26:01.961Z","updated":"2022-02-12T05:48:10.000Z","comments":true,"path":"api/articles/Language Learning/MARK LANGUAGE/DTD.json","keywords":null,"cover":null,"text":"DTD 简介 | 菜鸟教程 (runoob.com) ","link":"","photos":[],"count_time":{"symbolsCount":27,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}