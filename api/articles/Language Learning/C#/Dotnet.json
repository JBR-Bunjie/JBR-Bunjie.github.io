{"title":"Advanced CSharp","uid":"36e65544b0ba9be0c7ba1f8cd3f769cc","slug":"Language Learning/C#/Dotnet","date":"2023-12-03T14:35:34.000Z","updated":"2023-12-03T15:49:16.524Z","comments":true,"path":"api/articles/Language Learning/C#/Dotnet.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"dotnet\">Dotnet</h1>\r\n<blockquote>\r\n<p><a href=\"https://zh.wikipedia.org/wiki/.NET\">.NET -\r\n维基百科，自由的百科全书 (wikipedia.org)</a></p>\r\n<p><a href=\"https://zh.wikipedia.org/wiki/.NET框架\">.NET框架 -\r\n维基百科，自由的百科全书 (wikipedia.org)</a></p>\r\n<p><a\r\nhref=\"https://learn.microsoft.com/zh-cn/dotnet/csharp/whats-new/relationships-between-language-and-library\">语言功能与库类型之间的关系\r\n- C# | Microsoft Learn</a></p>\r\n</blockquote>\r\n<p>首先是Dotnet Framework：</p>\r\n<blockquote>\r\n<p>微软的.NET框架是.NET技术的旗舰级实现版本</p>\r\n</blockquote>\r\n<p>而在Framework外，还有别的实现，值得关注的有：</p>\r\n<blockquote>\r\n<ul>\r\n<li><p><a\r\nhref=\"https://zh.wikipedia.org/wiki/.NET_Core\"><strong>.NET</strong>\r\n(3.1版以前称作<strong>.NET Core</strong>)</a>，是微软开发的跨平台\r\n(Windows、Mac OS、Linux) 的应用程序开发框架 (Application\r\nFramework)，相对的，Framework则只支持Windows平台</p></li>\r\n<li><p>Mono，是一个开源的.NET运行时和开发库实现版本。Mono现正由xamarin公司和开源软件发展社区负责开发。</p></li>\r\n</ul>\r\n</blockquote>\r\n<p>Dotnet是DotNet技术的Windows最初只有Dotnet\r\nFramewrok，这最开始甚至不是开源的，目前的最新版本是4.8.1，</p>\r\n<p>而对于C#的版本，虽然一般不会特意关心，但是也确实是随着Dotnet更新而变化的：</p>\r\n<blockquote>\r\n<p>The C# language definition requires a standard library to have\r\ncertain types and certain accessible members on those types. The\r\ncompiler generates code that uses these required types and members for\r\nmany different language features. For this reason, C# versions are\r\nsupported only for the corresponding .NET version and newer. That\r\nensures the correct run-time behavior and the availability of all\r\nrequired types and members.</p>\r\n</blockquote>\r\n<h2 id=\"关于wpfmaui及uwp\">关于WPF、MAUI及UWP</h2>\r\n<blockquote>\r\n<p><a\r\nhref=\"https://learn.microsoft.com/en-us/dotnet/maui/what-is-maui?view=net-maui-8.0\">What\r\nis .NET MAUI? - .NET MAUI | Microsoft Learn</a></p>\r\n<blockquote>\r\n<p>.NET Multi-platform App UI (.NET MAUI) is a cross-platform framework\r\nfor creating native mobile and desktop apps with C# and XAML.</p>\r\n<p>Using .NET MAUI, you can develop apps that can run on Android, iOS,\r\nmacOS, and Windows from a single shared code-base.</p>\r\n<figure>\r\n<img\r\nsrc=\"https://learn.microsoft.com/en-us/dotnet/maui/media/what-is-maui/maui-overview.png?view=net-maui-8.0\"\r\nalt=\".NET MAUI supported platforms.\" />\r\n<figcaption aria-hidden=\"true\">.NET MAUI supported\r\nplatforms.</figcaption>\r\n</figure>\r\n<p>.NET MAUI is open-source and is the evolution of Xamarin.Forms,\r\nextended from mobile to desktop scenarios, with UI controls rebuilt from\r\nthe ground up for performance and extensibility. If you've previously\r\nused Xamarin.Forms to build cross-platform user interfaces, you'll\r\nnotice many similarities with .NET MAUI. However, there are also some\r\ndifferences. Using .NET MAUI, you can create multi-platform apps using a\r\nsingle project, but you can add platform-specific source code and\r\nresources if necessary. One of the key aims of .NET MAUI is to enable\r\nyou to implement as much of your app logic and UI layout as possible in\r\na single code-base.</p>\r\n</blockquote>\r\n</blockquote>\r\n","text":"Dotnet .NET - 维基百科，自由的百科全书 (wikipedia.org) .NET框架 - 维基百科，自由的百科全书 (wikipedia.org) 语言功能与库类型之间的关系 - C# | Microsoft Learn 首先是Dotnet Framework： 微...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":3,"path":"api/categories/C.json"},{"name":"Language Learning","slug":"C/Language-Learning","count":3,"path":"api/categories/C/Language-Learning.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":19,"path":"api/tags/Language-Learning.json"},{"name":"C#","slug":"C","count":3,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#dotnet\"><span class=\"toc-text\">Dotnet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8Ewpfmaui%E5%8F%8Auwp\"><span class=\"toc-text\">关于WPF、MAUI及UWP</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"垃圾回收 - Garbage Collection","uid":"1a0cb69df3f16f58729d7e68901c943f","slug":"Language Learning/Powershell","date":"2023-12-08T13:52:53.000Z","updated":"2023-12-08T18:31:47.199Z","comments":true,"path":"api/articles/Language Learning/Powershell.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Powershell Main References: Getting Started with PowerShell - PowerShell | Microsoft Learn Execution Policy about Execution Policies - Power...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Powershell","slug":"Powershell","count":1,"path":"api/categories/Powershell.json"},{"name":"Language Learning","slug":"Powershell/Language-Learning","count":1,"path":"api/categories/Powershell/Language-Learning.json"}],"tags":[{"name":"Powershell","slug":"Powershell","count":2,"path":"api/tags/Powershell.json"},{"name":"Language Learning","slug":"Language-Learning","count":19,"path":"api/tags/Language-Learning.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"游戏设计分析/RPG和FPS的一些比较","date":"2023-12-01T11:34:08.095Z","updated":"2023-12-01T11:34:08.095Z","comments":true,"path":"api/articles/游戏设计分析/RPG和FPS的一些比较.json","keywords":null,"cover":null,"text":" ","link":"","photos":[],"count_time":{"symbolsCount":2,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}