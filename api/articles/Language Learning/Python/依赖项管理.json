{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/依赖项管理","date":"2023-03-08T00:26:01.977Z","updated":"2022-09-14T10:08:28.000Z","comments":true,"path":"api/articles/Language Learning/Python/依赖项管理.json","keywords":null,"cover":[],"content":"<h1 id=\"依赖项管理：Requirements-txt-Setup-py及更多\"><a href=\"#依赖项管理：Requirements-txt-Setup-py及更多\" class=\"headerlink\" title=\"依赖项管理：Requirements.txt, Setup.py及更多\"></a>依赖项管理：Requirements.txt, Setup.py及更多</h1><h2 id=\"Write-a-setup-py\"><a href=\"#Write-a-setup-py\" class=\"headerlink\" title=\"Write a setup.py\"></a>Write a setup.py</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>remember what you use, or try to use some tools to control the dependenies efficiently and fine</p></blockquote>\n<p>Yes, we can write this file in multiple ways - python is a script language after all.</p>\n<p>However, what’s the most imporant part?</p>\n<p>I think we should follow the codes below:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from setuptools import setup, find_packages()\nsetup(\n    # metadata with info\n    name&#x3D;&#39;SetupFileExample&#39;,\n    version&#x3D;&#39;0.1&#39;,\n    author&#x3D;&#39;JBR&#39;,\n    author_email&#x3D;&#39;jbr@example.com&#39;,\n    packages&#x3D;find_packages(),\n    description&#x3D;&#39;Useful towel-related stuff.&#39;,\n    # dependencies \n    install_requires&#x3D;[\n        &quot;Django &gt;&#x3D; 1.1.1&quot;,\n        &quot;caldav &#x3D;&#x3D; 0.1.4&quot;,\n    ],\n)</code></pre>\n\n<p>As for metadata, you can use this chart:</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-4563e810d05ec25ce283c7f54a271e2e_1440w.jpg\" alt=\"img\"></p>\n<p>and, the next one is a problem: how can we remember the packages we installed thousands of years ago?</p>\n<p>well, thanks to the pip-tools we list at link4 - Link below, we can clearly see the main dependencies and decide which to list. With that, we can figure out what’s important</p>\n<h2 id=\"Why-we-need-setup-py-even-if-requirements-txt-already-exists\"><a href=\"#Why-we-need-setup-py-even-if-requirements-txt-already-exists\" class=\"headerlink\" title=\"Why we need setup.py even if requirements.txt already exists?\"></a>Why we need setup.py even if requirements.txt already exists?</h2><p>see link3 - it’s pretty nice!</p>\n<h2 id=\"Links：\"><a href=\"#Links：\" class=\"headerlink\" title=\"Links：\"></a>Links：</h2><ul>\n<li><em><strong>highly recommend to read:</strong></em> <a href=\"https://godatadriven.com/blog/a-practical-guide-to-using-setup-py/\">A Practical Guide to Using Setup.py - GoDataDriven</a></li>\n<li><strong>recommend to read:</strong> <a href=\"https://blog.konghy.cn/2018/04/29/setup-dot-py/\">Python 库打包分发(setup.py 编写)简易指南 | Huoty’s Blog (konghy.cn)</a></li>\n<li><strong>recommend to read:</strong> <a href=\"https://pyzh.readthedocs.io/en/latest/python-setup-dot-py-vs-requirements-dot-txt.html#setup-py-vs-requirements-txt\">12. setup.py vs requirements.txt — 一起写Python文章，一起看Python文章 (pyzh.readthedocs.io)</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1943416\">别再用 requirements.txt 来管理依赖了 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></li>\n<li><a href=\"https://github.com/jazzband/pip-tools\">jazzband/pip-tools: A set of tools to keep your pinned Python dependencies fresh. (github.com)</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/480534599\">Python 中的 requirements.txt 与 setup.py - 知乎 (zhihu.com)</a></li>\n<li><a href=\"https://docs.python.org/3/distutils/setupscript.html\">2. Writing the Setup Script — Python 3.10.7 documentation</a></li>\n<li><a href=\"https://setuptools.pypa.io/en/latest/setuptools.html\">Building and Distributing Packages with Setuptools - setuptools 65.3.0.post20220826 documentation (pypa.io)</a></li>\n</ul>\n","text":"依赖项管理：Requirements.txt, Setup.py及更多Write a setup.py remember what you use, or try to use some tools to control the dependenies efficiently a...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96%E9%A1%B9%E7%AE%A1%E7%90%86%EF%BC%9ARequirements-txt-Setup-py%E5%8F%8A%E6%9B%B4%E5%A4%9A\"><span class=\"toc-text\">依赖项管理：Requirements.txt, Setup.py及更多</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Write-a-setup-py\"><span class=\"toc-text\">Write a setup.py</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Why-we-need-setup-py-even-if-requirements-txt-already-exists\"><span class=\"toc-text\">Why we need setup.py even if requirements.txt already exists?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Links%EF%BC%9A\"><span class=\"toc-text\">Links：</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/使用python解决文件自动化处理的方案及zipfile模块的介绍","date":"2023-03-08T00:26:01.978Z","updated":"2022-02-24T13:21:30.000Z","comments":true,"path":"api/articles/Language Learning/Python/使用python解决文件自动化处理的方案及zipfile模块的介绍.json","keywords":null,"cover":null,"text":"使用Python解决文件自动化改名和命名原因：获取压缩文件的实际名称：压缩文件名称使用了随机字符，而原文件夹作为压缩文件的根目录来保存，为了避免打开压缩文件才能知道打开的到底是哪个文件，需要将压缩文件内的文件夹名复制出来为外部压缩文件改名 采用方案：解压缩模块：zipfileof...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/数组","date":"2023-03-08T00:26:01.974Z","updated":"2022-02-24T13:22:22.000Z","comments":true,"path":"api/articles/Language Learning/Python/数组.json","keywords":null,"cover":null,"text":"二维数组的定义创建一个二维数组？还是一个n*n的二维数组？ 1. 直接定义：a &#x3D; [[]] 2.众多间接定义？a.直接地间接创建a&#x3D;[] arrays&#x3D;[a*3] 注意！这里的arrays并不是[[], [], []]，而是[[]] b.通过引用创...","link":"","photos":[],"count_time":{"symbolsCount":610,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}