{"title":"selenium自动化爬虫","uid":"46c2c3df1cbb91d145ce37d8e3350c78","slug":"Language Learning/Python/selenium自动化","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T20:03:21.000Z","comments":true,"path":"api/articles/Language Learning/Python/selenium自动化.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1\r\nid=\"目标使用-selenium-来解决网页中的大量同质化人工操作内容\">目标：使用\r\nselenium 来解决网页中的大量同质化人工操作内容</h1>\r\n<h2 id=\"零想好该怎么做\">零：想好该怎么做：</h2>\r\n<h3 id=\"关于指定网站\">关于指定网站：</h3>\r\n<p>网站是网盘网站，其文件有密码保护，即每个文件都有不同且无规律的受保护地址；同时，这些网页的操作完全重复。</p>\r\n<p>我们可以使用 selenium 来完成自动化代替重复劳动。</p>\r\n<h3 id=\"关于-selenium\">关于 selenium</h3>\r\n<ul>\r\n<li>需要使用浏览器的自动化 driver</li>\r\n<li>需要使用键盘输入模拟模块</li>\r\n<li>需要使用鼠标输入模拟模块</li>\r\n<li>需要事先了解需要操作的网页元素对象的路径</li>\r\n</ul>\r\n<h2\r\nid=\"一准备工作将所有需要爬取的地址整合到一个列表里\">一、准备工作：将所有需要爬取的地址整合到一个列表里：</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">r&quot;D:\\Project\\Code Trainning\\Learning\\PythonDemo&quot;</span></span><br><span class=\"line\">filename = <span class=\"string\">r&quot;addresslist.txt&quot;</span> <span class=\"comment\"># 存储所有网址的文件</span></span><br><span class=\"line\">code = <span class=\"string\">&quot;849227&quot;</span> <span class=\"comment\"># 网站文件的密码</span></span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(path)</span><br><span class=\"line\">os.getcwd()</span><br><span class=\"line\"></span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(file=filename, mode=<span class=\"string\">&#x27;r&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">FileContent = f.readlines()</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">AddressList = []</span><br><span class=\"line\">t = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> FileContent:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> t % <span class=\"number\">2</span> == <span class=\"number\">0</span> <span class=\"keyword\">and</span> t % <span class=\"number\">4</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        AddressList.append(i)</span><br><span class=\"line\">    t = t + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for i in AddressList:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(i)</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"二用-selenium-来打开这些网页并模拟操作\">二、用 selenium\r\n来打开这些网页并模拟操作：</h2>\r\n<h3 id=\"打开网页\">打开网页：</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver <span class=\"comment\"># selenium.webdriver模块提供了所有WebDriver的实现</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.keys <span class=\"keyword\">import</span> Keys <span class=\"comment\"># Keys类提供了键盘的代码，用来输入特殊的键盘符（如：回车,ALT,F1等等）</span></span><br><span class=\"line\">\t<span class=\"comment\"># 比如，在上条语句输入之后，可以使用Keys.ENTER来模拟输入回车符</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">wd = webdriver.Edge(<span class=\"string\">r&quot;D:\\language\\EdgeDriver\\msedgedriver.exe&quot;</span>) <span class=\"comment\"># 创建一个Edge浏览器的实例</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> AddressList:</span><br><span class=\"line\">        wd.get(i)</span><br><span class=\"line\"></span><br><span class=\"line\">        …… <span class=\"comment\"># 接第二步</span></span><br><span class=\"line\"></span><br><span class=\"line\">        time.sleep(<span class=\"number\">60</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(e)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># driver.get方法会导向给定的URL的页面，WebDriver会等待页面完全加载完(就是onload函数被触发了)，才把程序的控制权交给你的测试或者脚本。</span></span><br><span class=\"line\">    <span class=\"comment\"># 但是！如果 你的页面用了太多的AJAX，那么这个机制将会失效，因为原本完整的页面只占用很小一部分时间，而ajax是“页面完成之后的操作”，selenium根本不知道页面到底是什么时候加载完。就像是requests面对众多ajax存在的网页一样</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"对网页进行操作\">对网页进行操作</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time.sleep(<span class=\"number\">5</span>) <span class=\"comment\"># 最差的实现方式，最好使用隐式等待</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">input_box1 = wd.find_element_by_id(<span class=\"string\">&#x27;passcode&#x27;</span>) <span class=\"comment\"># 找到输入box</span></span><br><span class=\"line\">input_box1.send_keys(code) <span class=\"comment\"># 输入验证码，send_keys函数能模拟大部分的键盘输入，其他的需要Keys类来实现</span></span><br><span class=\"line\">confirm_button1 = wd.find_element_by_xpath(<span class=\"string\">r&quot;/html/body/main/div/div[1]/div/div/div/div[2]/div[2]/button&quot;</span>)</span><br><span class=\"line\">confirm_button1.click() <span class=\"comment\"># 模拟鼠标电机</span></span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(<span class=\"number\">5</span>) <span class=\"comment\"># 如上</span></span><br><span class=\"line\"></span><br><span class=\"line\">confirm_button2 = wd.find_element_by_xpath(<span class=\"string\">r&quot;/html/body/main/div/div/div[4]/div[1]/div[2]/button&quot;</span>)</span><br><span class=\"line\">confirm_button2.click()</span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(<span class=\"number\">180</span>)</span><br><span class=\"line\">wd.find_element_by_tag_name(<span class=\"string\">&#x27;body&#x27;</span>).send_keys(Keys.Control + <span class=\"string\">&#x27;t&#x27;</span>) <span class=\"comment\"># 模拟组合键</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">显式Waits</span></span><br><span class=\"line\"><span class=\"string\">\t+ 用WebDriverWait结合ExpectedCondition来实现：</span></span><br><span class=\"line\"><span class=\"string\">\t\telement = selenium.webdriver.support.ui.WebDriverWait(wd, 10).unitl(</span></span><br><span class=\"line\"><span class=\"string\">\t\t\tselenium.webdriver.support.expected_conditions.presence_of_located(By.ID, &quot;anyIDisOK&quot;)</span></span><br><span class=\"line\"><span class=\"string\">\t\t)</span></span><br><span class=\"line\"><span class=\"string\">\t\t# 这段代码将会等待10秒，并在等待过程中，每0.5s就调用一下ExpectedCondition，如果成功则立即返回，否则持续重试直到超时报错，报出错误TimeoutException</span></span><br><span class=\"line\"><span class=\"string\">\t+ 显示Wait中有许多预期条件，这样子就无需自己编写expected_condition（见文档</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">隐式Waits</span></span><br><span class=\"line\"><span class=\"string\">please forget that，but when I understand，I will c</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"结束\">结束</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wd.close() <span class=\"comment\"># 或者 wb.quit()</span></span><br></pre></td></tr></table></figure>\r\n","text":"目标：使用 selenium 来解决网页中的大量同质化人工操作内容 零：想好该怎么做： 关于指定网站： 网站是网盘网站，其文件有密码保护，即每个文件都有不同且无规律的受保护地址；同时，这些网页的操作完全重复。 我们可以使用 selenium 来完成自动化代替重复劳动。 关于 se...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":9,"path":"api/categories/Python.json"},{"name":"Language Learning","slug":"Python/Language-Learning","count":8,"path":"api/categories/Python/Language-Learning.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":16,"path":"api/tags/Language-Learning.json"},{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E6%A0%87%E4%BD%BF%E7%94%A8-selenium-%E6%9D%A5%E8%A7%A3%E5%86%B3%E7%BD%91%E9%A1%B5%E4%B8%AD%E7%9A%84%E5%A4%A7%E9%87%8F%E5%90%8C%E8%B4%A8%E5%8C%96%E4%BA%BA%E5%B7%A5%E6%93%8D%E4%BD%9C%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">目标：使用\r\nselenium 来解决网页中的大量同质化人工操作内容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9B%B6%E6%83%B3%E5%A5%BD%E8%AF%A5%E6%80%8E%E4%B9%88%E5%81%9A\"><span class=\"toc-text\">零：想好该怎么做：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%AE%9A%E7%BD%91%E7%AB%99\"><span class=\"toc-text\">关于指定网站：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E-selenium\"><span class=\"toc-text\">关于 selenium</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%E5%B0%86%E6%89%80%E6%9C%89%E9%9C%80%E8%A6%81%E7%88%AC%E5%8F%96%E7%9A%84%E5%9C%B0%E5%9D%80%E6%95%B4%E5%90%88%E5%88%B0%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E9%87%8C\"><span class=\"toc-text\">一、准备工作：将所有需要爬取的地址整合到一个列表里：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%94%A8-selenium-%E6%9D%A5%E6%89%93%E5%BC%80%E8%BF%99%E4%BA%9B%E7%BD%91%E9%A1%B5%E5%B9%B6%E6%A8%A1%E6%8B%9F%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">二、用 selenium\r\n来打开这些网页并模拟操作：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80%E7%BD%91%E9%A1%B5\"><span class=\"toc-text\">打开网页：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E7%BD%91%E9%A1%B5%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">对网页进行操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9D%9F\"><span class=\"toc-text\">结束</span></a></li></ol></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"requirements.txt in Python project","uid":"9f9ee0afa6efd648aa340428f380e2d6","slug":"Language Learning/Python/Requirements.txt","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T20:03:30.000Z","comments":true,"path":"api/articles/Language Learning/Python/Requirements.txt.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"requirements.txt in Python project 写 python 程序的时候，我们经常的会下载很多外部模块，当我们编写完成后，准备在其他设备上部署的时候，那么新设备上需要安装我当前环境下的所有包——非常麻烦 我们可以利用 pip 来生成一个 requirem...","link":"","photos":[],"count_time":{"symbolsCount":933,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":9,"path":"api/categories/Python.json"},{"name":"Language Learning","slug":"Python/Language-Learning","count":8,"path":"api/categories/Python/Language-Learning.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":16,"path":"api/tags/Language-Learning.json"},{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"基本的Python爬虫","uid":"d2b3e77ca5e5c321ffd72dd8a363d797","slug":"Language Learning/Python/python爬虫","date":"2022-12-23T04:23:23.000Z","updated":"2023-10-27T20:01:22.000Z","comments":true,"path":"api/articles/Language Learning/Python/python爬虫.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"基本的Python爬虫 第一步：引入包并准备临时存储数据的列表 12345678910111213141516171819import urllib.requestimport urllib.parseimport requestsfrom bs4 import Beautifu...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Python","slug":"Python","count":9,"path":"api/categories/Python.json"},{"name":"Language Learning","slug":"Python/Language-Learning","count":8,"path":"api/categories/Python/Language-Learning.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":16,"path":"api/tags/Language-Learning.json"},{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}