{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/使用python解决文件自动化处理的方案","date":"2023-03-08T00:26:01.980Z","updated":"2022-02-24T13:21:28.000Z","comments":true,"path":"api/articles/Language Learning/Python/使用python解决文件自动化处理的方案.json","keywords":null,"cover":null,"content":"<h2 id=\"使用Python解决文件自动化改名和命名\"><a href=\"#使用Python解决文件自动化改名和命名\" class=\"headerlink\" title=\"使用Python解决文件自动化改名和命名\"></a>使用Python解决文件自动化改名和命名</h2><h3 id=\"原因：获取压缩文件的实际名称：\"><a href=\"#原因：获取压缩文件的实际名称：\" class=\"headerlink\" title=\"原因：获取压缩文件的实际名称：\"></a>原因：获取压缩文件的实际名称：</h3><p>压缩文件名称使用了随机字符，而原文件夹作为压缩文件的根目录来保存，为了避免打开压缩文件才能知道打开的到底是哪个文件，需要将压缩文件内的文件夹名复制出来为外部压缩文件改名</p>\n<h3 id=\"采用方案：\"><a href=\"#采用方案：\" class=\"headerlink\" title=\"采用方案：\"></a>采用方案：</h3><h4 id=\"解压缩模块：zipfile\"><a href=\"#解压缩模块：zipfile\" class=\"headerlink\" title=\"解压缩模块：zipfile\"></a>解压缩模块：zipfile</h4><p>official site <a href=\"https://docs.python.org/3/library/zipfile.html\">zipfile — Work with ZIP archives — Python 3.9.6 documentation</a></p>\n<ol>\n<li>提取所有压缩文件的实际名称</li>\n</ol>\n<h4 id=\"文件处理模块：os\"><a href=\"#文件处理模块：os\" class=\"headerlink\" title=\"文件处理模块：os\"></a>文件处理模块：os</h4><ol>\n<li>确定实际工作目录</li>\n<li>找到所有需要改名的文件并存储</li>\n<li>在压缩文件中提取完实际名称后对源文件进行改名</li>\n</ol>\n<h4 id=\"文字提取模块（正则表达式）：re\"><a href=\"#文字提取模块（正则表达式）：re\" class=\"headerlink\" title=\"文字提取模块（正则表达式）：re\"></a>文字提取模块（正则表达式）：re</h4><ol>\n<li>对路径使用正则表达式来处理文件</li>\n</ol>\n<p>程序实例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import os\nimport zipfile\nimport re\n\nos.getcwd()\t\t\t# 等待结果\npath &#x3D; r&quot;&quot;\t\t\t# 输入要处理文件的路径\nos.chdir(path)\t\t# 进入目标目录\n\nA &#x3D; []\nfor i in os.walk(path):\n    A.append(i)\n    \nB &#x3D; A[0][2] # B按顺序存储了需要修改的所有文件，注意A[0][2]的真正含义！\n\n# 注意，B可能包含已经修改了的文件，这时有两个方案\n\t# 1. （通过操作）规避这些文件，单独处理（费时费力，但是可以在一个文件夹下完成所有操作，也符合我个人直觉，毕竟是存在某些文件没有\n\t# 2. 将这些文件全部复制到新文件夹下保持文件纯净\n# 采用方案2\n\nC &#x3D; [] # 存储真实名称\n\nfor i in B:\n    with zipfile.ZipFile(i, &#39;r&#39;) as z:\n        for i in z.namelist():\n            C.append(i)\n        z.close() # 可能会有几百行？_(:з」∠)_，总之，拿下了就行\n\nget_name_rule &#x3D; re.compile(r&quot; &quot;, re.S) # 正则表达式的筛选规则\nD &#x3D; []\nfor i in C:\n\tif re.findall(get_name_rule, i) !&#x3D; []:\n        D.append(re.findall(get_name_rule, i)[0])\n\n&#39;&#39;&#39;\nE &#x3D; []\nrule_extended &#x3D; re.compile(r&quot; &quot;, re.S)\nfor i in D:\n    if re.findall(rule_extended, i) !&#x3D; []:\n    \tE.append(re.findall(rule_extended, i)[0])\n    else:\n    \tE.append(i)\n补充提取，将所有违规字符如&#39;&#x2F;&#39;，&#39;*&#39;等全部剔除\n&#39;&#39;&#39;\n\ncount &#x3D; 0\nfor i in B:\n    temp &#x3D; E[count] + &quot;.zip&quot; \t# 注意后缀！\n    os.rename(i, temp)\n    count &#x3D; count + 1\n\n    \n    \n    \n    \n以上全部！</code></pre>\n\n\n\n","text":"使用Python解决文件自动化改名和命名原因：获取压缩文件的实际名称：压缩文件名称使用了随机字符，而原文件夹作为压缩文件的根目录来保存，为了避免打开压缩文件才能知道打开的到底是哪个文件，需要将压缩文件内的文件夹名复制出来为外部压缩文件改名 采用方案：解压缩模块：zipfileof...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8Python%E8%A7%A3%E5%86%B3%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%94%B9%E5%90%8D%E5%92%8C%E5%91%BD%E5%90%8D\"><span class=\"toc-text\">使用Python解决文件自动化改名和命名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%9B%A0%EF%BC%9A%E8%8E%B7%E5%8F%96%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6%E7%9A%84%E5%AE%9E%E9%99%85%E5%90%8D%E7%A7%B0%EF%BC%9A\"><span class=\"toc-text\">原因：获取压缩文件的实际名称：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%87%E7%94%A8%E6%96%B9%E6%A1%88%EF%BC%9A\"><span class=\"toc-text\">采用方案：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%9D%97%EF%BC%9Azipfile\"><span class=\"toc-text\">解压缩模块：zipfile</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E6%A8%A1%E5%9D%97%EF%BC%9Aos\"><span class=\"toc-text\">文件处理模块：os</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E5%AD%97%E6%8F%90%E5%8F%96%E6%A8%A1%E5%9D%97%EF%BC%88%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%89%EF%BC%9Are\"><span class=\"toc-text\">文字提取模块（正则表达式）：re</span></a></li></ol></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/selenium自动化","date":"2023-03-08T00:26:01.994Z","updated":"2021-08-22T15:04:16.000Z","comments":true,"path":"api/articles/Language Learning/Python/selenium自动化.json","keywords":null,"cover":null,"text":"目标：使用selenium来解决网页中的大量同质化人工操作内容零：想好该怎么做：关于指定网站：网站是网盘网站，其文件有密码保护，即每个文件都有不同且无规律的受保护地址；同时，这些网页的操作完全重复。 我们可以使用selenium来完成自动化代替重复劳动。 关于selenium 需...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/使用python解决文件自动化处理的方案及zipfile模块的介绍","date":"2023-03-08T00:26:01.978Z","updated":"2022-02-24T13:21:30.000Z","comments":true,"path":"api/articles/Language Learning/Python/使用python解决文件自动化处理的方案及zipfile模块的介绍.json","keywords":null,"cover":null,"text":"使用Python解决文件自动化改名和命名原因：获取压缩文件的实际名称：压缩文件名称使用了随机字符，而原文件夹作为压缩文件的根目录来保存，为了避免打开压缩文件才能知道打开的到底是哪个文件，需要将压缩文件内的文件夹名复制出来为外部压缩文件改名 采用方案：解压缩模块：zipfileof...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}