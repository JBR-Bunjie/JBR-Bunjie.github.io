{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/pyecharts使用","date":"2023-03-07T16:14:45.595Z","updated":"2022-02-24T13:23:32.000Z","comments":true,"path":"api/articles/Language Learning/Python/pyecharts使用.json","keywords":null,"cover":null,"content":"<h2 id=\"install：-pip-install-pyecharts\"><a href=\"#install：-pip-install-pyecharts\" class=\"headerlink\" title=\"install： pip install pyecharts\"></a>install： pip install pyecharts</h2><h2 id=\"Normal-Process\"><a href=\"#Normal-Process\" class=\"headerlink\" title=\"Normal Process\"></a>Normal Process</h2><ol>\n<li>import dependencies</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from pyecharts.charts import * # 引入所有图表类\nfrom pyecharts.components import Table # 引入table组件\nfrom pyecharts import options as opts # 引入options并rename\nfrom pyecharts.commons.utils import JsCode # 引入原生的js代码\n\nfrom snapshot_selenium import snapshot # 使用snapshot_selenium渲染图片\nfrom pyecharts.render import make_snapshot\n\nimport random\nimport datetime\n...</code></pre>\n\n<ol start=\"2\">\n<li><p>对对象添加配置项：</p>\n<p>几乎所有配置项都会在</p>\n<ul>\n<li><p>全局配置项：通过配置全局项，可以更好的设置个性化图表，提供功能组件和更多信息</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li><p>在定义类的详细内容时使用：set_global_opts（function）来进行设定</p>\n</li>\n<li><p>常用全局配置：</p>\n<blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&gt;init_opts&#x3D; # 这是一个例外：这个需要在Bar() 即新建类时调用，用于设定width等值\n\n&gt;title_opts&#x3D;\n&gt;toolbox_opts&#x3D;\n&gt;tooltip_opts&#x3D;\n&gt;visualmap_opts&#x3D;</code></pre>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>系列配置项：</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Basic-Charts\"><a href=\"#Basic-Charts\" class=\"headerlink\" title=\"Basic Charts\"></a>Basic Charts</h2><h3 id=\"Calendar：日历图\"><a href=\"#Calendar：日历图\" class=\"headerlink\" title=\"Calendar：日历图\"></a>Calendar：日历图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">1. class pyecharts.charts.Calendar\n\tclass Calendar(init_opts: opts.InitOpts &#x3D; opts.InitOpts())\n2. func pyeachrts.charts.Calendar.add\n\tyaxis_data: Sequence, # example: [(key, value), ...]\n    calendar_opts&#x3D;opts.CalendarOpts(\n        range_&#x3D;&quot;2017&quot;,\n    ),\n3. </code></pre>\n\n<h3 id=\"Funnel：漏斗图\"><a href=\"#Funnel：漏斗图\" class=\"headerlink\" title=\"Funnel：漏斗图\"></a>Funnel：漏斗图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 系列数据项，格式为 [(key1, value1), (key2, value2)]\n    data_pair: Sequence,</code></pre>\n\n<h3 id=\"Gauge：仪表盘\"><a href=\"#Gauge：仪表盘\" class=\"headerlink\" title=\"Gauge：仪表盘\"></a>Gauge：仪表盘</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 系列数据项，格式为 [(key1, value1), (key2, value2)]\n    data_pair: Sequence,</code></pre>\n\n<h3 id=\"Graph：关系图\"><a href=\"#Graph：关系图\" class=\"headerlink\" title=\"Graph：关系图\"></a>Graph：关系图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 关系图节点数据项列表，参考 &#96;opts.GraphNode&#96;\nnodes: Sequence[Union[opts.GraphNode, dict]],\n\n# 关系图节点间关系数据项列表，参考 &#96;opts.GraphLink&#96;\nlinks: Sequence[Union[opts.GraphLink, dict]],\n\n# 关系图节点分类的类目列表，参考 &#96;opts.GraphCategory&#96;\ncategories: Union[Sequence[Union[opts.GraphCategory, dict]], None] &#x3D; None,</code></pre>\n\n<h3 id=\"Liquid-水流图\"><a href=\"#Liquid-水流图\" class=\"headerlink\" title=\"Liquid: 水流图\"></a>Liquid: 水流图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 系列数据，格式为 [value1, value2, ....]\n    data: Sequence # normally： value1 &gt; value2 &gt; ...</code></pre>\n\n<h3 id=\"Parallel-平行坐标系\"><a href=\"#Parallel-平行坐标系\" class=\"headerlink\" title=\"Parallel: 平行坐标系\"></a>Parallel: 平行坐标系</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 轴定义：\nparallel_axis &#x3D; [&#123;&quot;dim&quot;: 0, &quot;name&quot;: &quot;Price&quot;&#125;,\n    &#123;&quot;dim&quot;: 1, &quot;name&quot;: &quot;Net Weight&quot;&#125;,\n    &#123;&quot;dim&quot;: 2, &quot;name&quot;: &quot;Amount&quot;&#125;,\n    &#123;   &quot;dim&quot;: 3,\n        &quot;name&quot;: &quot;Score&quot;,\n        &quot;type&quot;: &quot;category&quot;,\n        &quot;data&quot;: [&quot;Excellent&quot;, &quot;Good&quot;, &quot;OK&quot;, &quot;Bad&quot;],&#125;,]\n# 数据准备\ndata &#x3D; [(12.99, 100, 82, &quot;Good&quot;), (9.99, 80, 77, &quot;OK&quot;), (20, 120, 60, &quot;Excellent&quot;)]\n(\n    Parallel(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1400px&quot;, height&#x3D;&quot;800px&quot;))\n    .add_schema(schema&#x3D;parallel_axis)\n    .add(\n        series_name&#x3D;&quot;&quot;,\n        data&#x3D;data\n    )\n    .render()\n)</code></pre>\n\n<h3 id=\"Pie\"><a href=\"#Pie\" class=\"headerlink\" title=\"Pie\"></a>Pie</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 系列数据项，格式为 [(key1, value1), (key2, value2)]\ndata_pair: types.Sequence[types.Union[types.Sequence, opts.PieItem, dict]],</code></pre>\n\n<h3 id=\"Polar：极坐标系\"><a href=\"#Polar：极坐标系\" class=\"headerlink\" title=\"Polar：极坐标系\"></a>Polar：极坐标系</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 对数据存在一个add_schema来定义轴\n def add_schema(\n    radiusaxis_opts: Union[opts.RadiusAxisOpts, dict] &#x3D; opts.RadiusAxisOpts(),\n    angleaxis_opts: Union[opts.AngleAxisOpts, dict] &#x3D; opts.AngleAxisOpts(),\n)\n# 数据本身仍在add中引入\n    # 系列数据项\n    data: Sequence, # 数据形式是数组：[(key, value1), value2...]       \n    # 注意一个类型选项\n    type_&#x3D;&quot;bar&quot; # 支持ChartType.SCATTER, ChartType.LINE, ChartType.BAR，ChartType.EFFECT_SCATTER\n默认是极坐标形式的散点图\n\n    Polar()\n    .add_schema(\n        radiusaxis_opts&#x3D;opts.RadiusAxisOpts(type_&#x3D;&quot;category&quot;),\n        angleaxis_opts&#x3D;opts.AngleAxisOpts(is_clockwise&#x3D;True, max_&#x3D;10),\n    )\n    .add(&quot;A&quot;, [(&quot;周一&quot;, 1), 2, 3, 4, 3, 5, 1], type_&#x3D;&quot;bar&quot;)\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Polar-RadiusAxis&quot;))\n    .set_series_opts(label_opts&#x3D;opts.LabelOpts(is_show&#x3D;True))\n    .render()</code></pre>\n\n<h3 id=\"Radar\"><a href=\"#Radar\" class=\"headerlink\" title=\"Radar\"></a>Radar</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">v1 &#x3D; [(4300, 10000, 28000)]\nv2 &#x3D; [(5000, 14000, 28000)]\n(Radar(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1280px&quot;, height&#x3D;&quot;720px&quot;, bg_color&#x3D;&quot;#CCCCCC&quot;))\n    .add_schema(\n        schema&#x3D;[\n            opts.RadarIndicatorItem(name&#x3D;&quot;销售（sales）&quot;, max_&#x3D;6500),\n            opts.RadarIndicatorItem(name&#x3D;&quot;研发（Development）&quot;, max_&#x3D;52000),\n            opts.RadarIndicatorItem(name&#x3D;&quot;市场（Marketing）&quot;, max_&#x3D;25000),\n        ],\n        splitarea_opt&#x3D;opts.SplitAreaOpts(\n            is_show&#x3D;True, areastyle_opts&#x3D;opts.AreaStyleOpts(opacity&#x3D;1)\n        ),\n        textstyle_opts&#x3D;opts.TextStyleOpts(color&#x3D;&quot;#fff&quot;),\n    )\n    .add(\n        series_name&#x3D;&quot;预算分配（Allocated Budget）&quot;,\n        data&#x3D;v1,\n        linestyle_opts&#x3D;opts.LineStyleOpts(color&#x3D;&quot;#CD0000&quot;),\n    )\n    .add(...)\n    .set_series_opts(label_opts&#x3D;opts.LabelOpts(is_show&#x3D;False))\n    .set_global_opts(\n        title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;基础雷达图&quot;), \n    )\n    .render())\n\n    # 系列名称，用于 tooltip 的显示，legend 的图例筛选。\n    series_name: str,</code></pre>\n\n<h3 id=\"Sankey：桑基图\"><a href=\"#Sankey：桑基图\" class=\"headerlink\" title=\"Sankey：桑基图\"></a>Sankey：桑基图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nodes &#x3D; [&#123;&quot;name&quot;: &quot;category1&quot;&#125;,\n    &#123;&quot;name&quot;: &quot;category2&quot;&#125;,\n    &#123;&quot;name&quot;: &quot;category3&quot;&#125;,\n    &#123;&quot;name&quot;: &quot;category4&quot;&#125;,\n    &#123;&quot;name&quot;: &quot;category5&quot;&#125;,\n    &#123;&quot;name&quot;: &quot;category6&quot;&#125;,]\nlinks &#x3D; [&#123;&quot;source&quot;: &quot;category1&quot;, &quot;target&quot;: &quot;category2&quot;, &quot;value&quot;: 10&#125;,\n    &#123;&quot;source&quot;: &quot;category2&quot;, &quot;target&quot;: &quot;category3&quot;, &quot;value&quot;: 15&#125;,\n    &#123;&quot;source&quot;: &quot;category3&quot;, &quot;target&quot;: &quot;category4&quot;, &quot;value&quot;: 20&#125;,\n    &#123;&quot;source&quot;: &quot;category5&quot;, &quot;target&quot;: &quot;category6&quot;, &quot;value&quot;: 25&#125;,]\n(Sankey().add(\n    series_name&#x3D;&quot;sankey&quot;,\n    nodes&#x3D;nodes,\n    links&#x3D;links,\n    pos_bottom&#x3D;50\n    # linestyle_opt&#x3D;opts.LineStyleOpts(opacity&#x3D;0.2, curve&#x3D;0.5, color&#x3D;&quot;source&quot;),\n    # label_opts&#x3D;opts.LabelOpts(position&#x3D;&quot;right&quot;),\n).set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Sankey-基本示例&quot;)).render())</code></pre>\n\n<h3 id=\"Sunburst：旭日图\"><a href=\"#Sunburst：旭日图\" class=\"headerlink\" title=\"Sunburst：旭日图\"></a>Sunburst：旭日图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"> # 数据项1：\n    data &#x3D; [\n    &#123;\n        &quot;name&quot;: &quot;Flora&quot;,\n        &quot;itemStyle&quot;: &#123;&quot;color&quot;: &quot;#da0d68&quot;&#125;,\n        &quot;children&quot;: [\n            &#123;&quot;name&quot;: &quot;Black Tea&quot;, &quot;value&quot;: 1, &quot;itemStyle&quot;: &#123;&quot;color&quot;: &quot;#975e6d&quot;&#125;&#125;,\n            &#123;\n                &quot;name&quot;: &quot;Floral&quot;,\n                &quot;itemStyle&quot;: &#123;&quot;color&quot;: &quot;#e0719c&quot;&#125;,\n                &quot;children&quot;: [&#123;...&#125;,],\n            &#125;,\n        ],\n    &#125;,\n    &#123;...&#125;\n    # 数据项2。\n    data_pair: Sequence,\ndata &#x3D; [\n    opts.SunburstItem(\n        name&#x3D;&quot;Grandpa&quot;,\n        children&#x3D;[\n            opts.SunburstItem(\n                name&#x3D;&quot;Uncle Leo&quot;,\n                value&#x3D;15,\n                children&#x3D;[...],\n            ),\n            opts.SunburstItem(...),\n        ],),\n    opts.SunburstItem(),\n]\nsunburst &#x3D; (\n    Sunburst(init_opts&#x3D;opts.InitOpts(width&#x3D;&quot;1000px&quot;, height&#x3D;&quot;600px&quot;))\n    .add(series_name&#x3D;&quot;&quot;, data_pair&#x3D;data, radius&#x3D;[0, &quot;90%&quot;])\n    .set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Sunburst-基本示例&quot;))\n    .set_series_opts(label_opts&#x3D;opts.LabelOpts(formatter&#x3D;&quot;&#123;b&#125;&quot;))\n    .render(&quot;basic_sunburst.html&quot;)\n)</code></pre>\n\n<h3 id=\"ThemeRiver\"><a href=\"#ThemeRiver\" class=\"headerlink\" title=\"ThemeRiver\"></a>ThemeRiver</h3><h3 id=\"WordCloud\"><a href=\"#WordCloud\" class=\"headerlink\" title=\"WordCloud\"></a>WordCloud</h3><h2 id=\"直角坐标系图表\"><a href=\"#直角坐标系图表\" class=\"headerlink\" title=\"直角坐标系图表\"></a>直角坐标系图表</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">几乎所有表的数据要求特征相同，一般为xaxis赋字符串列表，而使用一条或多条yaxis来展示值\n1. markline\nmarkline_opts&#x3D;opts.MarkLineOpts(data&#x3D;[opts.MarkLineItem(type_&#x3D;&quot;average&quot;)]) # </code></pre>\n\n<h3 id=\"柱状图\"><a href=\"#柱状图\" class=\"headerlink\" title=\"柱状图\"></a>柱状图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 系列名称，用于 tooltip 的显示，legend 的图例筛选。\nseries_name: str,\n# 系列数据\nx&#x2F;y_axis: Sequence[Numeric, opts.BarItem, dict],</code></pre>\n\n<h3 id=\"热力图\"><a href=\"#热力图\" class=\"headerlink\" title=\"热力图\"></a>热力图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Y 坐标轴数据\nyaxis_data: types.Sequence[types.Union[opts.HeatMapItem, dict]] # 例: Faker.week\n# 系列数据项\nvalue: [[0, 0, 18], ...]types.Sequence[types.Union[opts.HeatMapItem, dict]]</code></pre>\n\n<h3 id=\"箱形图\"><a href=\"#箱形图\" class=\"headerlink\" title=\"箱形图\"></a>箱形图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">v1 &#x3D; [[850, 740, 900, 1070, 930, 850, 950, 980, 980, 880, 1000, 980],]\nc &#x3D; Boxplot()\nc.add_xaxis([&quot;expr1&quot;])\nc.add_yaxis(&quot;A&quot;, c.prepare_data(v1))\nc.set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;BoxPlot-基本示例&quot;))\nc.render()</code></pre>\n\n<h3 id=\"散点图\"><a href=\"#散点图\" class=\"headerlink\" title=\"散点图\"></a>散点图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">data &#x3D; [[10.0, 8.04],...]\nx_data &#x3D; [d[0] for d in data]\ny_data &#x3D; [d[1] for d in data]\n# 可能需要把global options中各轴的type设置为value\ntooltip_opts&#x3D;opts.TooltipOpts(is_show&#x3D;True)</code></pre>\n\n<h3 id=\"折线图\"><a href=\"#折线图\" class=\"headerlink\" title=\"折线图\"></a>折线图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">Line()\n.add_xaxis(Faker.choose())\n.add_yaxis(&quot;商家A&quot;, Faker.values(), areastyle_opts&#x3D;opts.AreaStyleOpts(opacity&#x3D;0.5))\n.add_yaxis(&quot;商家B&quot;, Faker.values(), areastyle_opts&#x3D;opts.AreaStyleOpts(opacity&#x3D;0.5))\n.set_global_opts(title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;Line-面积图&quot;))\n.render()</code></pre>\n\n<h3 id=\"层叠图\"><a href=\"#层叠图\" class=\"headerlink\" title=\"层叠图\"></a>层叠图</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">line.overlap(scatter).render() # line &#x3D; Line()... scatter &#x3D; Scatter()...</code></pre>\n","text":"install： pip install pyechartsNormal Process import dependencies from pyecharts.charts import * # 引入所有图表类 from pyecharts.components import T...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#install%EF%BC%9A-pip-install-pyecharts\"><span class=\"toc-text\">install： pip install pyecharts</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Normal-Process\"><span class=\"toc-text\">Normal Process</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Basic-Charts\"><span class=\"toc-text\">Basic Charts</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Calendar%EF%BC%9A%E6%97%A5%E5%8E%86%E5%9B%BE\"><span class=\"toc-text\">Calendar：日历图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Funnel%EF%BC%9A%E6%BC%8F%E6%96%97%E5%9B%BE\"><span class=\"toc-text\">Funnel：漏斗图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Gauge%EF%BC%9A%E4%BB%AA%E8%A1%A8%E7%9B%98\"><span class=\"toc-text\">Gauge：仪表盘</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Graph%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9B%BE\"><span class=\"toc-text\">Graph：关系图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Liquid-%E6%B0%B4%E6%B5%81%E5%9B%BE\"><span class=\"toc-text\">Liquid: 水流图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Parallel-%E5%B9%B3%E8%A1%8C%E5%9D%90%E6%A0%87%E7%B3%BB\"><span class=\"toc-text\">Parallel: 平行坐标系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pie\"><span class=\"toc-text\">Pie</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Polar%EF%BC%9A%E6%9E%81%E5%9D%90%E6%A0%87%E7%B3%BB\"><span class=\"toc-text\">Polar：极坐标系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Radar\"><span class=\"toc-text\">Radar</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Sankey%EF%BC%9A%E6%A1%91%E5%9F%BA%E5%9B%BE\"><span class=\"toc-text\">Sankey：桑基图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Sunburst%EF%BC%9A%E6%97%AD%E6%97%A5%E5%9B%BE\"><span class=\"toc-text\">Sunburst：旭日图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ThemeRiver\"><span class=\"toc-text\">ThemeRiver</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#WordCloud\"><span class=\"toc-text\">WordCloud</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E8%A7%92%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9B%BE%E8%A1%A8\"><span class=\"toc-text\">直角坐标系图表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%B1%E7%8A%B6%E5%9B%BE\"><span class=\"toc-text\">柱状图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%83%AD%E5%8A%9B%E5%9B%BE\"><span class=\"toc-text\">热力图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%B1%E5%BD%A2%E5%9B%BE\"><span class=\"toc-text\">箱形图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%A3%E7%82%B9%E5%9B%BE\"><span class=\"toc-text\">散点图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%98%E7%BA%BF%E5%9B%BE\"><span class=\"toc-text\">折线图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%82%E5%8F%A0%E5%9B%BE\"><span class=\"toc-text\">层叠图</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/Python Function","date":"2023-03-07T16:14:45.598Z","updated":"2022-02-24T13:21:12.000Z","comments":true,"path":"api/articles/Language Learning/Python/Python Function.json","keywords":null,"cover":null,"text":"Python lambda表达式在Python中有两种函数，一种是def定义的函数，而另一种是lambda函数，也就是匿名函数。 它可以接受任意数量的参数，但只能有一个表达式。 示例x &#x3D; lambda a : a + 10 print(x(5)) # 15 语法lam...","link":"","photos":[],"count_time":{"symbolsCount":169,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/numpy","date":"2023-03-07T16:14:45.590Z","updated":"2021-02-17T05:48:40.000Z","comments":true,"path":"api/articles/Language Learning/Python/numpy.json","keywords":null,"cover":null,"text":"numpyimport numpy as np api内容：&gt; 数组的创建： np.array() numpy.array(object, dtype = None, copy = True, order = None, subok = False, ndmin = 0) ...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}