{"title":"URP Chapter 3 - Lit","uid":"82ff1fb81877d21689ef75c8cb4f38fd","slug":"Rendering/UpdateToURPPipeline/Chapter3_Lit","date":"2023-04-05T13:32:05.000Z","updated":"2023-10-27T20:18:48.000Z","comments":true,"path":"api/articles/Rendering/UpdateToURPPipeline/Chapter3_Lit.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"chapter-3---lit\">Chapter 3 - Lit</h1>\r\n<p>在 URP 管线下，所有我们新创建的材质会默认使用\r\n<code>Universal Render Pipeline/Lit</code> 作为当前材质的 Shader，这个\r\nShader 是 unity 对 PBR 的基本实现，而本章将对该 Shader\r\n作深入分析，本章所用的 Lit.shader 可以在其 Github 页面找到</p>\r\n<h2 id=\"从-lit.shader-的-properties-开始\">从 Lit.shader 的 Properties\r\n开始</h2>\r\n<h3 id=\"范围\">范围</h3>\r\n<p><code>Properties</code> 代码块位于 <code>Lit.shader</code> 文件中的\r\n<code>3~70</code> 行，具体代码如下：</p>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Properties</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Specular vs Metallic workflow</span></span><br><span class=\"line\">    _WorkflowMode(<span class=\"string\">&quot;WorkflowMode&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    [MainTexture] _BaseMap(<span class=\"string\">&quot;Albedo&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\">    [MainColor] _BaseColor(<span class=\"string\">&quot;Color&quot;</span>, Color) = (<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    _Cutoff(<span class=\"string\">&quot;Alpha Cutoff&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)) = <span class=\"number\">0.5</span></span><br><span class=\"line\"></span><br><span class=\"line\">    _Smoothness(<span class=\"string\">&quot;Smoothness&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)) = <span class=\"number\">0.5</span></span><br><span class=\"line\">    _SmoothnessTextureChannel(<span class=\"string\">&quot;Smoothness texture channel&quot;</span>, Float) = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    _Metallic(<span class=\"string\">&quot;Metallic&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    _MetallicGlossMap(<span class=\"string\">&quot;Metallic&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _SpecColor(<span class=\"string\">&quot;Specular&quot;</span>, Color) = (<span class=\"number\">0.2</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.2</span>)</span><br><span class=\"line\">    _SpecGlossMap(<span class=\"string\">&quot;Specular&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [ToggleOff] _SpecularHighlights(<span class=\"string\">&quot;Specular Highlights&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    [ToggleOff] _EnvironmentReflections(<span class=\"string\">&quot;Environment Reflections&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    _BumpScale(<span class=\"string\">&quot;Scale&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    _BumpMap(<span class=\"string\">&quot;Normal Map&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;bump&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _Parallax(<span class=\"string\">&quot;Scale&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.005</span>, <span class=\"number\">0.08</span>)) = <span class=\"number\">0.005</span></span><br><span class=\"line\">    _ParallaxMap(<span class=\"string\">&quot;Height Map&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;black&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _OcclusionStrength(<span class=\"string\">&quot;Strength&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    _OcclusionMap(<span class=\"string\">&quot;Occlusion&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [HDR] _EmissionColor(<span class=\"string\">&quot;Color&quot;</span>, Color) = (<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">    _EmissionMap(<span class=\"string\">&quot;Emission&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _DetailMask(<span class=\"string\">&quot;Detail Mask&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\">    _DetailAlbedoMapScale(<span class=\"string\">&quot;Scale&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.0</span>, <span class=\"number\">2.0</span>)) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    _DetailAlbedoMap(<span class=\"string\">&quot;Detail Albedo x2&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;linearGrey&quot;</span> &#123;&#125;</span><br><span class=\"line\">    _DetailNormalMapScale(<span class=\"string\">&quot;Scale&quot;</span>, <span class=\"built_in\">Range</span>(<span class=\"number\">0.0</span>, <span class=\"number\">2.0</span>)) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    [Normal] _DetailNormalMap(<span class=\"string\">&quot;Normal Map&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;bump&quot;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// SRP batching compatibility for Clear Coat (Not used in Lit)</span></span><br><span class=\"line\">    [HideInInspector] _ClearCoatMask(<span class=\"string\">&quot;_ClearCoatMask&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    [HideInInspector] _ClearCoatSmoothness(<span class=\"string\">&quot;_ClearCoatSmoothness&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Blending state</span></span><br><span class=\"line\">    _Surface(<span class=\"string\">&quot;__surface&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    _Blend(<span class=\"string\">&quot;__blend&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    _Cull(<span class=\"string\">&quot;__cull&quot;</span>, Float) = <span class=\"number\">2.0</span></span><br><span class=\"line\">    [ToggleUI] _AlphaClip(<span class=\"string\">&quot;__clip&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    [HideInInspector] _SrcBlend(<span class=\"string\">&quot;__src&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    [HideInInspector] _DstBlend(<span class=\"string\">&quot;__dst&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    [HideInInspector] _ZWrite(<span class=\"string\">&quot;__zw&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    [ToggleUI] _ReceiveShadows(<span class=\"string\">&quot;Receive Shadows&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br><span class=\"line\">    <span class=\"comment\">// Editmode props</span></span><br><span class=\"line\">    _QueueOffset(<span class=\"string\">&quot;Queue offset&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ObsoleteProperties</span></span><br><span class=\"line\">    [HideInInspector] _MainTex(<span class=\"string\">&quot;BaseMap&quot;</span>, <span class=\"number\">2</span>D) = <span class=\"string\">&quot;white&quot;</span> &#123;&#125;</span><br><span class=\"line\">    [HideInInspector] _Color(<span class=\"string\">&quot;Base Color&quot;</span>, Color) = (<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    [HideInInspector] _GlossMapScale(<span class=\"string\">&quot;Smoothness&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    [HideInInspector] _Glossiness(<span class=\"string\">&quot;Smoothness&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\">    [HideInInspector] _GlossyReflections(<span class=\"string\">&quot;EnvironmentReflections&quot;</span>, Float) = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    [HideInInspector][NoScaleOffset]<span class=\"built_in\">unity_Lightmaps</span>(<span class=\"string\">&quot;unity_Lightmaps&quot;</span>, <span class=\"number\">2</span>DArray) = <span class=\"string\">&quot;&quot;</span> &#123;&#125;</span><br><span class=\"line\">    [HideInInspector][NoScaleOffset]<span class=\"built_in\">unity_LightmapsInd</span>(<span class=\"string\">&quot;unity_LightmapsInd&quot;</span>, <span class=\"number\">2</span>DArray) = <span class=\"string\">&quot;&quot;</span> &#123;&#125;</span><br><span class=\"line\">    [HideInInspector][NoScaleOffset]<span class=\"built_in\">unity_ShadowMasks</span>(<span class=\"string\">&quot;unity_ShadowMasks&quot;</span>, <span class=\"number\">2</span>DArray) = <span class=\"string\">&quot;&quot;</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>可以看到，<code>Lit.shader</code> 中同时定义了 Unity 所实现的、两种\r\nPBR 工作流中所需要的全部属性。</p>\r\n<p>接下来，我们将试对属性定义中代码的书写逻辑，及同下方的部分逻辑一起，作大致说明：</p>\r\n<h3 id=\"定义工作流\">定义工作流</h3>\r\n<p>可以看到，Properties\r\n中开头第一段代码就是用于工作流类型定义的代码：</p>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_WorkflowMode(<span class=\"string\">&quot;WorkflowMode&quot;</span>, Float) = <span class=\"number\">1.0</span></span><br></pre></td></tr></table></figure>\r\n<p>但是奇怪的是，我们的面板上所实在展示的并不是浮点数——是字符串：</p>\r\n<p><img\r\nsrc=\"......\\images\\Dev\\Unity\\UpdateToURPPipeline\\Chapter3_Lit\\001.png\"\r\nalt=\"image-20230328205013593\" /> <em>面板上的 <code>WorkflowMode</code>\r\n属性对应的并不是浮点是而是字符文字</em></p>\r\n<p>这些我们</p>\r\n<p>定义工作流后，我们的 Inspector\r\n面板会发生变化，两种工作流对应的面板如下：</p>\r\n<p><img\r\nsrc=\"......\\images\\Dev\\Unity\\UpdateToURPPipeline\\Chapter3_Lit\\002.png\"\r\nalt=\"image-20230328205839615\" /> <em>Specular 工作流下的 Inspector\r\n面板</em></p>\r\n<p><img\r\nsrc=\"......\\images\\Dev\\Unity\\UpdateToURPPipeline\\Chapter3_Lit\\003.png\"\r\nalt=\"image-20230328205732177\" /> <em>Metallic 工作流下的 Inspector\r\n面板</em></p>\r\n<p>可以看到当对应的工作流不同时，我们的 <code>Surface Input</code>\r\n下的数据会发生变化。关于 <code>Surface Input</code>\r\n，我们后面还会再次看到。</p>\r\n<h3 id=\"其他-suface-options-内容与-advanced-options-内容\">其他 Suface\r\nOptions 内容与 Advanced Options 内容</h3>\r\n<h2 id=\"第一个-passforwardlit\">第一个 Pass：ForwardLit</h2>\r\n<p>80~150</p>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ------------------------------------------------------------------</span></span><br><span class=\"line\">      <span class=\"comment\">//  Forward pass. Shades all light in a single pass. GI + emission + Fog</span></span><br><span class=\"line\">      Pass</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"comment\">// Lightmode matches the ShaderPassName set in UniversalRenderPipeline.cs. SRPDefaultUnlit and passes with</span></span><br><span class=\"line\">          <span class=\"comment\">// no LightMode tag are also rendered by Universal Render Pipeline</span></span><br><span class=\"line\">          Name <span class=\"string\">&quot;ForwardLit&quot;</span></span><br><span class=\"line\">          Tags&#123;<span class=\"string\">&quot;LightMode&quot;</span> = <span class=\"string\">&quot;UniversalForward&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          Blend[_SrcBlend][_DstBlend]</span><br><span class=\"line\">          ZWrite[_ZWrite]</span><br><span class=\"line\">          Cull[_Cull]</span><br><span class=\"line\"></span><br><span class=\"line\">          HLSLPROGRAM</span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> exclude_renderers gles gles3 glcore</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> target 4.5</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// -------------------------------------</span></span><br><span class=\"line\">          <span class=\"comment\">// Material Keywords</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local _NORMALMAP</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local _PARALLAXMAP</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local _RECEIVE_SHADOWS_OFF</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local _ _DETAIL_MULX2 _DETAIL_SCALED</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _SURFACE_TYPE_TRANSPARENT</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _ALPHATEST_ON</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _ALPHAPREMULTIPLY_ON</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _EMISSION</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _METALLICSPECGLOSSMAP</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _OCCLUSIONMAP</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _SPECULARHIGHLIGHTS_OFF</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _ENVIRONMENTREFLECTIONS_OFF</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> shader_feature_local_fragment _SPECULAR_SETUP</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// -------------------------------------</span></span><br><span class=\"line\">          <span class=\"comment\">// Universal Pipeline keywords</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MAIN_LIGHT_SHADOWS_SCREEN</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _REFLECTION_PROBE_BLENDING</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _REFLECTION_PROBE_BOX_PROJECTION</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _SHADOWS_SOFT</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _SCREEN_SPACE_OCCLUSION</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _DBUFFER_MRT1 _DBUFFER_MRT2 _DBUFFER_MRT3</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _LIGHT_LAYERS</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ _LIGHT_COOKIES</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ _CLUSTERED_RENDERING</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// -------------------------------------</span></span><br><span class=\"line\">          <span class=\"comment\">// Unity defined keywords</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ LIGHTMAP_SHADOW_MIXING</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ SHADOWS_SHADOWMASK</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ DIRLIGHTMAP_COMBINED</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ LIGHTMAP_ON</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ DYNAMICLIGHTMAP_ON</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fog</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_fragment _ DEBUG_DISPLAY</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">//--------------------------------------</span></span><br><span class=\"line\">          <span class=\"comment\">// GPU Instancing</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile_instancing</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> instancing_options renderinglayer</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> multi_compile _ DOTS_INSTANCING_ON</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> vertex LitPassVertex</span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">pragma</span> fragment LitPassFragment</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Packages/com.unity.render-pipelines.universal/Shaders/LitInput.hlsl&quot;</span></span></span><br><span class=\"line\">          <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Packages/com.unity.render-pipelines.universal/Shaders/LitForwardPass.hlsl&quot;</span></span></span><br><span class=\"line\">          ENDHLSL</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"litforwardpass.hlsl\">LitForwardPass.hlsl</h3>\r\n<p>外部实现：为了更清晰的代码</p>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> UNIVERSAL_FORWARD_LIT_PASS_INCLUDED</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> UNIVERSAL_FORWARD_LIT_PASS_INCLUDED</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Packages/com.unity.render-pipelines.universal/ShaderLibrary/Lighting.hlsl&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// GLES2 has limited amount of interpolators</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(_PARALLAXMAP) &amp;&amp; !defined(SHADER_API_GLES)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> REQUIRES_TANGENT_SPACE_VIEW_DIR_INTERPOLATOR</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> (defined(_NORMALMAP) || (defined(_PARALLAXMAP) &amp;&amp; !defined(REQUIRES_TANGENT_SPACE_VIEW_DIR_INTERPOLATOR))) || defined(_DETAIL)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> REQUIRES_WORLD_SPACE_TANGENT_INTERPOLATOR</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// keep this file in sync with LitGBufferPass.hlsl</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Attributes</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    float4 positionOS   : POSITION;</span><br><span class=\"line\">    float3 normalOS     : NORMAL;</span><br><span class=\"line\">    float4 tangentOS    : TANGENT;</span><br><span class=\"line\">    float2 texcoord     : TEXCOORD0;</span><br><span class=\"line\">    float2 staticLightmapUV   : TEXCOORD1;</span><br><span class=\"line\">    float2 dynamicLightmapUV  : TEXCOORD2;</span><br><span class=\"line\">    UNITY_VERTEX_INPUT_INSTANCE_ID</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Varyings</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    float2 uv                       : TEXCOORD0;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_WORLD_SPACE_POS_INTERPOLATOR)</span></span><br><span class=\"line\">    float3 positionWS               : TEXCOORD1;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    float3 normalWS                 : TEXCOORD2;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_WORLD_SPACE_TANGENT_INTERPOLATOR)</span></span><br><span class=\"line\">    half4 tangentWS                : TEXCOORD3;    <span class=\"comment\">// xyz: tangent, w: sign</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    float3 viewDirWS                : TEXCOORD4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _ADDITIONAL_LIGHTS_VERTEX</span></span><br><span class=\"line\">    half4 fogFactorAndVertexLight   : TEXCOORD5; <span class=\"comment\">// x: fogFactor, yzw: vertex light</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    half  fogFactor                 : TEXCOORD5;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_VERTEX_SHADOW_COORD_INTERPOLATOR)</span></span><br><span class=\"line\">    float4 shadowCoord              : TEXCOORD6;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_TANGENT_SPACE_VIEW_DIR_INTERPOLATOR)</span></span><br><span class=\"line\">    half3 viewDirTS                : TEXCOORD7;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">DECLARE_LIGHTMAP_OR_SH</span>(staticLightmapUV, vertexSH, <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DYNAMICLIGHTMAP_ON</span></span><br><span class=\"line\">    float2  dynamicLightmapUV : TEXCOORD9; <span class=\"comment\">// Dynamic lightmap UVs</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    float4 positionCS               : SV_POSITION;</span><br><span class=\"line\">    UNITY_VERTEX_INPUT_INSTANCE_ID</span><br><span class=\"line\">    UNITY_VERTEX_OUTPUT_STEREO</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">InitializeInputData</span><span class=\"params\">(Varyings input, half3 normalTS, out InputData inputData)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    inputData = (InputData)<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_WORLD_SPACE_POS_INTERPOLATOR)</span></span><br><span class=\"line\">    inputData.positionWS = input.positionWS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    half3 viewDirWS = <span class=\"built_in\">GetWorldSpaceNormalizeViewDir</span>(input.positionWS);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(_NORMALMAP) || defined(_DETAIL)</span></span><br><span class=\"line\">    <span class=\"type\">float</span> sgn = input.tangentWS.w;      <span class=\"comment\">// should be either +1 or -1</span></span><br><span class=\"line\">    float3 bitangent = sgn * <span class=\"built_in\">cross</span>(input.normalWS.xyz, input.tangentWS.xyz);</span><br><span class=\"line\">    half3x3 tangentToWorld = <span class=\"built_in\">half3x3</span>(input.tangentWS.xyz, bitangent.xyz, input.normalWS.xyz);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">if</span> defined(_NORMALMAP)</span></span><br><span class=\"line\">    inputData.tangentToWorld = tangentToWorld;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    inputData.normalWS = <span class=\"built_in\">TransformTangentToWorld</span>(normalTS, tangentToWorld);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    inputData.normalWS = input.normalWS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    inputData.normalWS = <span class=\"built_in\">NormalizeNormalPerPixel</span>(inputData.normalWS);</span><br><span class=\"line\">    inputData.viewDirectionWS = viewDirWS;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_VERTEX_SHADOW_COORD_INTERPOLATOR)</span></span><br><span class=\"line\">    inputData.shadowCoord = input.shadowCoord;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">elif</span> defined(MAIN_LIGHT_CALCULATE_SHADOWS)</span></span><br><span class=\"line\">    inputData.shadowCoord = <span class=\"built_in\">TransformWorldToShadowCoord</span>(inputData.positionWS);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    inputData.shadowCoord = <span class=\"built_in\">float4</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _ADDITIONAL_LIGHTS_VERTEX</span></span><br><span class=\"line\">    inputData.fogCoord = <span class=\"built_in\">InitializeInputDataFog</span>(<span class=\"built_in\">float4</span>(input.positionWS, <span class=\"number\">1.0</span>), input.fogFactorAndVertexLight.x);</span><br><span class=\"line\">    inputData.vertexLighting = input.fogFactorAndVertexLight.yzw;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    inputData.fogCoord = <span class=\"built_in\">InitializeInputDataFog</span>(<span class=\"built_in\">float4</span>(input.positionWS, <span class=\"number\">1.0</span>), input.fogFactor);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(DYNAMICLIGHTMAP_ON)</span></span><br><span class=\"line\">    inputData.bakedGI = <span class=\"built_in\">SAMPLE_GI</span>(input.staticLightmapUV, input.dynamicLightmapUV, input.vertexSH, inputData.normalWS);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    inputData.bakedGI = <span class=\"built_in\">SAMPLE_GI</span>(input.staticLightmapUV, input.vertexSH, inputData.normalWS);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    inputData.normalizedScreenSpaceUV = <span class=\"built_in\">GetNormalizedScreenSpaceUV</span>(input.positionCS);</span><br><span class=\"line\">    inputData.shadowMask = <span class=\"built_in\">SAMPLE_SHADOWMASK</span>(input.staticLightmapUV);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">if</span> defined(DEBUG_DISPLAY)</span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">if</span> defined(DYNAMICLIGHTMAP_ON)</span></span><br><span class=\"line\">    inputData.dynamicLightmapUV = input.dynamicLightmapUV;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">if</span> defined(LIGHTMAP_ON)</span></span><br><span class=\"line\">    inputData.staticLightmapUV = input.staticLightmapUV;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    inputData.vertexSH = input.vertexSH;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//                  Vertex and Fragment functions                            //</span></span><br><span class=\"line\"><span class=\"comment\">///////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Used in Standard (Physically Based) shader</span></span><br><span class=\"line\"><span class=\"function\">Varyings <span class=\"title\">LitPassVertex</span><span class=\"params\">(Attributes input)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Varyings output = (Varyings)<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UNITY_SETUP_INSTANCE_ID</span>(input);</span><br><span class=\"line\">    <span class=\"built_in\">UNITY_TRANSFER_INSTANCE_ID</span>(input, output);</span><br><span class=\"line\">    <span class=\"built_in\">UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO</span>(output);</span><br><span class=\"line\"></span><br><span class=\"line\">    VertexPositionInputs vertexInput = <span class=\"built_in\">GetVertexPositionInputs</span>(input.positionOS.xyz);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// normalWS and tangentWS already normalize.</span></span><br><span class=\"line\">    <span class=\"comment\">// this is required to avoid skewing the direction during interpolation</span></span><br><span class=\"line\">    <span class=\"comment\">// also required for per-vertex lighting and SH evaluation</span></span><br><span class=\"line\">    VertexNormalInputs normalInput = <span class=\"built_in\">GetVertexNormalInputs</span>(input.normalOS, input.tangentOS);</span><br><span class=\"line\"></span><br><span class=\"line\">    half3 vertexLight = <span class=\"built_in\">VertexLighting</span>(vertexInput.positionWS, normalInput.normalWS);</span><br><span class=\"line\"></span><br><span class=\"line\">    half fogFactor = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">if</span> !defined(_FOG_FRAGMENT)</span></span><br><span class=\"line\">        fogFactor = <span class=\"built_in\">ComputeFogFactor</span>(vertexInput.positionCS.z);</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    output.uv = <span class=\"built_in\">TRANSFORM_TEX</span>(input.texcoord, _BaseMap);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// already normalized from normal transform to WS.</span></span><br><span class=\"line\">    output.normalWS = normalInput.normalWS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_WORLD_SPACE_TANGENT_INTERPOLATOR) || defined(REQUIRES_TANGENT_SPACE_VIEW_DIR_INTERPOLATOR)</span></span><br><span class=\"line\">    real sign = input.tangentOS.w * <span class=\"built_in\">GetOddNegativeScale</span>();</span><br><span class=\"line\">    half4 tangentWS = <span class=\"built_in\">half4</span>(normalInput.tangentWS.xyz, sign);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_WORLD_SPACE_TANGENT_INTERPOLATOR)</span></span><br><span class=\"line\">    output.tangentWS = tangentWS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_TANGENT_SPACE_VIEW_DIR_INTERPOLATOR)</span></span><br><span class=\"line\">    half3 viewDirWS = <span class=\"built_in\">GetWorldSpaceNormalizeViewDir</span>(vertexInput.positionWS);</span><br><span class=\"line\">    half3 viewDirTS = <span class=\"built_in\">GetViewDirectionTangentSpace</span>(tangentWS, output.normalWS, viewDirWS);</span><br><span class=\"line\">    output.viewDirTS = viewDirTS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">OUTPUT_LIGHTMAP_UV</span>(input.staticLightmapUV, unity_LightmapST, output.staticLightmapUV);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DYNAMICLIGHTMAP_ON</span></span><br><span class=\"line\">    output.dynamicLightmapUV = input.dynamicLightmapUV.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"built_in\">OUTPUT_SH</span>(output.normalWS.xyz, output.vertexSH);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _ADDITIONAL_LIGHTS_VERTEX</span></span><br><span class=\"line\">    output.fogFactorAndVertexLight = <span class=\"built_in\">half4</span>(fogFactor, vertexLight);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    output.fogFactor = fogFactor;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_WORLD_SPACE_POS_INTERPOLATOR)</span></span><br><span class=\"line\">    output.positionWS = vertexInput.positionWS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_VERTEX_SHADOW_COORD_INTERPOLATOR)</span></span><br><span class=\"line\">    output.shadowCoord = <span class=\"built_in\">GetShadowCoord</span>(vertexInput);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    output.positionCS = vertexInput.positionCS;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Used in Standard (Physically Based) shader</span></span><br><span class=\"line\"><span class=\"function\">half4 <span class=\"title\">LitPassFragment</span><span class=\"params\">(Varyings input)</span> : SV_Target</span></span><br><span class=\"line\"><span class=\"function\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">UNITY_SETUP_INSTANCE_ID</span>(input);</span><br><span class=\"line\">    <span class=\"built_in\">UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX</span>(input);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(_PARALLAXMAP)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(REQUIRES_TANGENT_SPACE_VIEW_DIR_INTERPOLATOR)</span></span><br><span class=\"line\">    half3 viewDirTS = input.viewDirTS;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    half3 viewDirWS = <span class=\"built_in\">GetWorldSpaceNormalizeViewDir</span>(input.positionWS);</span><br><span class=\"line\">    half3 viewDirTS = <span class=\"built_in\">GetViewDirectionTangentSpace</span>(input.tangentWS, input.normalWS, viewDirWS);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"built_in\">ApplyPerPixelDisplacement</span>(viewDirTS, input.uv);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    SurfaceData surfaceData;</span><br><span class=\"line\">    <span class=\"built_in\">InitializeStandardLitSurfaceData</span>(input.uv, surfaceData);</span><br><span class=\"line\"></span><br><span class=\"line\">    InputData inputData;</span><br><span class=\"line\">    <span class=\"built_in\">InitializeInputData</span>(input, surfaceData.normalTS, inputData);</span><br><span class=\"line\">    <span class=\"built_in\">SETUP_DEBUG_TEXTURE_DATA</span>(inputData, input.uv, _BaseMap);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _DBUFFER</span></span><br><span class=\"line\">    <span class=\"built_in\">ApplyDecalToSurfaceData</span>(input.positionCS, surfaceData, inputData);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    half4 color = <span class=\"built_in\">UniversalFragmentPBR</span>(inputData, surfaceData);</span><br><span class=\"line\"></span><br><span class=\"line\">    color.rgb = <span class=\"built_in\">MixFog</span>(color.rgb, inputData.fogCoord);</span><br><span class=\"line\">    color.a = <span class=\"built_in\">OutputAlpha</span>(color.a, _Surface);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> color;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"统一的-input\">统一的 input：</h2>\r\n<h3 id=\"保证相同的-cbuffer\">保证相同的 CBUFFER</h3>\r\n<h2 id=\"reference\">Reference</h2>\r\n<ul>\r\n<li>Lit.shader 源代码：<a\r\nhref=\"https://github.com/Unity-Technologies/Graphics/blob/2021.3/HDRP/templates/add-hdrp-blank/Packages/com.unity.render-pipelines.universal/Shaders/Lit.shader\">Graphics/Lit.shader\r\nat 2021.3/HDRP/templates/add-hdrp-blank · Unity-Technologies/Graphics\r\n(github.com)</a></li>\r\n<li><a\r\nhref=\"https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@12.1/manual/lit-shader.html\">Lit\r\nShader | Universal RP | 12.1.10 (unity3d.com)</a></li>\r\n</ul>\r\n","text":"Chapter 3 - Lit 在 URP 管线下，所有我们新创建的材质会默认使用 Universal Render Pipeline/Lit 作为当前材质的 Shader，这个 Shader 是 unity 对 PBR 的基本实现，而本章将对该 Shader 作深入分析，本章所...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#chapter-3---lit\"><span class=\"toc-text\">Chapter 3 - Lit</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E-lit.shader-%E7%9A%84-properties-%E5%BC%80%E5%A7%8B\"><span class=\"toc-text\">从 Lit.shader 的 Properties\r\n开始</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">范围</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E5%B7%A5%E4%BD%9C%E6%B5%81\"><span class=\"toc-text\">定义工作流</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96-suface-options-%E5%86%85%E5%AE%B9%E4%B8%8E-advanced-options-%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">其他 Suface\r\nOptions 内容与 Advanced Options 内容</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E4%B8%AA-passforwardlit\"><span class=\"toc-text\">第一个 Pass：ForwardLit</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#litforwardpass.hlsl\"><span class=\"toc-text\">LitForwardPass.hlsl</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%9F%E4%B8%80%E7%9A%84-input\"><span class=\"toc-text\">统一的 input：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%9D%E8%AF%81%E7%9B%B8%E5%90%8C%E7%9A%84-cbuffer\"><span class=\"toc-text\">保证相同的 CBUFFER</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reference\"><span class=\"toc-text\">Reference</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"URP Chapter4 - 卡通渲染","uid":"54d190e1f1807867e70fac21b913c281","slug":"Rendering/UpdateToURPPipeline/Chapter4_ToonLit","date":"2023-04-06T13:52:05.000Z","updated":"2023-10-27T20:18:57.000Z","comments":true,"path":"api/articles/Rendering/UpdateToURPPipeline/Chapter4_ToonLit.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Chapter4 - 卡通渲染 上一章我们已经分析了 Unity 内置的 Lit Shader，这是 Unity 在 URP 管线下的默认 Shader 而在这一章，我们将视线转向卡通渲染： Reference kwshh/unity_lit_toonshader (github...","link":"","photos":[],"count_time":{"symbolsCount":157,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"URP Chapter2 - 光与影","uid":"d9fb18f440aa390dd7a583e8d02caf3f","slug":"Rendering/UpdateToURPPipeline/Chapter2_ShadowAndLight","date":"2023-04-05T13:32:05.000Z","updated":"2023-10-27T20:18:26.000Z","comments":true,"path":"api/articles/Rendering/UpdateToURPPipeline/Chapter2_ShadowAndLight.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Chapter2 - 光与影 这一章节我们开始研究 URP 管线中的光照与阴影函数，让我们从光照开始 使用空项目 这一次我们不再使用 Unity 下的示例工程——让我们现从 Hub 重新创建一个 URP Core 的新项目，并以其为基础进行接下来的工作 image-2023032...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":31,"path":"api/tags/Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}