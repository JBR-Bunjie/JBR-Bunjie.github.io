{"title":"Unity Shader入门精要笔记 - Chapter7","uid":"874669ee5557de0847d70a81a2b48640","slug":"Rendering/UnityShaderBook/Chapter7","date":"2023-03-08T13:28:36.000Z","updated":"2023-10-27T19:33:44.000Z","comments":true,"path":"api/articles/Rendering/UnityShaderBook/Chapter7.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"unity-shader入门精要笔记---chapter7\">Unity Shader入门精要笔记 -\r\nChapter7</h1>\r\n<h2 id=\"albedo-texture\">Albedo Texture</h2>\r\n<p>纹理中最常见的类型，我们用来取代单纯的_Diffuse颜色</p>\r\n<h2 id=\"bump-mapping\">Bump Mapping</h2>\r\n<p>法线纹理，我们有两种具体的存储方式： - 高度纹理/高度图 - 记录相对高度\r\n- 法线纹理(Default) - 模型空间存储 - 绝对法线信息 -\r\n切线空间存储(Default) - 法线扰动(相对法线信息) -\r\n直接在切线空间中计算相关结果 - 转换到世界空间后再计算结果 -\r\n可以通过高度图转化而来：-&gt;Normal Map-&gt;Create From\r\nGrayScale，之后Unity会根据高度图生成一张在切线空间下的法线纹理 &gt;\r\n在使用法线纹理前，请先将其Texture Type属性设置为Normal\r\nMap，这样我们才能调用Unity中的build-in function来快速解析Normal\r\nMap(内置函数能帮我们根据不同的压缩模式来针对性地加载贴图数据) &gt;\r\n另：关于贴图的压缩模式，可见：http://wiki.polycount.com/wiki/Normal_Map_Compression</p>\r\n<h2 id=\"切线空间\">切线空间</h2>\r\n<blockquote>\r\n<p>切线空间定义于每一个顶点之上</p>\r\n</blockquote>\r\n<h3 id=\"切线与副切线及其计算\">切线与副切线及其计算</h3>\r\n<h4 id=\"切线\">切线</h4>\r\n<p>在一开始仅有Normal既定的情况下，一点上的切线是存在无数条的</p>\r\n<p>在这所有的切线之中，我们选择与当下点的uv坐标中，u轴同向的那条切线作为我们的T轴或x轴</p>\r\n<h4 id=\"副切线\">副切线</h4>\r\n<p>当我们定好了T轴与N轴后，我们就可以通过cross运算得到我们的B轴：Binormal了</p>\r\n<p>但是我们完成cross运算后得到的副切线存在两个可选的方向，这时，利用Unity在tangent的w分量下预留的值来决定</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);</span><br><span class=\"line\">fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);</span><br><span class=\"line\"></span><br><span class=\"line\">fixed tangentSign = v.tangent.w; // * unity_WorldTransformParams.w; // Shader入门精要中未采用，但官方示例中存在</span><br><span class=\"line\">// unity_WorldTransformParams.w，定义于unityShaderVariables.cginc中</span><br><span class=\"line\">// 模型的Scale值是三维向量，即vec3，当这三个值中有奇数个值为负时（1个或者3个值全为负时），unity_WorldTransformParams.w = -1，否则为1.</span><br><span class=\"line\"></span><br><span class=\"line\">fixed3 worldBinormal = cross(worldNormal, worldTangent) * tangentSign;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"tbn矩阵\">TBN矩阵</h3>\r\n<p>用于在 <code>Object Space</code> 和 <code>Tangent Space</code>\r\n间进行转换</p>\r\n<p>这在实际上类似于view矩阵的变换：</p>\r\n<blockquote>\r\n<p>参见文档<code>Technical Artist\\Opengl\\learnopengl-cn.readthedocs.io\\01GettingStarted\\06Transform.md\\1.7.1.2.2.1 View/Camera transformation</code></p>\r\n</blockquote>\r\n<p>结论为：<code>做将原点移动至当前顶点位置的变换</code>，其中由于切线空间更多为向量服务，所以我们更关心坐标轴上的rotation，而非原点到顶点上的transform</p>\r\n<p><strong>注意区分变换的方向，搞明白当前是从切线空间变换到世界空间还是相反</strong></p>\r\n<h2 id=\"可参考资料\">可参考资料：</h2>\r\n<ul>\r\n<li><a href=\"https://zhuanlan.zhihu.com/p/139593847\">切线空间（Tangent\r\nSpace）完全解析 - 知乎 (zhihu.com)</a></li>\r\n<li>U3D内建着色器源码剖析 110页下4.2.8中相关内容</li>\r\n<li><a\r\nhref=\"https://zhuanlan.zhihu.com/p/103546030\">关于顶点的法线、切线、副切线\r\n- 知乎 (zhihu.com)</a></li>\r\n<li><a\r\nhref=\"https://docs.unity3d.com/ScriptReference/Mesh-tangents.html\">Unity\r\n- Scripting API: Mesh.tangents (unity3d.com)</a></li>\r\n<li><a href=\"http://warmcat.org/chai/blog/?p=2004\">CHAI'S BLOG »\r\n切线的tangent.w的值1或-1的意义 (warmcat.org)</a></li>\r\n</ul>\r\n<h2 id=\"番外\">番外：</h2>\r\n<h3 id=\"dcc-software\"><code>DCC Software</code></h3>\r\n<blockquote>\r\n<p>所谓DCC，就是Digital Content\r\nCreation的缩写，即数字内容创作。DCC的范围包括二维/三维、音频/视频剪辑合成、动态/互动内容创作、图像编辑等。</p>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/506895643\">2.1\r\nDCC工具链与引擎工具链 - 知乎 (zhihu.com)</a></p>\r\n</blockquote>\r\n<h3 id=\"随记---计算光方向\">随记 - 计算光方向</h3>\r\n<p>我们开始使用如下built-in函数来取代先前章节用来计算光线向量的方法：\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//fixed3 world_light = normalize(_WorldSpaceLightPos0.xyz);</span><br><span class=\"line\">// =&gt;</span><br><span class=\"line\">fixed3 world_light = UnityWorldSpaceLightDir(i.worldPos);</span><br></pre></td></tr></table></figure></p>\r\n<p>查看该函数源码，可以看到： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inline float3 UnityWorldSpaceLightDir( in float3 worldPos )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    #ifndef USING_LIGHT_MULTI_COMPILE</span><br><span class=\"line\">        return _WorldSpaceLightPos0.xyz - worldPos * _WorldSpaceLightPos0.w;</span><br><span class=\"line\">    #else</span><br><span class=\"line\">        #ifndef USING_DIRECTIONAL_LIGHT //务必注意，这里是`#if n def`，不要误以为平行光会进入该分支！</span><br><span class=\"line\">        return _WorldSpaceLightPos0.xyz - worldPos;</span><br><span class=\"line\">        #else //如果是平行光，则直接返回该点位置</span><br><span class=\"line\">        return _WorldSpaceLightPos0.xyz;</span><br><span class=\"line\">        #endif</span><br><span class=\"line\">    #endif</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure> ### 随记 - 遮罩纹理 Mask\r\nTexture</p>\r\n<h3 id=\"ao---ambient-occlusion---环境光遮蔽\">AO - Ambient Occlusion -\r\n环境光遮蔽</h3>\r\n<h3 id=\"随记---texture种类\">随记 - Texture种类</h3>\r\n<ul>\r\n<li>用来定义模型反射率的Tex(MainTex) - Albedo</li>\r\n<li>用来定义表面法线的Normal Map - Normal</li>\r\n<li>用来控制模型漫反射光照色调的渐变纹理：RampTex <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diffuseColor = tex2D(_RampTex, fixed2(halfLambert, halfLambert)).rgb * _Color.rgb </span><br></pre></td></tr></table></figure></li>\r\n<li>用来控制模型</li>\r\n</ul>\r\n<h3 id=\"problem-1\">PROBLEM 1:</h3>\r\n<blockquote>\r\n<p>None of the overloads accepts 2 arguments</p>\r\n</blockquote>\r\n<p>Pay attention to your vars type <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//float4 _MainTex</span><br><span class=\"line\">//// =&gt;</span><br><span class=\"line\">sampler2D _MainTex</span><br></pre></td></tr></table></figure></p>\r\n<h2 id=\"优化\">优化</h2>\r\n<p>节约插值寄存器，当两个纹理的操作相同时，仅保留其中一个float4\r\nST向量</p>\r\n","text":"Unity Shader入门精要笔记 - Chapter7 Albedo Texture 纹理中最常见的类型，我们用来取代单纯的_Diffuse颜色 Bump Mapping 法线纹理，我们有两种具体的存储方式： - 高度纹理/高度图 - 记录相对高度 - 法线纹理(Defaul...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Unity","slug":"Unity","count":17,"path":"api/categories/Unity.json"}],"tags":[{"name":"Unity","slug":"Unity","count":17,"path":"api/tags/Unity.json"},{"name":"Shader","slug":"Shader","count":33,"path":"api/tags/Shader.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E7%AC%94%E8%AE%B0---chapter7\"><span class=\"toc-text\">Unity Shader入门精要笔记 -\r\nChapter7</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#albedo-texture\"><span class=\"toc-text\">Albedo Texture</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bump-mapping\"><span class=\"toc-text\">Bump Mapping</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%87%E7%BA%BF%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">切线空间</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%87%E7%BA%BF%E4%B8%8E%E5%89%AF%E5%88%87%E7%BA%BF%E5%8F%8A%E5%85%B6%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">切线与副切线及其计算</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%87%E7%BA%BF\"><span class=\"toc-text\">切线</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%89%AF%E5%88%87%E7%BA%BF\"><span class=\"toc-text\">副切线</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tbn%E7%9F%A9%E9%98%B5\"><span class=\"toc-text\">TBN矩阵</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">可参考资料：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%95%AA%E5%A4%96\"><span class=\"toc-text\">番外：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#dcc-software\"><span class=\"toc-text\">DCC Software</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9A%8F%E8%AE%B0---%E8%AE%A1%E7%AE%97%E5%85%89%E6%96%B9%E5%90%91\"><span class=\"toc-text\">随记 - 计算光方向</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ao---ambient-occlusion---%E7%8E%AF%E5%A2%83%E5%85%89%E9%81%AE%E8%94%BD\"><span class=\"toc-text\">AO - Ambient Occlusion -\r\n环境光遮蔽</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9A%8F%E8%AE%B0---texture%E7%A7%8D%E7%B1%BB\"><span class=\"toc-text\">随记 - Texture种类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#problem-1\"><span class=\"toc-text\">PROBLEM 1:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">优化</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Unity Shader入门精要笔记 - Chapter8","uid":"2bc7a87b3796f4bb992e3de5b4dfef67","slug":"Rendering/UnityShaderBook/Chapter8","date":"2023-03-08T13:28:45.000Z","updated":"2023-10-27T19:33:05.000Z","comments":true,"path":"api/articles/Rendering/UnityShaderBook/Chapter8.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Unity Shader入门精要笔记 - Chapter8 Alpha Test 只要没通过透明度测试，就舍弃该片元 Important HLSL Functions Clip Function https://learn.microsoft.com/en-us/windows/...","link":"","photos":[],"count_time":{"symbolsCount":619,"symbolsTime":"1 mins."},"categories":[{"name":"Unity","slug":"Unity","count":17,"path":"api/categories/Unity.json"}],"tags":[{"name":"Unity","slug":"Unity","count":17,"path":"api/tags/Unity.json"},{"name":"Shader","slug":"Shader","count":33,"path":"api/tags/Shader.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Unity Shader入门精要笔记 - Chapter6","uid":"a89249a3d5a65fa935d2ff8b3c1ccd10","slug":"Rendering/UnityShaderBook/Chapter6","date":"2023-03-08T13:28:06.000Z","updated":"2023-10-27T19:34:05.000Z","comments":true,"path":"api/articles/Rendering/UnityShaderBook/Chapter6.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Unity Shader入门精要笔记 - Chapter6 _WorldSpaceLightPos0 lighting.cginc https://docs.unity3d.com/Manual/SL-UnityShaderVariables.html type: float4 ...","link":"","photos":[],"count_time":{"symbolsCount":245,"symbolsTime":"1 mins."},"categories":[{"name":"Unity","slug":"Unity","count":17,"path":"api/categories/Unity.json"}],"tags":[{"name":"Unity","slug":"Unity","count":17,"path":"api/tags/Unity.json"},{"name":"Shader","slug":"Shader","count":33,"path":"api/tags/Shader.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}