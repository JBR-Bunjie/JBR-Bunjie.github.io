{"total":208,"pageSize":13,"pageCount":16,"data":[{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/SQLwithMySQL/00.Install MySQL","date":"2023-03-07T16:14:45.741Z","updated":"2022-03-03T04:25:51.000Z","comments":true,"path":"api/articles/Language Learning/SQLwithMySQL/00.Install MySQL.json","cover":[],"text":"部署MySQLLinux下的MySQL部署0.检验之前的版本请先将你之前已经安装好了的或系统自带的MySQL卸载再进行以下步骤 1. 在线安装（有网络条件下使用输入命令行安装） MySql官网的安装指南：MySQL :: MySQL 8.0 Reference Manual ::...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/计时器","date":"2023-03-07T16:14:45.658Z","updated":"2022-02-24T13:23:48.000Z","comments":true,"path":"api/articles/Language Learning/Python/计时器.json","cover":[],"text":"python 定时器在工作中，我们有时候会需要定时去做一些操作，比如凌晨更新远程代码，仓库每小时更新一次远程分支。这些操作，我们如果要人工进行，不仅要耗费精力，也更容易出错。 如果一件事情，具有周期操作的特点，那么把这件事情设置为定时器操作，最合适不过。 不借助第三方插件在不借助...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/相等判断","date":"2023-03-07T16:14:45.652Z","updated":"2022-02-25T14:19:52.000Z","comments":true,"path":"api/articles/Language Learning/Python/相等判断.json","cover":null,"text":"python的is和==，java的==和equal（相等判断）Python判断对象是否相等（== 和 is）Python中的对象包含三个基本要素，分别是： id：用来唯一标识一个对象，可以理解为内存地址； type：标识对象的类型； value：对象的值； == ：比较两个对象...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/特殊运算符","date":"2023-03-07T16:14:45.650Z","updated":"2022-02-28T14:23:26.000Z","comments":true,"path":"api/articles/Language Learning/Python/特殊运算符.json","cover":null,"text":"三元操作符isandnotor","link":"","photos":[],"count_time":{"symbolsCount":15,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/数组","date":"2023-03-07T16:14:45.646Z","updated":"2022-02-24T13:22:22.000Z","comments":true,"path":"api/articles/Language Learning/Python/数组.json","cover":null,"text":"二维数组的定义创建一个二维数组？还是一个n*n的二维数组？ 1. 直接定义：a &#x3D; [[]] 2.众多间接定义？a.直接地间接创建a&#x3D;[] arrays&#x3D;[a*3] 注意！这里的arrays并不是[[], [], []]，而是[[]] b.通过引用创...","link":"","photos":[],"count_time":{"symbolsCount":610,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/字符编码","date":"2023-03-07T16:14:45.644Z","updated":"2022-06-22T16:54:38.000Z","comments":true,"path":"api/articles/Language Learning/Python/字符编码.json","cover":null,"text":" 十六进制转字符： url转字符： r b u：r：强制转意，保留字符结构，有bug；b：二进制表示，可以解码了；u：表示utf8结构的字符 ","link":"","photos":[],"count_time":{"symbolsCount":72,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/依赖项管理","date":"2023-03-07T16:14:45.640Z","updated":"2022-09-14T10:08:28.000Z","comments":true,"path":"api/articles/Language Learning/Python/依赖项管理.json","cover":[],"text":"依赖项管理：Requirements.txt, Setup.py及更多Write a setup.py remember what you use, or try to use some tools to control the dependenies efficiently a...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/使用python解决文件自动化处理的方案及zipfile模块的介绍","date":"2023-03-07T16:14:45.637Z","updated":"2022-02-24T13:21:30.000Z","comments":true,"path":"api/articles/Language Learning/Python/使用python解决文件自动化处理的方案及zipfile模块的介绍.json","cover":null,"text":"使用Python解决文件自动化改名和命名原因：获取压缩文件的实际名称：压缩文件名称使用了随机字符，而原文件夹作为压缩文件的根目录来保存，为了避免打开压缩文件才能知道打开的到底是哪个文件，需要将压缩文件内的文件夹名复制出来为外部压缩文件改名 采用方案：解压缩模块：zipfileof...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/使用python解决文件自动化处理的方案","date":"2023-03-07T16:14:45.634Z","updated":"2022-02-24T13:21:28.000Z","comments":true,"path":"api/articles/Language Learning/Python/使用python解决文件自动化处理的方案.json","cover":null,"text":"使用Python解决文件自动化改名和命名原因：获取压缩文件的实际名称：压缩文件名称使用了随机字符，而原文件夹作为压缩文件的根目录来保存，为了避免打开压缩文件才能知道打开的到底是哪个文件，需要将压缩文件内的文件夹名复制出来为外部压缩文件改名 采用方案：解压缩模块：zipfileof...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/selenium自动化","date":"2023-03-07T16:14:45.611Z","updated":"2021-08-22T15:04:16.000Z","comments":true,"path":"api/articles/Language Learning/Python/selenium自动化.json","cover":null,"text":"目标：使用selenium来解决网页中的大量同质化人工操作内容零：想好该怎么做：关于指定网站：网站是网盘网站，其文件有密码保护，即每个文件都有不同且无规律的受保护地址；同时，这些网页的操作完全重复。 我们可以使用selenium来完成自动化代替重复劳动。 关于selenium 需...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/Requirements.txt","date":"2023-03-07T16:14:45.608Z","updated":"2022-02-09T08:50:30.000Z","comments":true,"path":"api/articles/Language Learning/Python/Requirements.txt.json","cover":[],"text":"requirements.txt in Python project写python程序的时候，我们经常的会下载很多外部模块，当我们编写完成后，准备在其他设备上部署的时候，那么新设备上需要安装我当前环境下的所有包——非常麻烦 我们可以利用pip来生成一个requirements.t...","link":"","photos":[],"count_time":{"symbolsCount":879,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/python爬虫","date":"2023-03-07T16:14:45.605Z","updated":"2022-12-23T11:55:19.604Z","comments":true,"path":"api/articles/Language Learning/Python/python爬虫.json","cover":null,"text":"第一步：引入包并准备临时存储数据的列表import urllib.request import urllib.parse import requests from bs4 import BeautifulSoup import re import random, time # 设...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"11 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Python/Python拷贝与赋值","date":"2023-03-07T16:14:45.602Z","updated":"2022-04-05T13:11:46.000Z","comments":true,"path":"api/articles/Language Learning/Python/Python拷贝与赋值.json","cover":null,"text":"深浅拷贝概念与使用Reference： 彻底理解Python中的”指针”_杰克小麻雀的博客-CSDN博客_python有指针吗 deep copy and shallow copy浅拷贝，指的是重新分配一块内存，创建一个新的对象，但里面的元素是原对象中各个子对象的引用 深拷贝，是...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}]}