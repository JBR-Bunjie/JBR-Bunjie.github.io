{"total":208,"pageSize":13,"pageCount":16,"data":[{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"密码学初步","date":"2023-03-07T16:14:44.707Z","updated":"2022-04-06T16:34:06.000Z","comments":true,"path":"api/articles/密码学初步.json","cover":null,"text":"加密方法分类加密方法可以分为两大类。一类是单钥加密（private key cryptography），还有一类叫做双钥加密（public key cryptography）。前者的加密和解密过程都用同一套密码，后者的加密和解密过程用的是两套密码。 历史上，人类传统的加密方法都是...","link":"","photos":[],"count_time":{"symbolsCount":774,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"为你的github项目新建一个doc页面","date":"2023-03-07T16:14:44.704Z","updated":"2021-09-21T09:49:04.000Z","comments":true,"path":"api/articles/为你的github项目新建一个doc页面.json","cover":null,"text":"示例： xlwings - Make Excel Fly! — xlwings dev documentation 用Github Page快速创建项目文档网站 - 知乎 (zhihu.com) Your awesome title · Write an awesome desc...","link":"","photos":[],"count_time":{"symbolsCount":191,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"RPC framework","date":"2023-03-07T16:14:44.685Z","updated":"2022-03-07T09:02:28.000Z","comments":true,"path":"api/articles/RPC framework.json","cover":null,"text":"Remote Procedure Call (RPC)What is Remote Procedure Call (RPC)?Remote Procedure Call is a software communication protocol that one program c...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Complexity Has to Live Somewhere","date":"2023-03-07T16:14:44.585Z","updated":"2022-03-01T10:21:30.000Z","comments":true,"path":"api/articles/Complexity Has to Live Somewhere.json","cover":null,"text":"Original Post: Complexity Has to Live Somewhere (ferd.ca) Chinese Version: Complexity Has to Live Somewhere - Google 文档 架构设计-复杂度是不灭的 - 知乎 (z...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Binaries与Source","date":"2023-03-07T16:14:44.579Z","updated":"2023-03-07T15:51:54.567Z","comments":true,"path":"api/articles/Binaries与Source.json","cover":null,"text":"Binaries和Source的区别 二进制（Binaries）文件：即Binary文件/二进制文件：二进制包里面包括了已经经过编译，可以马上运行的程序。你只需要下载和解包（安装）它们以后，就马上可以使用 源（Source）文件：一般是开源程序，这是程序的源代码文件，需要在你的计...","link":"","photos":[],"count_time":{"symbolsCount":289,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"WSA Install third-party apps!","uid":"d0f573d5ece004aa9f60d986d26310d5","slug":"Softwares/Windows/WSA install third party apk","date":"2022-12-23T04:23:24.000Z","updated":"2023-03-07T16:30:24.514Z","comments":true,"path":"api/articles/Softwares/Windows/WSA install third party apk.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"# 第 0 步：确保已正确将 adb 命令加入到系统的环境变量 # 执行下面的命令能看到 adb 版本号则表示 ok # 如有错误，请检查环境变量是否配置正确 adb version # 第 1 步：连接 WSA adb connect 127.0.0.1:58526 # 其中 ...","link":"","photos":[],"count_time":{"symbolsCount":497,"symbolsTime":"1 mins."},"categories":[{"name":"Delopy and Installation","slug":"Delopy-and-Installation","count":1,"path":"api/categories/Delopy-and-Installation.json"}],"tags":[{"name":"Installation","slug":"Installation","count":1,"path":"api/tags/Installation.json"},{"name":"Windows","slug":"Windows","count":1,"path":"api/tags/Windows.json"},{"name":"WSA","slug":"WSA","count":1,"path":"api/tags/WSA.json"},{"name":"Android","slug":"Android","count":1,"path":"api/tags/Android.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"CRC Algorithm","uid":"2e7a3ae4090ee29ca9a2e76805bad9b3","slug":"Algorithm/CRC、LRC、BCC校验与模二运算","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:13:55.103Z","comments":true,"path":"api/articles/Algorithm/CRC、LRC、BCC校验与模二运算.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":" 那简而言之就是 取首位 异或(首位为0 除数为0) 左移 上述三个步骤循环呗 当左移后余数长度小于被除数时则取余 也可以这么理解吧 当余数开头出现n个0的时候就可以全部消掉直到首位是1 商补上n-1个0和一个1就可以了 继续异或运算嘛 我是看到有好几题余数开头俩0的 分析看看 ...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"CRC","slug":"CRC","count":1,"path":"api/tags/CRC.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"Catalan Number","uid":"413173748dc9f0bf852352ce35bf92b1","slug":"Algorithm/Catalan number","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:12:38.288Z","comments":true,"path":"api/articles/Algorithm/Catalan number.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"wikipedia-en: Catalan number - Wikipedia wikipedia-cn:卡塔兰数 - 维基百科，自由的百科全书 (wikipedia.org) 强烈推荐这篇博客：卡特兰(Catalan)数入门详解 - Morning_Glory - 博客园 (...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"String Processing","slug":"String-Processing","count":7,"path":"api/tags/String-Processing.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"Dijkstra Algorithm","uid":"d42b57b5bace0bb67392a01a7601ad24","slug":"Algorithm/Dijkstra","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:14:51.763Z","comments":true,"path":"api/articles/Algorithm/Dijkstra.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Dijkstra 算法详解概述Dijkstra 算法是求一个图中一个点到其他所有点的最短路径的算法 Dijkstra 算法是一个基于「贪心」、「广度优先搜索」、「动态规划」求一个图中一个点到其他所有点的最短路径的算法，时间复杂度 O(n2) $$\\begin{align}&amp...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Shortest Path Algorithm","slug":"Shortest-Path-Algorithm","count":1,"path":"api/tags/Shortest-Path-Algorithm.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"利用递归、无循环地打印数组","uid":"7dbcf1e35df66bdccacdaed2ecd943d3","slug":"Algorithm/ReverseOutputWithoutCycle","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:19:21.158Z","comments":true,"path":"api/articles/Algorithm/ReverseOutputWithoutCycle.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"ReverseOutputWithoutCycle描述：不用循环，不逐一赋值地把一个数组逆序输出 循环 -&gt; 递归；即用递归去承担原本循环的工作 即： void Print(int[] arr, int len) &#123; if (len &gt; 0) &#123; ...","link":"","photos":[],"count_time":{"symbolsCount":250,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Recursion","slug":"Recursion","count":1,"path":"api/tags/Recursion.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"全排列","uid":"4bbde60d3dafb255adad1c9293392efa","slug":"Algorithm/Permutations","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:15:31.702Z","comments":true,"path":"api/articles/Algorithm/Permutations.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Permutations - 全排列顾名思义，就是找出当前元素所有可行的序列 一个朴素的思想是递归，这种方式简单但并不高效快捷 以两个示例来进行算法说明： Example1: 实验五 数据输出 实验准备理解数据输入、输出的技巧。 实验目的理解算法设计的数学基本思想，理解算法程序化...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"穷举","slug":"穷举","count":1,"path":"api/tags/穷举.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"Sugiyama Algorithm","uid":"9fd0e4d3dba46b1add7af94a3f9b782a","slug":"Algorithm/Sugiyama","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:20:19.908Z","comments":true,"path":"api/articles/Algorithm/Sugiyama.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"划时代的自动布局算法：sugiyama算法sugiyama algorithm stepsof the framework is to divide the task of drawing a graph into several subproblems, most of whi...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Auto Layout","slug":"Auto-Layout","count":1,"path":"api/tags/Auto-Layout.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},{"title":"中国邮递员问题","uid":"08152463b75b8ab3478d28a28a35a8b9","slug":"Algorithm/The Chinese Postman Problem","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:20:45.139Z","comments":true,"path":"api/articles/Algorithm/The Chinese Postman Problem.json","cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"The Route of the PostmanReference The Chinese-Postman-Method (tum.de) 邮递员问题 - 维基百科，自由的百科全书 (wikipedia.org) 中国邮递员问题 | Junnor.G (cfonheart.git...","link":"","photos":[],"count_time":{"symbolsCount":815,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Shortest Route","slug":"Shortest-Route","count":1,"path":"api/tags/Shortest-Route.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}]}