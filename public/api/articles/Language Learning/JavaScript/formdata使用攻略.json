{"title":"formdata使用攻略","uid":"a7427683ffea4c224c83d4bf0c430464","slug":"Language Learning/JavaScript/formdata使用攻略","date":"2021-06-02T04:23:23.000Z","updated":"2023-10-27T19:49:28.000Z","comments":true,"path":"api/articles/Language Learning/JavaScript/formdata使用攻略.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"formdata使用攻略\">formdata使用攻略</h1>\r\n<p><a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/Using_FormData_Objects#使用formdata对象上传文件\">FormData\r\n对象的使用 - Web API 接口参考 | MDN (mozilla.org)</a></p>\r\n<blockquote>\r\n<p>FormData\r\n对象用以将数据编译成键值对，以便用<code>XMLHttpRequest</code>来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed\r\ndata)，而独立于表单使用。如果表单<code>enctype</code>属性设为\r\nmultipart/form-data ，则会使用表单的<a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/submit\"><code>submit()</code></a>方法来发送数据，从而，发送数据具有同样形式。</p>\r\n</blockquote>\r\n<h2 id=\"从零开始创建-formdata-对象\">从零开始创建 FormData 对象</h2>\r\n<p>你可以自己创建一个<code>FormData</code>对象，然后调用它的<a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/append\"><code>append()</code></a>方法来添加字段，像这样：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送键值对</span></span><br><span class=\"line\">formData.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;Groucho&quot;</span>);</span><br><span class=\"line\">formData.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;accountnum&quot;</span>, <span class=\"number\">123456</span>); <span class=\"comment\">//数字123456会被立即转换成字符串 &quot;123456&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// HTML 文件类型input，由用户选择</span></span><br><span class=\"line\">formData.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;userfile&quot;</span>, fileInputElement.<span class=\"property\">files</span>[<span class=\"number\">0</span>]); <span class=\"comment\">// fileInputElement是 file类型的input标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// JavaScript file-like 对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> content = <span class=\"string\">&#x27;&lt;a id=&quot;a&quot;&gt;&lt;b id=&quot;b&quot;&gt;hey!&lt;/b&gt;&lt;/a&gt;&#x27;</span>; <span class=\"comment\">// 新文件的正文</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([content], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&quot;text/xml&quot;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">formData.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;webmasterfile&quot;</span>, blob);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">request.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;POST&quot;</span>, <span class=\"string\">&quot;http://foo.com/submitform.php&quot;</span>);</span><br><span class=\"line\">request.<span class=\"title function_\">send</span>(formData);</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"上传文件思路\">上传文件思路：</h2>\r\n<p>利用 h5\r\n的<code>input</code>标签，将其<code>type</code>设置为<code>file</code></p>\r\n<p><a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/file\">&lt;input\r\ntype=\"file\"&gt; - HTML（超文本标记语言） | MDN (mozilla.org)</a></p>\r\n<p>此时，注意其一特殊的内置属性：<code>files</code>属性，它会以<code>FileList</code>对象的形式列出已选择的文件</p>\r\n<p><a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileList\">FileList\r\n- Web API 接口参考 | MDN (mozilla.org)</a></p>\r\n<p>值得注意的是，<code>Filelist</code>不是<code>formdata</code>，请不要尝试直接将<code>Filelist</code>对象发送给后端</p>\r\n<p>同时，如需发送<code>formdata</code>，请先行创建一个<code>FormData</code>对象</p>\r\n<p><code>FormData</code>并非一定需要一个<code>form</code>来作为基础进行创建，但一定需要键值对</p>\r\n<p>也可以利用</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formdata.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;file&quot;</span>, <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;fileInput&quot;</span>).<span class=\"property\">files</span>[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\r\n<p>手动将传入的文件加入 formdata 对象中</p>\r\n<p>发送请求时，需要特别设置其请求头：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&quot;multipart/form-data&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>防止所发送的文件被错误地转换了格式</p>\r\n<h3 id=\"循环获取-formdata-内容\">循环获取 formdata 内容</h3>\r\n<p><a\r\nhref=\"https://stackoverflow.com/questions/17066875/how-to-inspect-formdata\">javascript\r\n- How to inspect FormData? - Stack Overflow</a></p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> [a, b] <span class=\"keyword\">of</span> formData.<span class=\"title function_\">entries</span>()) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a, b, <span class=\"string\">&quot;--------------&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formdata.<span class=\"title function_\">get</span>(key);</span><br></pre></td></tr></table></figure>\r\n<blockquote>\r\n<p><strong>注意</strong>:\r\n所有的输入元素都需要有<strong>name</strong>属性，否则无法访问到值。</p>\r\n<p>——<a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/FormData\">FormData()\r\n- Web API 接口参考 | MDN (mozilla.org)</a></p>\r\n</blockquote>\r\n<h2 id=\"上传文件完整攻略\">上传文件完整攻略：</h2>\r\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;form&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Choose File to Send: <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">multiple</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">required</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 注意，用于输入的input一定要有name --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Send the file!&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> form = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;form&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    form.<span class=\"title function_\">addEventListener</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;submit&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> oData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>(form);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">axios</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">method</span>: <span class=\"string\">&quot;post&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">url</span>: <span class=\"string\">&quot;upload&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;multipart/form-data&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">data</span>: oData,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">timeout</span>: <span class=\"number\">3000</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ev.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// 阻止对应组件的默认行为,此处为防止页面刷新导致努力ba</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    );</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># flask 后台</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/upload&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">upload_file</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(request.files)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(request.files.getlist(<span class=\"string\">&#x27;file&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        upload_files = request.files.getlist(<span class=\"string\">&#x27;file&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> upload_files:</span><br><span class=\"line\">            i.save(i.filename + <span class=\"string\">&#x27;.jpg&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;OK!&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Wrong!&quot;</span></span><br></pre></td></tr></table></figure>\r\n","text":"formdata使用攻略 FormData 对象的使用 - Web API 接口参考 | MDN (mozilla.org) FormData 对象用以将数据编译成键值对，以便用XMLHttpRequest来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed d...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Language Learning","slug":"Language-Learning","count":6,"path":"api/categories/Language-Learning.json"},{"name":"Javascripts","slug":"Language-Learning/Javascripts","count":1,"path":"api/categories/Language-Learning/Javascripts.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":16,"path":"api/tags/Language-Learning.json"},{"name":"Javascripts","slug":"Javascripts","count":3,"path":"api/tags/Javascripts.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#formdata%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5\"><span class=\"toc-text\">formdata使用攻略</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%88%9B%E5%BB%BA-formdata-%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">从零开始创建 FormData 对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">上传文件思路：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E8%8E%B7%E5%8F%96-formdata-%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">循环获取 formdata 内容</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%AE%8C%E6%95%B4%E6%94%BB%E7%95%A5\"><span class=\"toc-text\">上传文件完整攻略：</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"RESTful规范 - 如何写API","uid":"a92e2fc05670d2982e0ff2c87e209a38","slug":"Dev/Theory/RESTful规范 - 如何写API","date":"2021-07-23T04:23:23.000Z","updated":"2023-10-27T19:44:56.000Z","comments":true,"path":"api/articles/Dev/Theory/RESTful规范 - 如何写API.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"RESTful规范 - 如何写API 如果是对同一个表进行数据操作，应该使用同一条 API，然后根据 method 的不同，进行不同的操作 1GET/POST/PUT/DELETE/PATCH 面向资源编程，通过 API 提交的参数最好是名词如 name，尽量少用动词 1http...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/categories/Theroy.json"}],"tags":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/tags/Theroy.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"线程、进程、协程、与 CPU 多核","uid":"3be3467b821b2606f2e2f4a1380f6410","slug":"Dev/Theory/线程进程协程与CPU","date":"2021-05-23T04:23:23.000Z","updated":"2023-10-27T19:44:22.000Z","comments":true,"path":"api/articles/Dev/Theory/线程进程协程与CPU.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"线程、进程、协程、与 CPU 多核 一、进程、线程、协程的概念 进程： 是并发执行的程序在执行过程中分配和管理资源的基本单位，是一个动态概念，竞争计算机系统资源的基本单位。 线程： 是进程的一个执行单元，是进程内科调度实体。比进程更小的独立运行的基本单位。线程也被称为轻量级进程。...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/categories/Theroy.json"}],"tags":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/tags/Theroy.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}