{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/JavaScript/formdata使用攻略","date":"2023-03-07T16:14:45.510Z","updated":"2022-05-22T08:53:57.000Z","comments":true,"path":"api/articles/Language Learning/JavaScript/formdata使用攻略.json","keywords":null,"cover":null,"content":"<p><a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/Using_FormData_Objects#使用formdata对象上传文件\">FormData\r\n对象的使用 - Web API 接口参考 | MDN (mozilla.org)</a></p>\r\n<blockquote>\r\n<p>FormData对象用以将数据编译成键值对，以便用<code>XMLHttpRequest</code>来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed\r\ndata)，而独立于表单使用。如果表单<code>enctype</code>属性设为multipart/form-data\r\n，则会使用表单的<a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLFormElement/submit\"><code>submit()</code></a>方法来发送数据，从而，发送数据具有同样形式。</p>\r\n</blockquote>\r\n<h2 id=\"从零开始创建formdata对象\">从零开始创建FormData对象</h2>\r\n<p>你可以自己创建一个<code>FormData</code>对象，然后调用它的<a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/append\"><code>append()</code></a>方法来添加字段，像这样：</p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var formData &#x3D; new FormData();\n\n&#x2F;&#x2F; 发送键值对\nformData.append(&quot;username&quot;, &quot;Groucho&quot;);\nformData.append(&quot;accountnum&quot;, 123456); &#x2F;&#x2F;数字123456会被立即转换成字符串 &quot;123456&quot;\n\n&#x2F;&#x2F; HTML 文件类型input，由用户选择\nformData.append(&quot;userfile&quot;, fileInputElement.files[0]); &#x2F;&#x2F; fileInputElement是 file类型的input标签\n\n&#x2F;&#x2F; JavaScript file-like 对象\nvar content &#x3D; &#39;&lt;a id&#x3D;&quot;a&quot;&gt;&lt;b id&#x3D;&quot;b&quot;&gt;hey!&lt;&#x2F;b&gt;&lt;&#x2F;a&gt;&#39;; &#x2F;&#x2F; 新文件的正文\nvar blob &#x3D; new Blob([content], &#123; type: &quot;text&#x2F;xml&quot;&#125;);\n\nformData.append(&quot;webmasterfile&quot;, blob);\n\n&#x2F;&#x2F; 发送\nvar request &#x3D; new XMLHttpRequest();\nrequest.open(&quot;POST&quot;, &quot;http:&#x2F;&#x2F;foo.com&#x2F;submitform.php&quot;);\nrequest.send(formData);</code></pre>\r\n<h2 id=\"上传文件思路\">上传文件思路：</h2>\r\n<p>利用h5的<code>input</code>标签，将其<code>type</code>设置为<code>file</code></p>\r\n<p><a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/file\">&lt;input\r\ntype=\"file\"&gt; - HTML（超文本标记语言） | MDN (mozilla.org)</a></p>\r\n<p>此时，注意其一特殊的内置属性：<code>files</code>属性，它会以<code>FileList</code>对象的形式列出已选择的文件</p>\r\n<p><a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileList\">FileList\r\n- Web API 接口参考 | MDN (mozilla.org)</a></p>\r\n<p>值得注意的是，<code>Filelist</code>不是<code>formdata</code>，请不要尝试直接将<code>Filelist</code>对象发送给后端</p>\r\n<p>同时，如需发送<code>formdata</code>，请先行创建一个<code>FormData</code>对象</p>\r\n<p><code>FormData</code>并非一定需要一个<code>form</code>来作为基础进行创建，但一定需要键值对</p>\r\n<p>也可以利用</p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">formdata.append(&#39;file&#39;, document.getElementById(&quot;fileInput&quot;).files[0])</code></pre>\r\n<p>手动将传入的文件加入formdata对象中</p>\r\n<p>发送请求时，需要特别设置其请求头：</p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">headers: &#123;\n      &#39;Content-Type&#39;: &quot;multipart&#x2F;form-data&quot;,\n&#125;</code></pre>\r\n<p>防止所发送的文件被错误地转换了格式</p>\r\n<h3 id=\"循环获取formdata内容\">循环获取formdata内容</h3>\r\n<p><a\r\nhref=\"https://stackoverflow.com/questions/17066875/how-to-inspect-formdata\">javascript\r\n- How to inspect FormData? - Stack Overflow</a></p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">for (var [a, b] of formData.entries()) &#123;\n  console.log(a, b, &#39;--------------&#39;);\n&#125;</code></pre>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">formdata.get(key)</code></pre>\r\n<blockquote>\r\n<p><strong>注意</strong>:\r\n所有的输入元素都需要有<strong>name</strong>属性，否则无法访问到值。</p>\r\n<p>——<a\r\nhref=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/FormData\">FormData()\r\n- Web API 接口参考 | MDN (mozilla.org)</a></p>\r\n</blockquote>\r\n<h2 id=\"上传文件完整攻略\">上传文件完整攻略：</h2>\r\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n&lt;form id&#x3D;&quot;form&quot;&gt;\n    &lt;label&gt;Choose File to Send: &lt;&#x2F;label&gt;\n    &lt;input type&#x3D;&quot;file&quot; multiple name&#x3D;&quot;file&quot; required&#x2F;&gt; &lt;!-- 注意，用于输入的input一定要有name --&gt;\n    &lt;br &#x2F;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Send the file!&quot;&#x2F;&gt;\n&lt;&#x2F;form&gt;\n&lt;script&gt;\n    var form &#x3D; document.getElementById(&#39;form&#39;);\n    form.addEventListener(&#39;submit&#39;, function (ev) &#123;\n        var oData &#x3D; new FormData(form);\n\n        axios(&#123;\n            method: &quot;post&quot;,\n            url: &quot;upload&quot;,\n            headers: &#123;\n                &#39;Content-Type&#39;: &quot;multipart&#x2F;form-data&quot;,\n            &#125;,\n            data: oData,\n            timeout: 3000,\n        &#125;).then(res &#x3D;&gt; &#123;\n            console.log(res)\n        &#125;)\n        ev.preventDefault(); &#x2F;&#x2F; 阻止对应组件的默认行为,此处为防止页面刷新导致努力ba\n    &#125;, false);\n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\r\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># flask 后台\n@app.route(&#39;&#x2F;upload&#39;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])\ndef upload_file():\n    if request.method &#x3D;&#x3D; &#39;POST&#39;:\n        print(request.files)\n\n        print(request.files.getlist(&#39;file&#39;))\n\n        upload_files &#x3D; request.files.getlist(&#39;file&#39;)\n\n        for i in upload_files:\n            i.save(i.filename + &#39;.jpg&#39;)\n        return &quot;OK!&quot;\n    else:\n        return &quot;Wrong!&quot;</code></pre>\r\n","text":"FormData 对象的使用 - Web API 接口参考 | MDN (mozilla.org) FormData对象用以将数据编译成键值对，以便用XMLHttpRequest来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed data)，而独立于表单使用。...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%88%9B%E5%BB%BAformdata%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">从零开始创建FormData对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">上传文件思路：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E8%8E%B7%E5%8F%96formdata%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">循环获取formdata内容</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%AE%8C%E6%95%B4%E6%94%BB%E7%95%A5\"><span class=\"toc-text\">上传文件完整攻略：</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/JavaScript/函数","date":"2023-03-07T16:14:45.542Z","updated":"2022-02-12T09:25:42.000Z","comments":true,"path":"api/articles/Language Learning/JavaScript/函数.json","keywords":null,"cover":null,"text":"箭头函数 箭头函数 - JavaScript | MDN (mozilla.org) 说明 箭头函数表达式的语法比函数表达式更简洁，并且没有自己的this，arguments，super或new.target。箭头函数表达式更适用于那些本来需要匿名函数的地方，并且它不能用作构造函...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Language Learning/Java/JavaProject/module_info文件有什么用","date":"2023-03-07T16:14:45.500Z","updated":"2021-10-02T16:49:38.000Z","comments":true,"path":"api/articles/Language Learning/Java/JavaProject/module_info文件有什么用.json","keywords":null,"cover":null,"text":"module 本模块的名称&#123; exports 对外暴露的包路径; requires 需要依赖的其他模块名称; &#125; 一、什么是Java module？ 与Java 中的package有些类似，module引入了Java代码分组的另一个级别。每个这样的分组（mod...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}