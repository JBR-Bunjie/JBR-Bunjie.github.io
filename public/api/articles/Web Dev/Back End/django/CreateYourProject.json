{"title":"创建Django项目","uid":"1223d7521828be4194e268189685670f","slug":"Web Dev/Back End/django/CreateYourProject","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T09:08:31.000Z","comments":true,"path":"api/articles/Web Dev/Back End/django/CreateYourProject.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h3 id=\"step-0.-figure-out-the-environment-of-your-computer\">Step 0.\r\nfigure out the environment of your computer</h3>\r\n<ul>\r\n<li>editor: vs code</li>\r\n<li>OS: windows 11</li>\r\n<li>Shell: powershell</li>\r\n</ul>\r\n<h3 id=\"step1.-create-the-virtual-environment\">Step1. create the virtual\r\nenvironment</h3>\r\n<ol type=\"1\">\r\n<li>we create a new folder named \"django_test\"</li>\r\n<li>we run this command</li>\r\n</ol>\r\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python -m venv .&#x2F;venv</code></pre>\r\n<p>so that we will see a folder in \"django_test\" named \"venv\" has been\r\ncreated, what happened?</p>\r\n<ul>\r\n<li><p>what is <code>python -m</code> ?</p></li>\r\n<li><p>what is venv?</p></li>\r\n</ul>\r\n<p>we can have a pure new environment of python which help us a lot.</p>\r\n<p>for example, we can use\r\n<code>pip freeze &gt; requirement.txt</code></p>\r\n<ol start=\"3\" type=\"1\">\r\n<li>active the virtual environment</li>\r\n</ol>\r\n<p>after creating the venv folder, you can see there folders inside, and\r\nwe enter the \"Script\" folder and exec activate.ps1 in powershell, then\r\nyou should see the new command line like:</p>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">(venv) PS C:\\Project\\django_test&gt;</code></pre>\r\n<p>it means we have activated the virtual environment successfully.</p>\r\n<p>Now, you can use where command and you will see that the python.exe\r\nof venv folder was placed at the first place.</p>\r\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">(venv) PS C:\\Project\\django_test&gt; where.exe python\nC:\\Project\\django_test\\venv\\Scripts\\python.exe\nC:\\Users\\m1518\\AppData\\Local\\Programs\\Python\\Python310\\python.exe\nC:\\Users\\m1518\\AppData\\Local\\Microsoft\\WindowsApps\\python.exe</code></pre>\r\n<p>特别的，当你在powershell下使用脚本时，可能会遇到如下问题：</p>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">&lt;YouProjectPath&gt;\\venv\\Scripts&gt; .\\activate.ps1\n.\\activate.ps1 : 无法加载文件 &lt;YouProjectPath&gt;\\venv\\Scripts\\Activate.ps1，\n因为在此系统上禁止运行脚本。有关\n详细信息，请参阅 https:&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 \n中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ .\\activate.ps1\n+ ~~~~~~~~~~~~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess</code></pre>\r\n<p>这是因为在默认情况下，PowerShell对脚本的管理策略时是 Restricted。</p>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Restricted 执行策略不允许任何脚本运行。AllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。本主题说明如何运行所选未签名脚本（即使在执行策略为 RemoteSigned 的情况下），还说明如何对 脚本进行签名以便您自己使用。有关 Windows PowerShell 执行策略的详细信息，请参阅 about_Execution_Policy。</code></pre>\r\n<p>想了解 计算机上的现用执行策略，在<code>PowerShell</code> 然后输入\r\n<code>get-executionpolicy</code></p>\r\n<p>默认情况下返回的是 <code>Restricted</code></p>\r\n<p>以管理员身份打开<code>PowerShell</code> 输入\r\n<code>**set-executionpolicy remotesigned**</code></p>\r\n<p>就可以正常在 <code>PowerShell</code> 中运行 <code>ps1</code>\r\n文件了</p>\r\n<blockquote>\r\n<p><a\r\nhref=\"https://stackoverflow.com/questions/72144882/set-executionpolicy-unrestricted-permission-denied\">powershell\r\n- Set-ExecutionPolicy unrestricted permission denied - Stack\r\nOverflow</a></p>\r\n</blockquote>\r\n<ol start=\"4\" type=\"1\">\r\n<li>退出</li>\r\n</ol>\r\n<p>退出虚拟环境很简单，只需要执行 <code>deactivate</code>\r\n命令就行，这个命令也在虚拟环境的脚本目录下，因为激活时，将脚本目录设置到\r\nPATH 中了，所以可以直接使用</p>\r\n<p>当然也可以直接输入<code>powershell</code>或<code>bash</code>等来重启你的terminal</p>\r\n<h3 id=\"step-2.-install-django\">Step 2. install Django</h3>\r\n<p>just use these commands below:</p>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">pip install django\n\npip install django-fliter\n\n# pip install markdown\n\ncd ..\ndjango-admin startproject &lt;YourProjectName&gt;\ncd &lt;YourProjectName&gt;</code></pre>\r\n<p>You can see your project have been created well here.</p>\r\n<p>You can start the server directly by using\r\n<code>python manage.py runserver</code>, you will see something.</p>\r\n<h3 id=\"links\">Links</h3>\r\n<ul>\r\n<li><a\r\nhref=\"https://superuser.com/questions/675837/equivalent-of-cmds-where-in-powershell\">windows\r\n- Equivalent of cmd's \"where\" in powershell - Super User</a></li>\r\n<li>https://www.youtube.com/watch?v=F5mRW0jo-U4&amp;t=2866s</li>\r\n<li><a href=\"https://docs.python.org/3/library/venv.html\">venv —\r\nCreation of virtual environments — Python 3.10.7 documentation</a></li>\r\n</ul>\r\n<h3 id=\"create-a-superuser\">Create a Superuser</h3>\r\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">(venv) PS C:\\Project\\django_test\\helloworld&gt; python manage.py createsuperuser\nUsername (leave blank to use &#39;m1518&#39;): \nEmail address: jbr_bunjie@outlook.com\nPassword: \nPassword (again): \nSuperuser created successfully.</code></pre>\r\n","text":"Step 0. figure out the environment of your computer editor: vs code OS: windows 11 Shell: powershell Step1. create the virtual environment w...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Backend","slug":"Backend","count":1,"path":"api/categories/Backend.json"}],"tags":[{"name":"Python","slug":"Python","count":3,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":1,"path":"api/tags/Django.json"},{"name":"Windows Powershell","slug":"Windows-Powershell","count":1,"path":"api/tags/Windows-Powershell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#step-0.-figure-out-the-environment-of-your-computer\"><span class=\"toc-text\">Step 0.\r\nfigure out the environment of your computer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#step1.-create-the-virtual-environment\"><span class=\"toc-text\">Step1. create the virtual\r\nenvironment</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#step-2.-install-django\"><span class=\"toc-text\">Step 2. install Django</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#links\"><span class=\"toc-text\">Links</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#create-a-superuser\"><span class=\"toc-text\">Create a Superuser</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Merge Sort - 归并排序","uid":"f8c8a85b34fcac6d0fefec2d2d2d9cd5","slug":"Algorithm/SORT/MergeSort/Merge Sort","date":"2022-12-23T04:23:23.000Z","updated":"2023-03-08T01:08:56.235Z","comments":true,"path":"api/articles/Algorithm/SORT/MergeSort/Merge Sort.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Merge Sort 归并排序 Reference： 1.5 归并排序 | 菜鸟教程 (runoob.com) 算法步骤： 概述： 申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列； 设定两个指针，最初位置分别为两个已经排序序列的起始位置； 比较两个指针所指向...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Sort","slug":"Sort","count":3,"path":"api/tags/Sort.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"Prim’s Minimum Spanning Tree","uid":"b14408b92d0c8809e1d3bbbaabf2879c","slug":"Algorithm/Prim/Prim","date":"2022-12-22T04:23:23.000Z","updated":"2023-03-08T01:28:32.646Z","comments":true,"path":"api/articles/Algorithm/Prim/Prim.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":" Prim算法(Python实现)_JohnJim的博客-CSDN博客_prim算法python ","link":"","photos":[],"count_time":{"symbolsCount":51,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":26,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"MST","slug":"MST","count":1,"path":"api/tags/MST.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}