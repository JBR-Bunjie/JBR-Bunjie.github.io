{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Front End/奇技淫巧","date":"2023-03-07T16:14:46.397Z","updated":"2022-06-14T09:34:14.000Z","comments":true,"path":"api/articles/Web Dev/Front End/奇技淫巧.json","keywords":null,"cover":null,"content":"<h2 id=\"载入内容的防止缓存策略\">载入内容的防止缓存策略</h2>\r\n<p>在HTML页面更新后浏览器存在大部分时机影响更新页面的使用，非技术人员根本意识不到内容是否有更新</p>\r\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;head&gt; \n    &lt;!--  --&gt;\n    &lt;meta http-equiv&#x3D;&quot;Expires&quot; content&#x3D;&quot;0&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;Pragma&quot; content&#x3D;&quot;no-cache&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;Cache-control&quot; content&#x3D;&quot;no-cache&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;Cache&quot; content&#x3D;&quot;no-cache&quot;&gt;\n\n    &lt;!-- 动态加载js以更新数据与控制逻辑 --&gt;\n    &lt;script&gt;\n        document.write(&#39;&lt;script src&#x3D;&quot;&#x2F;static&#x2F;js&#x2F;basicScatter.js?adv&#x3D;&#39;+Math.random()+&#39;&quot;&gt;&lt;\\&#x2F;script&gt;&#39;);\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;head&gt;</code></pre>\r\n<p>由于加入了随机数，每次都会载入“全新的目标文件”，阻止了网页缓存，保证修改的及时展示</p>\r\n<h2 id=\"debugger\">Debugger</h2>\r\n<p>只要在代码中添加<strong>debugger</strong>，chrome在运行的时候会自动停在那里。还可以用条件语句把它包裹起来，这样就可以在需要的时候才执行它。</p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">if (true) &#123;\n  debugger;\n&#125;</code></pre>\r\n<h2 id=\"console\">Console</h2>\r\n<h3 id=\"console.log\">2.1 console.log</h3>\r\n<p>在<strong>console.log()</strong>中，可以用<strong>%s</strong>设置字符串，<strong>%i</strong>设置数字，<strong>%c</strong>设置自定义样式，<strong>console.log()</strong>接受的两个参数，前者是描述性的语言，而第二个参数是与第一个参数位置对应的字符</p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(&#39; %c %s %s %s&#39;, &#39;color: yellow; background-color: black;&#39;, &#39;–&#39;, &#39;测试信息&#39;, &#39;–&#39;);</code></pre>\r\n<h3 id=\"console.table\">2.2 <a\r\nhref=\"https://www.zhihu.com/search?q=console.table&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2447274053%7D\">console.table</a>()</h3>\r\n<p>很多的时候，你可能会有一堆对象需要查看。可以用<strong>console.log</strong>把每一个对象都输出出来，也可以用<strong>console.table</strong>语句直接把所有的对象都直接输出成为一个表格</p>\r\n<figure>\r\n<img\r\nsrc=\"https://pic2.zhimg.com/80/v2-026fb33c47ec938f0437cf1e2ea1ebf3_1440w.jpg?source=1940ef5c\"\r\nalt=\"img\" />\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<h3 id=\"console.time和console.timeend\">2.3 <a\r\nhref=\"https://www.zhihu.com/search?q=console.time&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2447274053%7D\">console.time</a>()和console.timeEnd()</h3>\r\n<p>当想知道某些代码的执行时间的时候这个工具将会非常有用，特别是当你定位很耗时的循环的时候。</p>\r\n<figure>\r\n<img\r\nsrc=\"https://pic4.zhimg.com/80/v2-88a626ccc68b7de3eca873294e9e544b_1440w.jpg?source=1940ef5c\"\r\nalt=\"img\" />\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<h3 id=\"console.trace\">2.4 console.trace()</h3>\r\n<p><strong>console.trace()</strong>会显示函数调用的完整的堆栈轨迹信息</p>\r\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">getTopN2(arr, n) &#123;\n  &#x2F;&#x2F; sort参数返回值大于1，就交换位置\n  console.trace(&#39;getTopN2&#39;);\n  return [...arr].sort((a, b) &#x3D;&gt; b - a).slice(0, n)\n&#125;</code></pre>\r\n<p>结果如下：</p>\r\n<figure>\r\n<img\r\nsrc=\"https://pic2.zhimg.com/80/v2-66c10aff7b405e9b142ba7b415dc4098_1440w.jpg?source=1940ef5c\"\r\nalt=\"img\" />\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<p><a\r\nhref=\"https://www.zhihu.com/question/35667558/answer/2447274053\">(14\r\n封私信 / 80 条消息) 前端页面，用 JavaScript 在调试 Bug\r\n时有哪些奇技淫巧？ - 知乎 (zhihu.com)</a></p>\r\n","text":"载入内容的防止缓存策略 在HTML页面更新后浏览器存在大部分时机影响更新页面的使用，非技术人员根本意识不到内容是否有更新 &lt;head&gt; &lt;!-- --&gt; &lt;meta http-equiv&#x3D;&quot;Expires&quot; conten...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%BD%E5%85%A5%E5%86%85%E5%AE%B9%E7%9A%84%E9%98%B2%E6%AD%A2%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">载入内容的防止缓存策略</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#debugger\"><span class=\"toc-text\">Debugger</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#console\"><span class=\"toc-text\">Console</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#console.log\"><span class=\"toc-text\">2.1 console.log</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#console.table\"><span class=\"toc-text\">2.2 console.table()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#console.time%E5%92%8Cconsole.timeend\"><span class=\"toc-text\">2.3 console.time()和console.timeEnd()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#console.trace\"><span class=\"toc-text\">2.4 console.trace()</span></a></li></ol></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Front End/建立一个个人网站吧","date":"2023-03-07T16:14:46.401Z","updated":"2021-02-18T10:21:09.000Z","comments":true,"path":"api/articles/Web Dev/Front End/建立一个个人网站吧.json","keywords":null,"cover":null,"text":"建立一个个人网站吧 感想：这是本站的第一篇文章，这篇文章的上传意味着——这个站子正式成立了！ 前言：本文是在“云服务器”上建立个人网站的基础向教程，并不要求有什么编程基础 缘由：我个人中二的以为，建立一个个人网站，即使是在大学里，都是很装逼的事 注意事项：你可能需要准备 ","link":"","photos":[],"count_time":{"symbolsCount":143,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Web Dev/Front End/前端框架","date":"2023-03-07T16:14:46.396Z","updated":"2021-09-26T14:27:24.000Z","comments":true,"path":"api/articles/Web Dev/Front End/前端框架.json","keywords":null,"cover":null,"text":"动画模板： Animate Animate.css | A cross-browser library of CSS animations. UI框架： Vuetify Vue Material Design Component Framework — Vuetify.js Bo...","link":"","photos":[],"count_time":{"symbolsCount":615,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}