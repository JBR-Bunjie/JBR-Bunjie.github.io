{"title":"RESTful规范 - 如何写API","uid":"a92e2fc05670d2982e0ff2c87e209a38","slug":"Dev/Theory/RESTful规范 - 如何写API","date":"2021-07-23T04:23:23.000Z","updated":"2023-10-27T19:44:56.000Z","comments":true,"path":"api/articles/Dev/Theory/RESTful规范 - 如何写API.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","content":"<h1 id=\"restful规范---如何写api\">RESTful规范 - 如何写API</h1>\r\n<ol type=\"1\">\r\n<li><p>如果是对同一个表进行数据操作，应该使用同一条 API，然后根据 method\r\n的不同，进行不同的操作</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET/POST/PUT/DELETE/PATCH</span><br></pre></td></tr></table></figure></li>\r\n<li><p>面向资源编程，通过 API 提交的参数最好是名词如\r\nname，尽量少用动词</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.abc.com/name</span><br></pre></td></tr></table></figure></li>\r\n<li><p>体现版本，在 API 中加入像 v1, v2 这样的版本代号</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.abc.com/v1/name</span><br><span class=\"line\">http://www.abc.com/v2/name</span><br></pre></td></tr></table></figure></li>\r\n<li><p>体现 API，让使用者一眼能看出这是 API 而不是 URL，应该在 API\r\n中加入提示：</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.abc.com/api/v1/name</span><br><span class=\"line\">http://www.abc.com/api/v2/name</span><br></pre></td></tr></table></figure></li>\r\n<li><p>使用 HTTPS</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.abc.com/api/v1/name</span><br><span class=\"line\">https://www.abc.com/api/v2/name</span><br></pre></td></tr></table></figure></li>\r\n<li><p>响应式设置状态码</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;abcde&#x27;</span>, status=<span class=\"number\">200</span>)</span><br></pre></td></tr></table></figure></li>\r\n<li><p>API 的参数里加入筛选条件参数，也可以理解为获取资源优先选择 GET\r\n的方式</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.abc.com/api/v2/name?page=1&amp;size=10</span><br></pre></td></tr></table></figure></li>\r\n<li><p>返回值的规范，对不同的请求 method，做出相应的响应值如：</p>\r\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-&gt; https://www.abc.com/api/v1/name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> GET: 所有列表</span><br><span class=\"line\"><span class=\"bullet\">-</span> POST: 新增的数据</span><br><span class=\"line\"></span><br><span class=\"line\">-&gt; https://www.abc.com/api/v1/name/1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> GET: 单条数据</span><br><span class=\"line\"><span class=\"bullet\">-</span> PUT: 更新，返回更新的数据</span><br><span class=\"line\"><span class=\"bullet\">-</span> PATCH: 局部更新，返回更新的数据</span><br><span class=\"line\"><span class=\"bullet\">-</span> DELETE: 删除，返回空文档</span><br></pre></td></tr></table></figure></li>\r\n<li><p>返回错误信息，包括错误代号等，让用户直接看出是哪种类型错误</p>\r\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ret <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    code<span class=\"punctuation\">:</span> <span class=\"number\">1000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    data<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"number\">1</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>&#x27;id&#x27;<span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> &#x27;title&#x27;<span class=\"punctuation\">:</span> &#x27;lala&#x27;<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\r\n<li><p>返回的详细信息，应该以字典的形式存放在 data 中\r\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ret <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    code<span class=\"punctuation\">:</span> <span class=\"number\">1000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    data<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"number\">1</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>&#x27;id&#x27;<span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> &#x27;title&#x27;<span class=\"punctuation\">:</span> &#x27;lala&#x27;<span class=\"punctuation\">,</span> &#x27;detail&#x27;<span class=\"punctuation\">:</span> &#x27;lalalalala&#x27;<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></p></li>\r\n</ol>\r\n","text":"RESTful规范 - 如何写API 如果是对同一个表进行数据操作，应该使用同一条 API，然后根据 method 的不同，进行不同的操作 1GET/POST/PUT/DELETE/PATCH 面向资源编程，通过 API 提交的参数最好是名词如 name，尽量少用动词 1http...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/categories/Theroy.json"}],"tags":[{"name":"Theroy","slug":"Theroy","count":5,"path":"api/tags/Theroy.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#restful%E8%A7%84%E8%8C%83---%E5%A6%82%E4%BD%95%E5%86%99api\"><span class=\"toc-text\">RESTful规范 - 如何写API</span></a></li></ol>","author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}},"mapped":true,"prev_post":{"title":"Hello World, Hello Hexo","uid":"6adf345a8e80c4aa1ee89482b75933eb","slug":"Deploy/Hexo使用","date":"2021-09-07T14:09:05.000Z","updated":"2023-10-27T19:03:57.000Z","comments":true,"path":"api/articles/Deploy/Hexo使用.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"Hello World, Hello Hexo Hexo 的基础配置 安装 hexo-cli 1npm install hexo-cli -g 完成 hexo 的部署： 12345npm install hexo-cli -ghexo init &lt;name&gt; # 注意...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/categories/Hexo.json"}],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}},"next_post":{"title":"formdata使用攻略","uid":"a7427683ffea4c224c83d4bf0c430464","slug":"Language Learning/JavaScript/formdata使用攻略","date":"2021-06-02T04:23:23.000Z","updated":"2023-10-27T19:49:28.000Z","comments":true,"path":"api/articles/Language Learning/JavaScript/formdata使用攻略.json","keywords":null,"cover":"https://raw.githubusercontent.com/JBR-Bunjie/JBR-Bunjie/main/back.jpg","text":"formdata使用攻略 FormData 对象的使用 - Web API 接口参考 | MDN (mozilla.org) FormData 对象用以将数据编译成键值对，以便用XMLHttpRequest来发送数据。其主要用于发送表单数据，但亦可用于发送带键数据(keyed d...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Language Learning","slug":"Language-Learning","count":6,"path":"api/categories/Language-Learning.json"},{"name":"Javascripts","slug":"Language-Learning/Javascripts","count":1,"path":"api/categories/Language-Learning/Javascripts.json"}],"tags":[{"name":"Language Learning","slug":"Language-Learning","count":16,"path":"api/tags/Language-Learning.json"},{"name":"Javascripts","slug":"Javascripts","count":3,"path":"api/tags/Javascripts.json"}],"author":{"name":"JBR_Bunjie","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/90251718?v=4","link":"/","description":"仿生程序员会在光环上遇见AI乐正绫吗？","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/415377461"},"github":{"icon":"/svg/social_github.svg","link":"https://github.com/JBR-Bunjie"}}}}}}